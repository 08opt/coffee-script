#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 404)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'9,257,222,239,36,43,50,56,63,2,7,13,19,24,234,199,41,47,55,60,14,21',
'10,20,26,14,21,39,46,209,61,239,5,11,88,92,30,35,127,49,54,62,1,6,12',
'246,126,14,21,42,216,36,43,50,56,63,2,7,13,19,24,14,21,215,196,198,235',
'202,197,30,20,26,214,222,258,240,132,14,21,25,150,33,9,48,35,59,36,43',
'50,56,63,2,7,13,19,24,152,210,41,47,55,60,250,240,10,20,26,14,21,39',
'46,153,61,228,5,11,73,248,30,35,262,49,54,62,1,6,12,172,33,242,48,42',
'59,36,43,50,56,63,2,7,13,19,24,133,71,245,233,139,127,14,21,,20,26,14',
'21,126,,132,132,132,25,,33,9,48,35,59,36,43,50,56,63,2,7,13,19,24,,30',
'41,47,55,60,,263,10,20,26,14,21,39,46,,61,,5,11,74,75,30,35,,49,54,62',
'1,6,12,,33,,48,42,59,36,43,50,56,63,2,7,13,19,24,133,133,133,267,135',
'135,135,14,21,20,26,127,88,92,,132,132,132,25,126,33,9,48,35,59,36,43',
'50,56,63,2,7,13,19,24,14,21,41,47,55,60,,30,10,20,26,14,21,39,46,,61',
',5,11,-152,-152,30,35,,49,54,62,1,6,12,,33,,48,42,59,36,43,50,56,63',
'2,7,13,19,24,133,133,133,265,135,139,139,14,21,20,26,14,21,,191,132',
'192,,25,,33,9,48,35,59,36,43,50,56,63,2,7,13,19,24,131,,41,47,55,60',
',240,10,20,26,14,21,39,46,,61,,5,11,88,92,30,35,,49,54,62,1,6,12,,33',
',48,42,59,-152,-152,,137,14,21,,191,14,21,133,191,,231,135,14,21,232',
'191,88,92,95,98,103,213,132,-152,-152,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,131,,41,47,55,60,-152,-152,10,20,26,-152,-152,39,46,,61',
',5,11,-152,-152,30,35,,49,54,62,1,6,12,14,21,-152,-152,42,,,,230,137',
'88,92,95,98,103,,133,,,,135,88,92,95,98,103,106,109,112,114,116,84,87',
'91,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,,,,,,,14',
'21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,88,92,95',
'98,103,106,109,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47',
'55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,88',
'92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113',
'115,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47',
'55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,88',
'92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113',
'115,88,92,95,98,103,106,109,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105',
'108,111,113,115,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105',
'108,111,113,115,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105',
'108,111,113,115,88,92,95,98,103,106,109,,25,,33,9,48,,59,36,43,50,56',
'63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,',
'49,54,62,1,6,12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91',
'94,97,102,105,108,111,113,115,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49',
'54,62,1,6,12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91,88',
'92,95,98,103,106,109,112,114,116,84,87,91,,,,25,,33,9,48,,59,36,43,50',
'56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35',
',49,54,62,1,6,12,,,,,42,88,92,95,98,103,106,109,112,114,116,84,87,91',
'88,92,95,98,103,106,109,112,114,116,,,,,,,25,,33,9,48,,59,36,43,50,56',
'63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,',
'49,54,62,1,6,12,,,,,42,88,92,95,98,103,106,109,112,114,116,88,92,95',
'98,103,106,109,112,114,116,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2',
'7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54',
'62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43',
'50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30',
'35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48',
',59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61',
',5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,14',
'21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55',
'60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24',
',,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2',
'7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54',
'62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43',
'50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30',
'35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48',
',59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61',
',5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,14',
'21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47',
'55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49',
'54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36',
'43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11',
',,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33',
'9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46',
',61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10',
'20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,',
',,,,,,,,,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41',
'47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,255,48,,59,36,43,50,56',
'63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,',
'49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,33,9,48',
',59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61',
',5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,14',
'21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47',
'55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,',
',,,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,33,9,48,,59,36,43,50,56,63,2,7,13',
'19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1',
'6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,33,9,48,,59,36,43,50',
'56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35',
',49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59',
'36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5',
'11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,',
'33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39',
'46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10',
'20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47',
'55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49',
'54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36',
'43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11',
',,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33',
'9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46',
',61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55',
'60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24',
',,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2',
'7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54',
'62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43',
'50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30',
'35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48',
',59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61',
',5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25',
',33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,',
'39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,',
',10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41',
'47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49',
'54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36',
'43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11',
',,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33',
'9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46',
',61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55',
'60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24',
',,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2',
'7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54',
'62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43',
'50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30',
'35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48',
',59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61',
',5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25',
',33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,',
'39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,',
',10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41',
'47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19',
'24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6',
'12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63',
'2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49',
'54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33,9,48,,59,36',
'43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46,,61,,5,11',
',,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,33',
'9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20,26,,,39,46',
',61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55,60,,,10,20',
'26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,33,9,48,,59,36,43,50,56,63,2,7,13,19,24,,,41,47,55',
'60,,,10,20,26,,,39,46,,61,,5,11,,,30,35,,49,54,62,1,6,12,89,,,99,42',
',,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,25,,33,,48,,59,,,88,92,95,98,103,106',
'109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90,93,96',
'101,104,107,110,,,82,85,89,,148,99,,229,,,,,,,,,,,,,,,,,,,,100,,,,,',
'81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102',
'105,108,111,113,115,83,86,90,93,96,101,104,107,110,,,82,85,14,21,89',
',148,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90',
'93,96,101,104,107,110,,,82,85,14,21,89,,148,99,,,,,,,,,,,,,,,,,,,,,',
'100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91',
'94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,,,82,85',
'14,21,89,,148,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95',
'98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83',
'86,90,93,96,101,104,107,110,,,82,85,14,21,89,,148,99,,,,,,,,,,,,,,,',
',,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84',
'87,91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,',
',82,85,14,21,89,,,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88',
'92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113',
'115,83,86,90,93,96,101,104,107,110,,89,82,85,99,,,,,,,,,,,,,,,,,,,,',
',100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91',
'94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,,89,82',
'85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106',
'109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90,93,96',
'101,104,107,110,,89,82,85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,',
',,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108',
'111,113,115,83,86,90,93,96,101,104,107,110,,89,82,85,99,,,,,,,,,,,,',
',,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116',
'84,87,91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110',
',89,82,85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98',
'103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86',
'90,93,96,101,104,107,110,,89,82,85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,',
'81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102',
'105,108,111,113,115,83,86,90,93,96,101,104,107,110,,89,82,85,99,,,,',
',,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112',
'114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104',
'107,110,,89,82,85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88',
'92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113',
'115,83,86,90,93,96,101,104,107,110,271,89,82,85,99,,,,,,,,,,,,,,,,,',
',,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87',
'91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,,89',
'82,85,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90',
'93,96,101,104,107,110,89,,,99,,,,,,,,,,,,,,,,,,,,,,100,,,,,,81,,,,,',
',,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108',
'111,113,115,83,86,90,93,96,101,104,107,110,89,,,99,,,,,,,,,,,,,,,,,',
',,,,100,,,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87',
'91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,100',
',,,,,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97',
'102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,100,,,,,,81,',
',,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105',
'108,111,113,115,83,86,90,93,96,101,104,107,110,100,,,,,,81,,,,,,,,,',
',,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111',
'113,115,83,86,90,93,96,101,104,107,110,81,,,,,,,,,,,,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90',
'93,96,101,104,107,110,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114',
'116,84,87,91,94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107',
'110,81,,,,,,,,,,,,88,92,95,98,103,106,109,112,114,116,84,87,91,94,97',
'102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,88,92,95,98,103',
'106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86,90',
'93,96,101,104,107,110,88,92,95,98,103,106,109,112,114,116,84,87,91,94',
'97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,88,92,95,98',
'103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83,86',
'90,93,96,101,104,107,110,88,92,95,98,103,106,109,112,114,116,84,87,91',
'94,97,102,105,108,111,113,115,83,86,90,93,96,101,104,107,110,88,92,95',
'98,103,106,109,112,114,116,84,87,91,94,97,102,105,108,111,113,115,83',
'86,90,93,96,101,104,107,110' ]
        racc_action_table = arr = Array.new(8128, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,244,194,236,0,0,0,0,0,0,0,0,0,0,211,127,0,0,0,0,142,142,0,0,0,77,77',
'0,0,142,0,212,0,0,167,167,0,0,48,0,0,0,0,0,0,221,48,268,268,0,173,250',
'250,250,250,250,250,250,250,250,250,125,125,172,125,126,211,132,125',
'48,250,250,151,221,244,236,53,0,0,0,73,0,1,0,250,0,1,1,1,1,1,1,1,1,1',
'1,75,143,1,1,1,1,230,212,1,1,1,212,212,1,1,78,1,203,1,1,16,221,1,1,250',
'1,1,1,1,1,1,100,250,215,250,1,250,131,131,131,131,131,131,131,131,131',
'131,53,11,220,210,53,195,220,220,,131,131,143,143,195,,200,261,269,1',
',1,5,1,131,1,5,5,5,5,5,5,5,5,5,5,,195,5,5,5,5,,252,5,5,5,252,252,5,5',
',5,,5,5,18,18,5,5,,5,5,5,5,5,5,,131,,131,5,131,262,262,262,262,262,262',
'262,262,262,262,200,261,269,259,200,261,269,259,259,262,262,196,170',
'170,,122,201,123,5,196,5,6,5,262,5,6,6,6,6,6,6,6,6,6,6,79,79,6,6,6,6',
',196,6,6,6,28,28,6,6,,6,,6,6,120,120,6,6,,6,6,6,6,6,6,,262,,262,6,262',
'47,47,47,47,47,47,47,47,47,47,122,201,123,256,122,201,123,256,256,47',
'47,117,117,,117,52,117,,6,,6,9,6,47,6,9,9,9,9,9,9,9,9,9,9,52,,9,9,9',
'9,,272,9,9,9,272,272,9,9,,9,,9,9,176,176,9,9,,9,9,9,9,9,9,,47,,47,9',
'47,68,68,,52,206,206,,206,208,208,52,208,,206,52,149,149,208,149,179',
'179,179,179,179,149,205,145,145,9,,9,10,9,,9,10,10,10,10,10,10,10,10',
'10,10,205,,10,10,10,10,140,140,10,10,10,72,72,10,10,,10,,10,10,129,129',
'10,10,,10,10,10,10,10,10,251,251,66,66,10,,,,205,205,182,182,182,182',
'182,,205,,,,205,169,169,169,169,169,169,169,169,169,169,169,169,169',
'10,,10,270,10,,10,270,270,270,270,270,270,270,270,270,270,,,270,270',
'270,270,,,270,270,270,,,270,270,,270,,270,270,,,270,270,,270,270,270',
'270,270,270,,,,,270,165,165,165,165,165,165,165,165,165,165,165,165',
'165,165,165,165,165,165,165,165,165,,,,,,,270,270,270,,270,12,270,,270',
'12,12,12,12,12,12,12,12,12,12,,,12,12,12,12,,,12,12,12,,,12,12,,12,',
'12,12,,,12,12,,12,12,12,12,12,12,,,,,12,157,157,157,157,157,157,157',
'157,157,157,157,157,157,157,157,157,157,157,157,157,157,187,187,187',
'187,187,187,187,,12,,12,146,12,,12,146,146,146,146,146,146,146,146,146',
'146,,,146,146,146,146,,,146,146,146,,,146,146,,146,,146,146,,,146,146',
',146,146,146,146,146,146,,,,,146,181,181,181,181,181,181,181,181,181',
'181,181,181,181,181,181,181,181,181,181,181,181,,,,,,,146,146,146,,146',
'139,146,,146,139,139,139,139,139,139,139,139,139,139,,,139,139,139,139',
',,139,139,139,,,139,139,,139,,139,139,,,139,139,,139,139,139,139,139',
'139,,,,,139,160,160,160,160,160,160,160,160,160,160,160,160,160,160',
'160,160,160,160,160,160,160,185,185,185,185,185,185,185,,139,,139,23',
'139,,139,23,23,23,23,23,23,23,23,23,23,,,23,23,23,23,,,23,23,23,,,23',
'23,,23,,23,23,,,23,23,,23,23,23,23,23,23,,,,,23,188,188,188,188,188',
'188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,,,,',
',,23,23,23,,23,25,23,,23,25,25,25,25,25,25,25,25,25,25,,,25,25,25,25',
',,25,25,25,,,25,25,,25,,25,25,,,25,25,,25,25,25,25,25,25,,,,,25,186',
'186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186',
'186,186,186,,,,,,,25,25,25,,25,137,25,,25,137,137,137,137,137,137,137',
'137,137,137,,,137,137,137,137,,,137,137,137,,,137,137,,137,,137,137',
',,137,137,,137,137,137,137,137,137,,,,,137,163,163,163,163,163,163,163',
'163,163,163,163,163,163,163,163,163,163,163,163,163,163,189,189,189',
'189,189,189,189,,137,,137,135,137,,137,135,135,135,135,135,135,135,135',
'135,135,,,135,135,135,135,,,135,135,135,,,135,135,,135,,135,135,,,135',
'135,,135,135,135,135,135,135,,,,,135,184,184,184,184,184,184,184,184',
'184,184,184,184,184,184,184,184,184,184,184,184,184,,,,,,,,,135,,135',
'33,135,,135,33,33,33,33,33,33,33,33,33,33,,,33,33,33,33,,,33,33,33,',
',33,33,,33,,33,33,,,33,33,,33,33,33,33,33,33,,,,,33,175,175,175,175',
'175,175,175,175,175,175,175,175,175,178,178,178,178,178,178,178,178',
'178,178,178,178,178,,,,33,,33,39,33,,33,39,39,39,39,39,39,39,39,39,39',
',,39,39,39,39,,,39,39,39,,,39,39,,39,,39,39,,,39,39,,39,39,39,39,39',
'39,,,,,39,166,166,166,166,166,166,166,166,166,166,166,166,166,158,158',
'158,158,158,158,158,158,158,158,,,,,,,39,,39,42,39,,39,42,42,42,42,42',
'42,42,42,42,42,,,42,42,42,42,,,42,42,42,,,42,42,,42,,42,42,,,42,42,',
'42,42,42,42,42,42,,,,,42,161,161,161,161,161,161,161,161,161,161,164',
'164,164,164,164,164,164,164,164,164,,,,,,,,,,42,,42,46,42,,42,46,46',
'46,46,46,46,46,46,46,46,,,46,46,46,46,,,46,46,46,,,46,46,,46,,46,46',
',,46,46,,46,46,46,46,46,46,,,,,46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,46,,46',
'133,46,,46,133,133,133,133,133,133,133,133,133,133,,,133,133,133,133',
',,133,133,133,,,133,133,,133,,133,133,,,133,133,,133,133,133,133,133',
'133,,,,,133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,133,,133,260,133,,133,260,260',
'260,260,260,260,260,260,260,260,,,260,260,260,260,,,260,260,260,,,260',
'260,,260,,260,260,,,260,260,,260,260,260,260,260,260,,,,,260,,,,,,,',
',,,,,,,,,,,,,,,,,,,,260,260,260,,260,49,260,,260,49,49,49,49,49,49,49',
'49,49,49,,,49,49,49,49,,,49,49,49,,,49,49,,49,,49,49,,,49,49,,49,49',
'49,49,49,49,,,,,49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,49,,49,257,49,,49,257',
'257,257,257,257,257,257,257,257,257,,,257,257,257,257,,,257,257,257',
',,257,257,,257,,257,257,,,257,257,,257,257,257,257,257,257,,,,,257,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,257,,257,255,257,,257,255,255,255,255,255',
'255,255,255,255,255,,,255,255,255,255,,,255,255,255,,,255,255,,255,',
'255,255,,,255,255,,255,255,255,255,255,255,,,,,255,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,255,,255,54,255,,255,54,54,54,54,54,54,54,54,54,54,,,54',
'54,54,54,,,54,54,54,,,54,54,,54,,54,54,,,54,54,,54,54,54,54,54,54,,',
',,54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,54,,54,55,54,,54,55,55,55,55,55,55',
'55,55,55,55,,,55,55,55,55,,,55,55,55,,,55,55,,55,,55,55,,,55,55,,55',
'55,55,55,55,55,,,,,55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,55,,55,59,55,,55',
'59,59,59,59,59,59,59,59,59,59,,,59,59,59,59,,,59,59,59,,,59,59,,59,',
'59,59,,,59,59,,59,59,59,59,59,59,,,,,59,,,,,,,,,,,,,,,,,,,,,,,,,,,,59',
'59,59,,59,60,59,,59,60,60,60,60,60,60,60,60,60,60,,,60,60,60,60,,,60',
'60,60,,,60,60,,60,,60,60,,,60,60,,60,60,60,60,60,60,,,,,60,,,,,,,,,',
',,,,,,,,,,,,,,,,,,60,60,60,,60,61,60,,60,61,61,61,61,61,61,61,61,61',
'61,,,61,61,61,61,,,61,61,61,,,61,61,,61,,61,61,,,61,61,,61,61,61,61',
'61,61,,,,,61,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,61,,61,62,61,,61,62,62,62',
'62,62,62,62,62,62,62,,,62,62,62,62,,,62,62,62,,,62,62,,62,,62,62,,,62',
'62,,62,62,62,62,62,62,,,,,62,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,62,,62,190',
'62,,62,190,190,190,190,190,190,190,190,190,190,,,190,190,190,190,,,190',
'190,190,,,190,190,,190,,190,190,,,190,190,,190,190,190,190,190,190,',
',,,190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,190,,190,191,190,,190,191,191,191',
'191,191,191,191,191,191,191,,,191,191,191,191,,,191,191,191,,,191,191',
',191,,191,191,,,191,191,,191,191,191,191,191,191,,,,,191,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,191,,191,246,191,,191,246,246,246,246,246,246,246',
'246,246,246,,,246,246,246,246,,,246,246,246,,,246,246,,246,,246,246',
',,246,246,,246,246,246,246,246,246,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,',
',,246,246,246,,246,193,246,,246,193,193,193,193,193,193,193,193,193',
'193,,,193,193,193,193,,,193,193,193,,,193,193,,193,,193,193,,,193,193',
',193,193,193,193,193,193,,,,,193,,,,,,,,,,,,,,,,,,,,,,,,,,,,193,193',
'193,,193,198,193,,193,198,198,198,198,198,198,198,198,198,198,,,198',
'198,198,198,,,198,198,198,,,198,198,,198,,198,198,,,198,198,,198,198',
'198,198,198,198,,,,,198,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,198,,198,71,198',
',198,71,71,71,71,71,71,71,71,71,71,,,71,71,71,71,,,71,71,71,,,71,71',
',71,,71,71,,,71,71,,71,71,71,71,71,71,,,,,71,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,71,,71,239,71,,71,239,239,239,239,239,239,239,239,239,239,,,239',
'239,239,239,,,239,239,239,,,239,239,,239,,239,239,,,239,239,,239,239',
'239,239,239,239,,,,,239,,,,,,,,,,,,,,,,,,,,,,,,,,,,239,239,239,,239',
'234,239,,239,234,234,234,234,234,234,234,234,234,234,,,234,234,234,234',
',,234,234,234,,,234,234,,234,,234,234,,,234,234,,234,234,234,234,234',
'234,,,,,234,,,,,,,,,,,,,,,,,,,,,,,,,,,,234,234,234,,234,74,234,,234',
'74,74,74,74,74,74,74,74,74,74,,,74,74,74,74,,,74,74,74,,,74,74,,74,',
'74,74,,,74,74,,74,74,74,74,74,74,,,,,74,,,,,,,,,,,,,,,,,,,,,,,,,,,,74',
'74,74,,74,233,74,,74,233,233,233,233,233,233,233,233,233,233,,,233,233',
'233,233,,,233,233,233,,,233,233,,233,,233,233,,,233,233,,233,233,233',
'233,233,233,,,,,233,,,,,,,,,,,,,,,,,,,,,,,,,,,,233,233,233,,233,76,233',
',233,76,76,76,76,76,76,76,76,76,76,,,76,76,76,76,,,76,76,76,,,76,76',
',76,,76,76,,,76,76,,76,76,76,76,76,76,,,,,76,,,,,,,,,,,,,,,,,,,,,,,',
',,,,76,76,76,,76,199,76,,76,199,199,199,199,199,199,199,199,199,199',
',,199,199,199,199,,,199,199,199,,,199,199,,199,,199,199,,,199,199,,199',
'199,199,199,199,199,,,,,199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199,,199,216',
'199,,199,216,216,216,216,216,216,216,216,216,216,,,216,216,216,216,',
',216,216,216,,,216,216,,216,,216,216,,,216,216,,216,216,216,216,216',
'216,,,,,216,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,216,,216,222,216,,216,222,222',
'222,222,222,222,222,222,222,222,,,222,222,222,222,,,222,222,222,,,222',
'222,,222,,222,222,,,222,222,,222,222,222,222,222,222,,,,,222,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,222,,222,80,222,,222,80,80,80,80,80,80,80,80,80',
'80,,,80,80,80,80,,,80,80,80,,,80,80,,80,,80,80,,,80,80,,80,80,80,80',
'80,80,,,,,80,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,80,,80,81,80,,80,81,81,81',
'81,81,81,81,81,81,81,,,81,81,81,81,,,81,81,81,,,81,81,,81,,81,81,,,81',
'81,,81,81,81,81,81,81,,,,,81,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,81,,81,82',
'81,,81,82,82,82,82,82,82,82,82,82,82,,,82,82,82,82,,,82,82,82,,,82,82',
',82,,82,82,,,82,82,,82,82,82,82,82,82,,,,,82,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,82,,82,83,82,,82,83,83,83,83,83,83,83,83,83,83,,,83,83,83,83,',
',83,83,83,,,83,83,,83,,83,83,,,83,83,,83,83,83,83,83,83,,,,,83,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,83,,83,84,83,,83,84,84,84,84,84,84,84,84,84',
'84,,,84,84,84,84,,,84,84,84,,,84,84,,84,,84,84,,,84,84,,84,84,84,84',
'84,84,,,,,84,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,84,,84,85,84,,84,85,85,85',
'85,85,85,85,85,85,85,,,85,85,85,85,,,85,85,85,,,85,85,,85,,85,85,,,85',
'85,,85,85,85,85,85,85,,,,,85,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,85,,85,86',
'85,,85,86,86,86,86,86,86,86,86,86,86,,,86,86,86,86,,,86,86,86,,,86,86',
',86,,86,86,,,86,86,,86,86,86,86,86,86,,,,,86,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,86,,86,87,86,,86,87,87,87,87,87,87,87,87,87,87,,,87,87,87,87,',
',87,87,87,,,87,87,,87,,87,87,,,87,87,,87,87,87,87,87,87,,,,,87,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,87,,87,89,87,,87,89,89,89,89,89,89,89,89,89',
'89,,,89,89,89,89,,,89,89,89,,,89,89,,89,,89,89,,,89,89,,89,89,89,89',
'89,89,,,,,89,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,89,,89,90,89,,89,90,90,90',
'90,90,90,90,90,90,90,,,90,90,90,90,,,90,90,90,,,90,90,,90,,90,90,,,90',
'90,,90,90,90,90,90,90,,,,,90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,90,,90,91',
'90,,90,91,91,91,91,91,91,91,91,91,91,,,91,91,91,91,,,91,91,91,,,91,91',
',91,,91,91,,,91,91,,91,91,91,91,91,91,,,,,91,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,91,,91,93,91,,91,93,93,93,93,93,93,93,93,93,93,,,93,93,93,93,',
',93,93,93,,,93,93,,93,,93,93,,,93,93,,93,93,93,93,93,93,,,,,93,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,93,,93,94,93,,93,94,94,94,94,94,94,94,94,94',
'94,,,94,94,94,94,,,94,94,94,,,94,94,,94,,94,94,,,94,94,,94,94,94,94',
'94,94,,,,,94,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,94,,94,95,94,,94,95,95,95',
'95,95,95,95,95,95,95,,,95,95,95,95,,,95,95,95,,,95,95,,95,,95,95,,,95',
'95,,95,95,95,95,95,95,,,,,95,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,95,,95,96',
'95,,95,96,96,96,96,96,96,96,96,96,96,,,96,96,96,96,,,96,96,96,,,96,96',
',96,,96,96,,,96,96,,96,96,96,96,96,96,,,,,96,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,96,,96,97,96,,96,97,97,97,97,97,97,97,97,97,97,,,97,97,97,97,',
',97,97,97,,,97,97,,97,,97,97,,,97,97,,97,97,97,97,97,97,,,,,97,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,97,,97,98,97,,97,98,98,98,98,98,98,98,98,98',
'98,,,98,98,98,98,,,98,98,98,,,98,98,,98,,98,98,,,98,98,,98,98,98,98',
'98,98,,,,,98,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,98,,98,99,98,,98,99,99,99',
'99,99,99,99,99,99,99,,,99,99,99,99,,,99,99,99,,,99,99,,99,,99,99,,,99',
'99,,99,99,99,99,99,99,,,,,99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,99,,99,116',
'99,,99,116,116,116,116,116,116,116,116,116,116,,,116,116,116,116,,,116',
'116,116,,,116,116,,116,,116,116,,,116,116,,116,116,116,116,116,116,',
',,,116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,,116,101,116,,116,101,101,101',
'101,101,101,101,101,101,101,,,101,101,101,101,,,101,101,101,,,101,101',
',101,,101,101,,,101,101,,101,101,101,101,101,101,,,,,101,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,101,,101,102,101,,101,102,102,102,102,102,102,102',
'102,102,102,,,102,102,102,102,,,102,102,102,,,102,102,,102,,102,102',
',,102,102,,102,102,102,102,102,102,,,,,102,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,102,,102,103,102,,102,103,103,103,103,103,103,103,103,103,103,,',
'103,103,103,103,,,103,103,103,,,103,103,,103,,103,103,,,103,103,,103',
'103,103,103,103,103,,,,,103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,103,,103,104',
'103,,103,104,104,104,104,104,104,104,104,104,104,,,104,104,104,104,',
',104,104,104,,,104,104,,104,,104,104,,,104,104,,104,104,104,104,104',
'104,,,,,104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,104,,104,105,104,,104,105,105',
'105,105,105,105,105,105,105,105,,,105,105,105,105,,,105,105,105,,,105',
'105,,105,,105,105,,,105,105,,105,105,105,105,105,105,,,,,105,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,105,,105,106,105,,105,106,106,106,106,106,106',
'106,106,106,106,,,106,106,106,106,,,106,106,106,,,106,106,,106,,106',
'106,,,106,106,,106,106,106,106,106,106,,,,,106,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,106,,106,107,106,,106,107,107,107,107,107,107,107,107,107,107',
',,107,107,107,107,,,107,107,107,,,107,107,,107,,107,107,,,107,107,,107',
'107,107,107,107,107,,,,,107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,107,,107,108',
'107,,107,108,108,108,108,108,108,108,108,108,108,,,108,108,108,108,',
',108,108,108,,,108,108,,108,,108,108,,,108,108,,108,108,108,108,108',
'108,,,,,108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,108,,108,109,108,,108,109,109',
'109,109,109,109,109,109,109,109,,,109,109,109,109,,,109,109,109,,,109',
'109,,109,,109,109,,,109,109,,109,109,109,109,109,109,,,,,109,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,109,,109,110,109,,109,110,110,110,110,110,110',
'110,110,110,110,,,110,110,110,110,,,110,110,110,,,110,110,,110,,110',
'110,,,110,110,,110,110,110,110,110,110,,,,,110,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,110,,110,115,110,,110,115,115,115,115,115,115,115,115,115,115',
',,115,115,115,115,,,115,115,115,,,115,115,,115,,115,115,,,115,115,,115',
'115,115,115,115,115,,,,,115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115,,115,112',
'115,,115,112,112,112,112,112,112,112,112,112,112,,,112,112,112,112,',
',112,112,112,,,112,112,,112,,112,112,,,112,112,,112,112,112,112,112',
'112,,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,,112,113,112,,112,113,113',
'113,113,113,113,113,113,113,113,,,113,113,113,113,,,113,113,113,,,113',
'113,,113,,113,113,,,113,113,,113,113,113,113,113,113,,,,,113,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,113,,113,114,113,,113,114,114,114,114,114,114',
'114,114,114,114,,,114,114,114,114,,,114,114,114,,,114,114,,114,,114',
'114,,,114,114,,114,114,114,114,114,114,,,,,114,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,114,,114,111,114,,114,111,111,111,111,111,111,111,111,111,111',
',,111,111,111,111,,,111,111,111,,,111,111,,111,,111,111,,,111,111,,111',
'111,111,111,111,111,204,,,204,111,,,,,,,,,,,,,,,,,,,,,204,,,,,,204,',
',111,,111,,111,,111,,,204,204,204,204,204,204,204,204,204,204,204,204',
'204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204',
'204,,,204,204,121,,121,121,,204,,,,,,,,,,,,,,,,,,,,121,,,,,,121,,,,',
',,,,,,,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121',
'121,121,121,121,121,121,121,121,121,121,121,121,121,121,,,121,121,121',
'121,249,,249,249,,,,,,,,,,,,,,,,,,,,,,249,,,,,,249,,,,,,,,,,,,249,249',
'249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249',
'249,249,249,249,249,249,249,249,249,249,249,,,249,249,249,249,119,,119',
'119,,,,,,,,,,,,,,,,,,,,,,119,,,,,,119,,,,,,,,,,,,119,119,119,119,119',
'119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,119,119,119,119,119,119,,,119,119,119,119,264,,264,264,,,,,',
',,,,,,,,,,,,,,,,264,,,,,,264,,,,,,,,,,,,264,264,264,264,264,264,264',
'264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264',
'264,264,264,264,264,264,,,264,264,264,264,69,,69,69,,,,,,,,,,,,,,,,',
',,,,,69,,,,,,69,,,,,,,,,,,,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
'69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,,,69,69,69,69,219,,',
'219,,,,,,,,,,,,,,,,,,,,,,219,,,,,,219,,,,,,,,,,,,219,219,219,219,219',
'219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219',
'219,219,219,219,219,219,219,219,,243,219,219,243,,,,,,,,,,,,,,,,,,,',
',,243,,,,,,243,,,,,,,,,,,,243,243,243,243,243,243,243,243,243,243,243',
'243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243',
'243,243,,227,243,243,227,,,,,,,,,,,,,,,,,,,,,,227,,,,,,227,,,,,,,,,',
',,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227',
'227,227,227,227,227,227,227,227,227,227,227,227,227,,226,227,227,226',
',,,,,,,,,,,,,,,,,,,,,226,,,,,,226,,,,,,,,,,,,226,226,226,226,226,226',
'226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226',
'226,226,226,226,226,226,226,,32,226,226,32,,,,,,,,,,,,,,,,,,,,,,32,',
',,,,32,,,,,,,,,,,,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,,118,32,32,118,,,,,,,,,,,,,,',
',,,,,,,118,,,,,,118,,,,,,,,,,,,118,118,118,118,118,118,118,118,118,118',
'118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118',
'118,118,118,,218,118,118,218,,,,,,,,,,,,,,,,,,,,,,218,,,,,,218,,,,,',
',,,,,,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218',
'218,218,218,218,218,218,218,218,218,218,218,218,218,218,,154,218,218',
'154,,,,,,,,,,,,,,,,,,,,,,154,,,,,,154,,,,,,,,,,,,154,154,154,154,154',
'154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154',
'154,154,154,154,154,154,154,154,,266,154,154,266,,,,,,,,,,,,,,,,,,,',
',,266,,,,,,266,,,,,,,,,,,,266,266,266,266,266,266,266,266,266,266,266',
'266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266',
'266,266,266,141,266,266,141,,,,,,,,,,,,,,,,,,,,,,141,,,,,,141,,,,,,',
',,,,,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141',
'141,141,141,141,141,141,141,141,141,141,141,141,141,141,,207,141,141',
'207,,,,,,,,,,,,,,,,,,,,,,207,,,,,,207,,,,,,,,,,,,207,207,207,207,207',
'207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207',
'207,207,207,207,207,207,207,207,159,,,159,,,,,,,,,,,,,,,,,,,,,,159,',
',,,,159,,,,,,,,,,,,159,159,159,159,159,159,159,159,159,159,159,159,159',
'159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159',
'156,,,156,,,,,,,,,,,,,,,,,,,,,,156,,,,,,156,,,,,,,,,,,,156,156,156,156',
'156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156',
'156,156,156,156,156,156,156,156,156,171,,,,,,171,,,,,,,,,,,,171,171',
'171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171',
'171,171,171,171,171,171,171,171,171,171,171,162,,,,,,162,,,,,,,,,,,',
'162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162',
'162,162,162,162,162,162,162,162,162,162,162,162,162,70,,,,,,70,,,,,',
',,,,,,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70',
'70,70,70,70,70,70,70,70,70,67,,,,,,,,,,,,67,67,67,67,67,67,67,67,67',
'67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,155,',
',,,,,,,,,,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155',
'155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,144,,,,',
',,,,,,,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144',
'144,144,144,144,144,144,144,144,144,144,144,144,144,144,174,174,174',
'174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174',
'174,174,174,174,174,174,174,174,174,174,183,183,183,183,183,183,183',
'183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183',
'183,183,183,183,183,183,180,180,180,180,180,180,180,180,180,180,180',
'180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180',
'180,180,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177',
'177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,168,168',
'168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168',
'168,168,168,168,168,168,168,168,168,168,168' ]
        racc_action_check = arr = Array.new(8128, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    80,   nil,   nil,   nil,   162,   244,   nil,   nil,   326,
   408,    57,   572,   nil,   nil,   nil,   116,   nil,   117,   nil,
   nil,   nil,   nil,   818,   nil,   900,   nil,   nil,   192,   nil,
   nil,   nil,  7043,  1146,   nil,   nil,   nil,   nil,   nil,  1228,
   nil,   nil,  1310,   nil,   nil,   nil,  1392,   291,    31,  1638,
   nil,   nil,   306,    60,  1884,  1966,   nil,   nil,   nil,  2048,
  2130,  2212,  2294,   nil,   nil,   nil,   412,  7819,   334,  6668,
  7777,  2786,   390,    80,  3032,    78,  3196,   -54,    36,   181,
  3524,  3606,  3688,  3770,  3852,  3934,  4016,  4098,   nil,  4180,
  4262,  4344,   nil,  4426,  4508,  4590,  4672,  4754,  4836,  4918,
   112,  5082,  5164,  5246,  5328,  5410,  5492,  5574,  5656,  5738,
  5820,  6230,  5984,  6066,  6148,  5902,  5000,   239,  7117,  6510,
   235,  6352,   224,   226,   nil,   -18,   -11,   -61,   nil,   399,
   nil,   127,    52,  1474,   nil,  1064,   nil,   982,   nil,   736,
   385,  7413,   -59,    75,  7903,   360,   654,   nil,   nil,   315,
   nil,    -3,   nil,   nil,  7265,  7861,  7633,   579,  1248,  7560,
   743,  1317,  7729,   989,  1327,   497,  1235,   -11,  8053,   431,
   192,  7681,   -19,    22,  7933,  1153,   317,  8023,  1166,   353,
  7993,   661,   420,  7963,  1071,   764,   907,   600,   825,  1010,
  2376,  2458,   nil,  2622,   -29,   141,   229,   nil,  2704,  3278,
   142,   225,   nil,    29,  6275,   388,   304,  7487,   308,   nil,
   131,    -9,    28,   nil,   nil,   114,  3360,   nil,  7191,  6747,
    70,    42,  3442,   nil,   nil,   nil,  6969,  6895,   nil,   nil,
    27,   nil,   nil,  3114,  2950,   nil,     0,   nil,   nil,  2868,
   nil,   nil,   nil,  6821,    -1,   nil,  2540,   nil,   nil,  6431,
    45,   376,   110,   nil,   nil,  1802,   235,  1720,   nil,   153,
  1556,   143,   209,   nil,  6589,   nil,  7339,   nil,   -32,   144,
   490,   nil,   274 ]

racc_action_default = [
    -1,  -152,   -36,   -13,   -95,  -152,  -152,   -37,   -14,  -152,
  -152,  -152,  -152,   -38,   -24,   -15,  -152,  -113,  -152,   -39,
   -32,   -25,   -16,    -2,   -94,   -90,   -33,   -17,    -3,   -96,
   -45,   -18,    -4,  -121,   -97,   -30,   -28,   -19,    -8,  -152,
   -98,   -92,  -152,   -29,   -20,    -9,  -152,  -152,  -107,  -152,
   -31,   -21,   -10,  -111,  -152,  -152,   -34,   -22,   -11,  -152,
  -152,  -152,  -152,   -35,   -23,   -12,   -50,   -86,   -52,  -152,
  -129,  -121,   -51,  -152,   -90,  -152,  -152,    -7,  -152,   -91,
    -6,  -152,  -152,  -152,  -152,  -152,  -152,  -152,   -54,  -152,
  -152,  -152,   -53,  -152,  -152,  -152,  -152,  -152,  -152,  -152,
  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -152,
  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -122,  -152,
   -48,  -152,  -152,  -112,  -108,  -152,  -152,  -152,   -43,   -49,
  -103,  -152,  -152,  -152,   -99,  -121,  -102,  -152,  -100,  -121,
   -46,   -44,  -152,  -127,   -85,   -47,  -152,   -27,   -26,  -152,
   273,  -152,   -93,   -89,    -5,   -87,   -83,   -74,   -63,   -84,
   -75,   -64,  -150,   -76,   -65,   -77,   -66,   -55,   -78,   -67,
   -56,  -151,  -133,  -152,   -79,   -68,   -57,   -80,   -69,   -58,
   -81,   -70,   -59,   -82,   -71,   -60,   -72,   -61,   -73,   -62,
  -152,  -152,  -120,  -152,  -152,  -152,  -152,  -106,  -152,  -152,
  -114,  -152,  -101,  -152,  -152,   -10,  -152,   -40,  -152,  -130,
  -152,  -152,  -152,  -117,   -88,  -152,  -152,  -132,  -124,  -123,
  -152,  -152,  -152,  -139,  -110,  -109,   -41,   -42,  -105,  -104,
  -152,  -115,  -116,  -152,  -152,  -125,  -152,  -147,  -149,  -152,
  -145,  -143,  -134,  -152,    -8,  -131,  -152,  -140,  -137,  -152,
  -152,  -128,  -152,  -148,  -144,  -152,  -152,  -152,  -135,  -152,
  -152,  -118,  -152,  -126,  -152,  -146,  -152,  -138,  -141,  -119,
  -152,  -136,  -142 ]

racc_goto_table = [
    23,    28,   123,   146,   122,   124,   138,   117,   128,    78,
   223,    16,   125,   203,   211,   173,   217,   221,   244,   254,
   253,   nil,   nil,   nil,   nil,   nil,    79,   nil,    80,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   247,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   149,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   193,   nil,   194,   nil,   nil,   151,   nil,
   142,   143,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   147,
   nil,   nil,   nil,   nil,   nil,    79,   138,    80,   nil,    80,
   nil,   nil,   nil,   nil,   nil,   nil,   201,   nil,   200,   nil,
   205,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,
   nil,   nil,   nil,   208,   nil,   nil,   nil,   190,   nil,   147,
   nil,   147,   nil,   nil,   nil,   195,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    80,    80,   nil,   nil,   nil,   212,   nil,   190,
   nil,   nil,   224,   225,   138,   128,   128,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   260,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   220,   nil,   nil,   nil,   270,   nil,
   nil,   nil,   nil,   nil,   nil,   201,   190,   261,   190,   nil,
   nil,   nil,    80,   nil,   nil,   nil,   nil,   201,   nil,   269,
    80,   nil,    66,   nil,   nil,   nil,    67,    68,   nil,   nil,
    69,    70,   nil,    72,   251,   252,   nil,   nil,   nil,   nil,
   256,   nil,   nil,   nil,   nil,   nil,   nil,   259,   nil,   147,
   nil,    80,    80,   nil,   118,   nil,    80,   nil,   nil,    80,
   119,   268,   nil,   120,   147,   nil,   nil,   121,    80,   nil,
   129,   272,    80,   nil,   nil,   140,   141,   nil,   nil,   nil,
   nil,   nil,   144,   145,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   154,   155,   156,   157,   158,   159,   160,   161,   nil,
   162,   163,   164,   nil,   165,   166,   167,   168,   169,   170,
   171,   nil,   174,   175,   176,   177,   178,   179,   180,   181,
   182,   183,   184,   185,   186,   187,   188,   189,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   204,   nil,   118,   nil,   207,   nil,
   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   218,   219,   nil,   nil,   nil,   nil,   nil,   nil,   226,
   227,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   243,   nil,   nil,
   nil,   nil,   nil,   249,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   264,   nil,   266 ]

racc_goto_check = [
     2,     3,    30,    21,     7,    23,    29,    36,    20,    25,
    41,     1,    34,    33,    37,    38,    39,    40,     5,    42,
    44,   nil,   nil,   nil,   nil,   nil,     3,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    36,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,    25,   nil,
     3,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,     3,    29,     2,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,    30,   nil,     7,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
   nil,   nil,   nil,    36,   nil,   nil,   nil,     2,   nil,     2,
   nil,     2,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,     2,   nil,   nil,   nil,     3,   nil,     2,
   nil,   nil,    23,    23,    29,    20,    20,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,    30,     2,     7,     2,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,    30,   nil,     7,
     2,   nil,     4,   nil,   nil,   nil,     4,     4,   nil,   nil,
     4,     4,   nil,     4,     3,     3,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     2,
   nil,     2,     2,   nil,     4,   nil,     2,   nil,   nil,     2,
     4,     3,   nil,     4,     2,   nil,   nil,     4,     2,   nil,
     4,     3,     2,   nil,   nil,     4,     4,   nil,   nil,   nil,
   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,   nil,
     4,     4,     4,   nil,     4,     4,     4,     4,     4,     4,
     4,   nil,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,     4,   nil,     4,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,     4 ]

racc_goto_pointer = [
   nil,    11,     0,     1,   221,  -198,   nil,   -43,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -40,   -66,   nil,   -43,   nil,   -16,   nil,   nil,   nil,   -47,
   -45,   nil,   nil,  -120,   -36,   nil,   -26,  -129,   -85,  -157,
  -177,  -184,  -217,   nil,  -216,   nil ]

racc_goto_default = [
   nil,   nil,    76,    77,    32,    38,    45,    52,    58,    65,
     3,     8,    15,    22,    27,    31,    37,    44,    51,    57,
    64,   nil,     4,   nil,    18,   nil,    29,    34,    40,   134,
    53,   136,   130,   nil,   nil,    17,   nil,   nil,   nil,   nil,
   nil,   nil,   241,   236,   237,   238 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 90, :_reduce_1,
  1, 90, :_reduce_2,
  1, 90, :_reduce_3,
  1, 92, :_reduce_4,
  3, 92, :_reduce_5,
  2, 92, :_reduce_6,
  2, 92, :_reduce_7,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  1, 111, :_reduce_28,
  1, 111, :_reduce_29,
  1, 111, :_reduce_30,
  1, 111, :_reduce_31,
  1, 111, :_reduce_32,
  1, 111, :_reduce_33,
  1, 111, :_reduce_34,
  1, 111, :_reduce_35,
  1, 111, :_reduce_36,
  1, 111, :_reduce_37,
  1, 111, :_reduce_38,
  1, 111, :_reduce_39,
  3, 100, :_reduce_40,
  3, 112, :_reduce_41,
  3, 112, :_reduce_42,
  1, 112, :_reduce_43,
  2, 104, :_reduce_44,
  1, 109, :_reduce_45,
  2, 99, :_reduce_46,
  2, 99, :_reduce_47,
  2, 99, :_reduce_48,
  2, 99, :_reduce_49,
  2, 99, :_reduce_50,
  2, 99, :_reduce_51,
  2, 99, :_reduce_52,
  2, 99, :_reduce_53,
  2, 99, :_reduce_54,
  3, 99, :_reduce_55,
  3, 99, :_reduce_56,
  3, 99, :_reduce_57,
  3, 99, :_reduce_58,
  3, 99, :_reduce_59,
  3, 99, :_reduce_60,
  3, 99, :_reduce_61,
  3, 99, :_reduce_62,
  3, 99, :_reduce_63,
  3, 99, :_reduce_64,
  3, 99, :_reduce_65,
  3, 99, :_reduce_66,
  3, 99, :_reduce_67,
  3, 99, :_reduce_68,
  3, 99, :_reduce_69,
  3, 99, :_reduce_70,
  3, 99, :_reduce_71,
  3, 99, :_reduce_72,
  3, 99, :_reduce_73,
  3, 99, :_reduce_74,
  3, 99, :_reduce_75,
  3, 99, :_reduce_76,
  3, 99, :_reduce_77,
  3, 99, :_reduce_78,
  3, 99, :_reduce_79,
  3, 99, :_reduce_80,
  3, 99, :_reduce_81,
  3, 99, :_reduce_82,
  3, 99, :_reduce_83,
  3, 99, :_reduce_84,
  2, 99, :_reduce_85,
  2, 99, :_reduce_86,
  3, 99, :_reduce_87,
  4, 98, :_reduce_88,
  3, 98, :_reduce_89,
  0, 114, :_reduce_90,
  1, 114, :_reduce_91,
  1, 113, :_reduce_92,
  3, 113, :_reduce_93,
  1, 96, :_reduce_94,
  1, 96, :_reduce_95,
  1, 96, :_reduce_96,
  1, 96, :_reduce_97,
  1, 96, :_reduce_98,
  2, 96, :_reduce_99,
  2, 96, :_reduce_100,
  2, 118, :_reduce_101,
  1, 118, :_reduce_102,
  1, 118, :_reduce_103,
  3, 120, :_reduce_104,
  3, 121, :_reduce_105,
  3, 116, :_reduce_106,
  0, 123, :_reduce_107,
  1, 123, :_reduce_108,
  3, 123, :_reduce_109,
  3, 123, :_reduce_110,
  1, 97, :_reduce_111,
  2, 97, :_reduce_112,
  1, 97, :_reduce_113,
  3, 108, :_reduce_114,
  4, 119, :_reduce_115,
  4, 119, :_reduce_116,
  4, 124, :_reduce_117,
  4, 122, :_reduce_118,
  5, 122, :_reduce_119,
  3, 115, :_reduce_120,
  0, 125, :_reduce_121,
  1, 125, :_reduce_122,
  3, 125, :_reduce_123,
  3, 125, :_reduce_124,
  4, 102, :_reduce_125,
  6, 102, :_reduce_126,
  0, 126, :_reduce_127,
  3, 126, :_reduce_128,
  2, 103, :_reduce_129,
  3, 117, :_reduce_130,
  5, 105, :_reduce_131,
  4, 106, :_reduce_132,
  1, 127, :_reduce_133,
  3, 127, :_reduce_134,
  3, 128, :_reduce_135,
  5, 128, :_reduce_136,
  5, 107, :_reduce_137,
  7, 107, :_reduce_138,
  1, 129, :_reduce_139,
  2, 129, :_reduce_140,
  4, 130, :_reduce_141,
  5, 131, :_reduce_142,
  1, 132, :_reduce_143,
  2, 132, :_reduce_144,
  1, 133, :_reduce_145,
  3, 133, :_reduce_146,
  1, 134, :_reduce_147,
  2, 134, :_reduce_148,
  5, 101, :_reduce_149,
  3, 101, :_reduce_150,
  3, 101, :_reduce_151 ]

racc_reduce_n = 152

racc_shift_n = 273

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :THEN => 4,
  :UNLESS => 5,
  :NUMBER => 6,
  :STRING => 7,
  :REGEX => 8,
  :TRUE => 9,
  :FALSE => 10,
  :YES => 11,
  :NO => 12,
  :ON => 13,
  :OFF => 14,
  :IDENTIFIER => 15,
  :PROPERTY_ACCESS => 16,
  :CODE => 17,
  :PARAM => 18,
  :NEW => 19,
  :RETURN => 20,
  :TRY => 21,
  :CATCH => 22,
  :FINALLY => 23,
  :THROW => 24,
  :BREAK => 25,
  :CONTINUE => 26,
  :FOR => 27,
  :IN => 28,
  :WHILE => 29,
  :SWITCH => 30,
  :WHEN => 31,
  :DELETE => 32,
  :INSTANCEOF => 33,
  :TYPEOF => 34,
  :SUPER => 35,
  :EXTENDS => 36,
  :NEWLINE => 37,
  :COMMENT => 38,
  :JS => 39,
  :UMINUS => 40,
  :NOT => 41,
  "!" => 42,
  "!!" => 43,
  "~" => 44,
  "++" => 45,
  "--" => 46,
  "*" => 47,
  "/" => 48,
  "%" => 49,
  "+" => 50,
  "-" => 51,
  "<<" => 52,
  ">>" => 53,
  ">>>" => 54,
  "&" => 55,
  "|" => 56,
  "^" => 57,
  "<=" => 58,
  "<" => 59,
  ">" => 60,
  ">=" => 61,
  "==" => 62,
  "!=" => 63,
  :IS => 64,
  :ISNT => 65,
  "&&" => 66,
  "||" => 67,
  :AND => 68,
  :OR => 69,
  "-=" => 70,
  "+=" => 71,
  "/=" => 72,
  "*=" => 73,
  "%=" => 74,
  "." => 75,
  :ASSIGN => 76,
  "||=" => 77,
  "&&=" => 78,
  "\n" => 79,
  ";" => 80,
  "=>" => 81,
  "," => 82,
  "[" => 83,
  "]" => 84,
  "{" => 85,
  "}" => 86,
  "(" => 87,
  ")" => 88 }

racc_nt_base = 89

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "THEN",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "EXTENDS",
  "NEWLINE",
  "COMMENT",
  "JS",
  "UMINUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "ISNT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\"%=\"",
  "\".\"",
  "ASSIGN",
  "\"||=\"",
  "\"&&=\"",
  "\"\\n\"",
  "\";\"",
  "\"=>\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "PureExpression",
  "Statement",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Extends",
  "Comment",
  "Then",
  "Literal",
  "AssignObj",
  "ParamList",
  "CodeBody",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "Range",
  "AssignList",
  "Super",
  "ArgList",
  "Catch",
  "ForVariables",
  "ForSource",
  "Whens",
  "When",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_28(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_29(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_40(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_41(val, _values, result)
     result = AssignNode.new(ValueNode.new(val[0]), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_42(val, _values, result)
     result = AssignNode.new(ValueNode.new(LiteralNode.new(val[0])), val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_43(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_44(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_45(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 140)
  def _reduce_46(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 141)
  def _reduce_47(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 159)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 167)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 170)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 171)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 175)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 180)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 181)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 183)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 186)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 189)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_87(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 195)
  def _reduce_88(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 196)
  def _reduce_89(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 201)
  def _reduce_90(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 202)
  def _reduce_91(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 207)
  def _reduce_92(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 208)
  def _reduce_93(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 213)
  def _reduce_94(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 214)
  def _reduce_95(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 215)
  def _reduce_96(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 216)
  def _reduce_97(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_98(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_99(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 219)
  def _reduce_100(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 224)
  def _reduce_101(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 225)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 226)
  def _reduce_103(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 231)
  def _reduce_104(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 236)
  def _reduce_105(val, _values, result)
     result = SliceNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 241)
  def _reduce_106(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 246)
  def _reduce_107(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 247)
  def _reduce_108(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 248)
  def _reduce_109(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 249)
  def _reduce_110(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 254)
  def _reduce_111(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 255)
  def _reduce_112(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 256)
  def _reduce_113(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 261)
  def _reduce_114(val, _values, result)
     result = ExtendsNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 266)
  def _reduce_115(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 267)
  def _reduce_116(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 272)
  def _reduce_117(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 277)
  def _reduce_118(val, _values, result)
     result = RangeNode.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 278)
  def _reduce_119(val, _values, result)
     result = RangeNode.new(val[0], val[4], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 283)
  def _reduce_120(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 288)
  def _reduce_121(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 289)
  def _reduce_122(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 290)
  def _reduce_123(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 291)
  def _reduce_124(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 296)
  def _reduce_125(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 298)
  def _reduce_126(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 303)
  def _reduce_127(val, _values, result)
     result = [nil, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 304)
  def _reduce_128(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 309)
  def _reduce_129(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 314)
  def _reduce_130(val, _values, result)
     result = ParentheticalNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 320)
  def _reduce_131(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 327)
  def _reduce_132(val, _values, result)
     result = ForNode.new(val[0], val[3][0], val[2][0], val[3][1], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 332)
  def _reduce_133(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 333)
  def _reduce_134(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 338)
  def _reduce_135(val, _values, result)
     result = [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 340)
  def _reduce_136(val, _values, result)
     result = [val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 346)
  def _reduce_137(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 348)
  def _reduce_138(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 353)
  def _reduce_139(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 354)
  def _reduce_140(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 359)
  def _reduce_141(val, _values, result)
     result = IfNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 368)
  def _reduce_142(val, _values, result)
     result = IfNode.new(val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 373)
  def _reduce_143(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 374)
  def _reduce_144(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 379)
  def _reduce_145(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 380)
  def _reduce_146(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 385)
  def _reduce_147(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 386)
  def _reduce_148(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 392)
  def _reduce_149(val, _values, result)
     result = IfNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 393)
  def _reduce_150(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 394)
  def _reduce_151(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
