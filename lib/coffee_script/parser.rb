#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 395)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'11,254,267,214,35,43,50,56,63,3,8,15,18,23,201,258,41,47,55,59,20,26',
'12,19,25,242,233,38,46,226,61,225,6,13,88,93,30,34,253,49,54,62,2,7',
'14,233,137,20,26,42,193,-150,-150,220,20,26,211,193,213,261,23,220,137',
'231,20,26,212,137,20,26,20,26,20,26,255,268,199,130,20,26,29,227,39',
'11,53,129,1,35,43,50,56,63,3,8,15,18,23,244,235,41,47,55,59,20,26,12',
'19,25,30,200,38,46,238,61,138,6,13,235,142,30,34,204,49,54,62,2,7,14',
'130,39,138,53,42,1,134,138,129,130,264,134,76,77,152,20,26,129,88,93',
'96,99,104,107,110,113,115,117,84,87,92,30,137,20,26,29,154,39,11,53',
'30,1,35,43,50,56,63,3,8,15,18,23,144,75,41,47,55,59,20,26,12,19,25,-150',
'-150,38,46,147,61,73,6,13,20,26,30,34,155,49,54,62,2,7,14,174,235,20',
'26,42,193,20,26,,146,143,228,20,26,,197,,138,,198,,142,88,93,96,99,104',
'107,110,113,115,117,84,87,92,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,241,41,47,55,59,20,26,12,19,25,20,26,38,46,,61,,6,13,-150,-150,30',
'34,82,49,54,62,2,7,14,-150,-150,88,93,42,88,93,96,99,104,107,110,113',
'115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105',
'108,111,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,88,93,41,47,55,59',
'-150,-150,12,19,25,20,26,38,46,,61,,6,13,-150,-150,30,34,82,49,54,62',
'2,7,14,-150,-150,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95',
'98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,29,,39,11',
'53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,',
'61,,6,13,,,30,34,82,49,54,62,2,7,14,,,,,42,88,93,96,99,104,107,110,113',
'115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105',
'108,111,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,',
'12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88,93,96',
'99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83',
'86,91,94,97,102,105,108,111,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7',
'14,,,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106',
'109,112,114,116,83,86,91,94,97,102,105,108,111,29,,39,11,53,,1,35,43',
'50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30',
'34,,49,54,62,2,7,14,,,,,42,88,93,96,99,104,107,110,113,115,117,84,87',
'92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,29,',
'39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38',
'46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88,93,96,99,104,107,110',
'113,115,117,84,87,92,95,98,103,106,109,112,114,116,88,93,96,99,104,107',
'110,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59',
',,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88,93,96',
'99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83',
'86,91,94,97,102,105,108,111,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7',
'14,,,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106',
'109,112,114,116,88,93,96,99,104,107,110,20,26,29,,39,11,53,,1,35,43',
'50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30',
'34,,49,54,62,2,7,14,,,,,42,88,93,96,99,104,107,110,113,115,117,84,87',
'92,95,98,103,106,109,112,114,116,88,93,96,99,104,107,110,20,26,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88,93,96,99,104,107,110,113',
'115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105',
'108,111,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,',
'12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88,93,96',
'99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,20',
'26,,193,,194,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47',
'55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,88',
'93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114',
'116,88,93,96,99,104,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109',
'112,114,116,88,93,96,99,104,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15',
'18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2',
'7,14,,,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106',
'109,112,114,116,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109',
'112,114,116,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41',
'47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42',
'88,93,96,99,104,107,110,113,115,117,84,87,92,88,93,96,99,104,107,110',
'113,115,117,84,87,92,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7',
'14,,,,,42,88,93,96,99,104,107,110,113,115,117,88,93,96,99,104,107,110',
'113,115,117,88,93,96,99,104,107,110,113,115,117,29,,39,11,53,,1,35,43',
'50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30',
'34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53',
',1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61',
',6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25',
',,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59',
',,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7',
'14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56',
'63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,',
'49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1',
'35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6',
'13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29',
',39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,',
'38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59',
',,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18',
'23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7',
'14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56',
'63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,',
'49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1',
'35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6',
'13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,26',
'29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25',
',,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47',
'55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,249,53,,1,35,43,50,56,63,3,8,15',
'18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2',
'7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,26,29,,39,11,53,,1,35,43',
'50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30',
'34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53',
',1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61',
',6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25',
',,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47',
'55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,20,26,29,,39,11,53,,1,35,43,50,56,63,3,8',
'15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62',
'2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,26,29,,39,11,53,,1,35,43',
'50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30',
'34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20,26,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
',,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63',
'3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49',
'54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35',
'43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13',
',,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,39',
'11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19,25,,,38,46',
',61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55,59,,,12,19',
'25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23,,,41,47,55',
'59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14,,,,,42,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,29,,39,11,53,,1,35,43,50,56,63,3,8,15,18,23',
',,41,47,55,59,,,12,19,25,,,38,46,,61,,6,13,,,30,34,,49,54,62,2,7,14',
'89,,,100,42,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,29,,39,,53,,1,,88,93',
'96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116',
'83,86,91,94,97,102,105,108,111,,,89,85,90,100,,,,,259,,,,,,,,,,,,,,',
',,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92',
'95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,,,,85,90',
',,,229,89,230,150,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88',
'93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114',
'116,83,86,91,94,97,102,105,108,111,,,,85,90,20,26,89,,150,100,,,,,,',
',,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115',
'117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108',
'111,,,,85,90,20,26,89,,150,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,',
',,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109',
'112,114,116,83,86,91,94,97,102,105,108,111,,,,85,90,20,26,89,,150,100',
',,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110',
'113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102',
'105,108,111,,,,85,90,20,26,89,,150,100,,,,,,,,,,,,,,,,,,,,,,101,,,,',
',82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103',
'106,109,112,114,116,83,86,91,94,97,102,105,108,111,,,,85,90,20,26,89',
',,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107',
'110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97',
'102,105,108,111,,,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,',
',,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109',
'112,114,116,83,86,91,94,97,102,105,108,111,,,89,85,90,100,,,,,,,,,,',
',,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117',
'84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111',
',,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96',
'99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83',
'86,91,94,97,102,105,108,111,,,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101',
',,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98',
'103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,,,89,85,90,100',
',,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110',
'113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102',
'105,108,111,,,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,',
',,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112',
'114,116,83,86,91,94,97,102,105,108,111,,,89,85,90,100,,,,,,,,,,,,,,',
',,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84',
'87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,',
',89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99',
'104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86',
'91,94,97,102,105,108,111,,,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,',
',,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103',
'106,109,112,114,116,83,86,91,94,97,102,105,108,111,269,,89,85,90,100',
',,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110',
'113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102',
'105,108,111,272,,89,85,90,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,',
',,,,,,88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109',
'112,114,116,83,86,91,94,97,102,105,108,111,89,,,100,,,,,,,,,,,,,,,,',
',,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117,84,87',
'92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111,89,',
',100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107',
'110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97',
'102,105,108,111,89,,,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,82,,,,,,,,,,',
',88,93,96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112',
'114,116,83,86,91,94,97,102,105,108,111,101,,,,,,82,,,,,,,,,,,,88,93',
'96,99,104,107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116',
'83,86,91,94,97,102,105,108,111,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104',
'107,110,113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91',
'94,97,102,105,108,111,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110',
'113,115,117,84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102',
'105,108,111,101,,,,,,82,,,,,,,,,,,,88,93,96,99,104,107,110,113,115,117',
'84,87,92,95,98,103,106,109,112,114,116,83,86,91,94,97,102,105,108,111' ]
        racc_action_table = arr = Array.new(8634, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,240,262,174,0,0,0,0,0,0,0,0,0,0,133,247,0,0,0,0,247,247,0,0,0,218',
'210,0,0,202,0,201,0,0,169,169,0,0,238,0,0,0,0,0,0,236,124,151,151,0',
'151,131,131,218,206,206,151,206,174,250,47,195,60,206,250,250,153,123',
'78,78,265,265,133,133,240,262,129,196,0,0,0,202,0,1,0,196,0,1,1,1,1',
'1,1,1,1,1,1,218,210,1,1,1,1,210,210,1,1,1,196,130,1,1,213,1,124,1,1',
'236,124,1,1,137,1,1,1,1,1,1,53,47,60,47,1,47,60,123,53,197,256,123,24',
'24,75,256,256,197,168,168,168,168,168,168,168,168,168,168,168,168,168',
'53,65,1,1,1,77,1,2,1,197,1,2,2,2,2,2,2,2,2,2,2,65,22,2,2,2,2,67,67,2',
'2,2,74,74,2,2,67,2,13,2,2,32,32,2,2,79,2,2,2,2,2,2,101,270,203,203,2',
'203,270,270,,65,65,203,127,127,,127,,65,,127,,65,179,179,179,179,179',
'179,179,179,179,179,179,179,179,2,,2,6,2,,2,6,6,6,6,6,6,6,6,6,6,,215',
'6,6,6,6,215,215,6,6,6,80,80,6,6,,6,,6,6,121,121,6,6,140,6,6,6,6,6,6',
'70,70,172,172,6,140,140,140,140,140,140,140,140,140,140,140,140,140',
'140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140',
'6,,6,7,6,,6,7,7,7,7,7,7,7,7,7,7,177,177,7,7,7,7,68,68,7,7,7,246,246',
'7,7,,7,,7,7,125,125,7,7,69,7,7,7,7,7,7,141,141,,,7,69,69,69,69,69,69',
'69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
'69,7,,7,11,7,,7,11,11,11,11,11,11,11,11,11,11,,,11,11,11,11,,,11,11',
'11,,,11,11,,11,,11,11,,,11,11,157,11,11,11,11,11,11,,,,,11,157,157,157',
'157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157',
'157,157,157,157,157,157,157,157,157,157,11,,11,12,11,,11,12,12,12,12',
'12,12,12,12,12,12,,,12,12,12,12,,,12,12,12,,,12,12,,12,,12,12,,,12,12',
',12,12,12,12,12,12,,,,,12,170,170,170,170,170,170,170,170,170,170,170',
'170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170',
'170,170,12,,12,267,12,,12,267,267,267,267,267,267,267,267,267,267,,',
'267,267,267,267,,,267,267,267,,,267,267,,267,,267,267,,,267,267,,267',
'267,267,267,267,267,,,,,267,178,178,178,178,178,178,178,178,178,178',
'178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178',
'178,178,178,267,,267,14,267,,267,14,14,14,14,14,14,14,14,14,14,,,14',
'14,14,14,,,14,14,14,,,14,14,,14,,14,14,,,14,14,,14,14,14,14,14,14,,',
',,14,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184',
'184,184,184,184,184,184,184,184,184,184,184,184,184,184,14,,14,266,14',
',14,266,266,266,266,266,266,266,266,266,266,,,266,266,266,266,,,266',
'266,266,,,266,266,,266,,266,266,,,266,266,,266,266,266,266,266,266,',
',,,266,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158',
'158,158,158,158,158,190,190,190,190,190,190,190,266,266,266,,266,143',
'266,,266,143,143,143,143,143,143,143,143,143,143,,,143,143,143,143,',
',143,143,143,,,143,143,,143,,143,143,,,143,143,,143,143,143,143,143',
'143,,,,,143,181,181,181,181,181,181,181,181,181,181,181,181,181,181',
'181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,143',
',143,28,143,,143,28,28,28,28,28,28,28,28,28,28,,,28,28,28,28,,,28,28',
'28,,,28,28,,28,,28,28,,,28,28,,28,28,28,28,28,28,,,,,28,182,182,182',
'182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182',
'182,188,188,188,188,188,188,188,28,28,28,,28,29,28,,28,29,29,29,29,29',
'29,29,29,29,29,,,29,29,29,29,,,29,29,29,,,29,29,,29,,29,29,,,29,29,',
'29,29,29,29,29,29,,,,,29,185,185,185,185,185,185,185,185,185,185,185',
'185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186',
'29,29,29,,29,142,29,,29,142,142,142,142,142,142,142,142,142,142,,,142',
'142,142,142,,,142,142,142,,,142,142,,142,,142,142,,,142,142,,142,142',
'142,142,142,142,,,,,142,175,175,175,175,175,175,175,175,175,175,175',
'175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175',
'175,175,142,,142,146,142,,142,146,146,146,146,146,146,146,146,146,146',
',,146,146,146,146,,,146,146,146,,,146,146,,146,,146,146,,,146,146,,146',
'146,146,146,146,146,,,,,146,167,167,167,167,167,167,167,167,167,167',
'167,167,167,167,167,167,167,167,167,167,167,119,119,,119,,119,,,,146',
',146,38,146,,146,38,38,38,38,38,38,38,38,38,38,,,38,38,38,38,,,38,38',
'38,,,38,38,,38,,38,38,,,38,38,,38,38,38,38,38,38,,,,,38,187,187,187',
'187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187',
'187,183,183,183,183,183,,,,,38,,38,39,38,,38,39,39,39,39,39,39,39,39',
'39,39,,,39,39,39,39,,,39,39,39,,,39,39,,39,,39,39,,,39,39,,39,39,39',
'39,39,39,,,,,39,165,165,165,165,165,165,165,165,165,165,165,165,165',
'165,165,165,165,165,165,165,165,180,180,180,180,180,,,,,39,,39,42,39',
',39,42,42,42,42,42,42,42,42,42,42,,,42,42,42,42,,,42,42,42,,,42,42,',
'42,,42,42,,,42,42,,42,42,42,42,42,42,,,,,42,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,,,,,,,,',
',42,,42,46,42,,42,46,46,46,46,46,46,46,46,46,46,,,46,46,46,46,,,46,46',
'46,,,46,46,,46,,46,46,,,46,46,,46,46,46,46,46,46,,,,,46,161,161,161',
'161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161',
'161,,,,,,,,,,46,,46,257,46,,46,257,257,257,257,257,257,257,257,257,257',
',,257,257,257,257,,,257,257,257,,,257,257,,257,,257,257,,,257,257,,257',
'257,257,257,257,257,,,,,257,176,176,176,176,176,176,176,176,176,176',
'176,176,176,171,171,171,171,171,171,171,171,171,171,171,171,171,,,257',
'257,257,,257,49,257,,257,49,49,49,49,49,49,49,49,49,49,,,49,49,49,49',
',,49,49,49,,,49,49,,49,,49,49,,,49,49,,49,49,49,49,49,49,,,,,49,162',
'162,162,162,162,162,162,162,162,162,159,159,159,159,159,159,159,159',
'159,159,166,166,166,166,166,166,166,166,166,166,49,,49,254,49,,49,254',
'254,254,254,254,254,254,254,254,254,,,254,254,254,254,,,254,254,254',
',,254,254,,254,,254,254,,,254,254,,254,254,254,254,254,254,,,,,254,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,254,,254,54,254,,254,54,54,54,54,54,54',
'54,54,54,54,,,54,54,54,54,,,54,54,54,,,54,54,,54,,54,54,,,54,54,,54',
'54,54,54,54,54,,,,,54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,54,,54,55,54,,54',
'55,55,55,55,55,55,55,55,55,55,,,55,55,55,55,,,55,55,55,,,55,55,,55,',
'55,55,,,55,55,,55,55,55,55,55,55,,,,,55,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,55,,55,59,55,,55,59,59,59,59,59,59,59,59,59,59,,,59,59,59,59,,,59',
'59,59,,,59,59,,59,,59,59,,,59,59,,59,59,59,59,59,59,,,,,59,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,59,59,59,,59,253,59,,59,253,253,253,253,253,253,253',
'253,253,253,,,253,253,253,253,,,253,253,253,,,253,253,,253,,253,253',
',,253,253,,253,253,253,253,253,253,,,,,253,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,253,,253,61,253,,253,61,61,61,61,61,61,61,61,61,61,,,61,61,61,61',
',,61,61,61,,,61,61,,61,,61,61,,,61,61,,61,61,61,61,61,61,,,,,61,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,61,,61,62,61,,61,62,62,62,62,62,62,62,62,62',
'62,,,62,62,62,62,,,62,62,62,,,62,62,,62,,62,62,,,62,62,,62,62,62,62',
'62,62,,,,,62,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,62,,62,249,62,,62,249,249',
'249,249,249,249,249,249,249,249,,,249,249,249,249,,,249,249,249,,,249',
'249,,249,,249,249,,,249,249,,249,249,249,249,249,249,,,,,249,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,249,,249,66,249,,249,66,66,66,66,66,66,66,66',
'66,66,,,66,66,66,66,,,66,66,66,,,66,66,,66,,66,66,,,66,66,,66,66,66',
'66,66,66,,,,,66,,,,,,,,,,,,,,,,,,,,,,,,,,,,,66,66,66,,66,144,66,,66',
'144,144,144,144,144,144,144,144,144,144,,,144,144,144,144,,,144,144',
'144,,,144,144,,144,,144,144,,,144,144,,144,144,144,144,144,144,,,,,144',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,144,,144,138,144,,144,138,138,138,138',
'138,138,138,138,138,138,,,138,138,138,138,,,138,138,138,,,138,138,,138',
',138,138,,,138,138,,138,138,138,138,138,138,,,,,138,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,138,,138,242,138,,138,242,242,242,242,242,242,242,242',
'242,242,,,242,242,242,242,,,242,242,242,,,242,242,,242,,242,242,,,242',
'242,,242,242,242,242,242,242,,,,,242,,,,,,,,,,,,,,,,,,,,,,,,,,,,,242',
'242,242,,242,148,242,,242,148,148,148,148,148,148,148,148,148,148,,',
'148,148,148,148,,,148,148,148,,,148,148,,148,,148,148,,,148,148,,148',
'148,148,148,148,148,,,,,148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,148,148,148',
',148,134,148,,148,134,134,134,134,134,134,134,134,134,134,,,134,134',
'134,134,,,134,134,134,,,134,134,,134,,134,134,,,134,134,,134,134,134',
'134,134,134,,,,,134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,,134,233,134,',
'134,233,233,233,233,233,233,233,233,233,233,,,233,233,233,233,,,233',
'233,233,,,233,233,,233,,233,233,,,233,233,,233,233,233,233,233,233,',
',,,233,,,,,,,,,,,,,,,,,,,,,,,,,,,,,233,233,233,,233,73,233,,233,73,73',
'73,73,73,73,73,73,73,73,,,73,73,73,73,,,73,73,73,,,73,73,,73,,73,73',
',,73,73,,73,73,73,73,73,73,,,,,73,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,73,',
'73,229,73,,73,229,229,229,229,229,229,229,229,229,229,,,229,229,229',
'229,,,229,229,229,,,229,229,,229,,229,229,,,229,229,,229,229,229,229',
'229,229,,,,,229,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,229,,229,226,229,,229',
'226,226,226,226,226,226,226,226,226,226,,,226,226,226,226,,,226,226',
'226,,,226,226,,226,,226,226,,,226,226,,226,226,226,226,226,226,,,,,226',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,226,226,226,,226,76,226,,226,76,76,76,76',
'76,76,76,76,76,76,,,76,76,76,76,,,76,76,76,,,76,76,,76,,76,76,,,76,76',
',76,76,76,76,76,76,,,,,76,,,,,,,,,,,,,,,,,,,,,,,,,,,,,76,76,76,,76,225',
'76,,76,225,225,225,225,225,225,225,225,225,225,,,225,225,225,225,,,225',
'225,225,,,225,225,,225,,225,225,,,225,225,,225,225,225,225,225,225,',
',,,225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225,225,225,,225,191,225,,225,191',
'191,191,191,191,191,191,191,191,191,,,191,191,191,191,,,191,191,191',
',,191,191,,191,,191,191,,,191,191,,191,191,191,191,191,191,,,,,191,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,191,191,191,,191,192,191,,191,192,192,192',
'192,192,192,192,192,192,192,,,192,192,192,192,,,192,192,192,,,192,192',
',192,,192,192,,,192,192,,192,192,192,192,192,192,,,,,192,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,192,,192,220,192,,192,220,220,220,220,220,220,220',
'220,220,220,,,220,220,220,220,,,220,220,220,,,220,220,,220,,220,220',
',,220,220,,220,220,220,220,220,220,,,,,220,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,220,,220,81,220,,220,81,81,81,81,81,81,81,81,81,81,,,81,81,81,81',
',,81,81,81,,,81,81,,81,,81,81,,,81,81,,81,81,81,81,81,81,,,,,81,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,81,,81,82,81,,81,82,82,82,82,82,82,82,82,82',
'82,,,82,82,82,82,,,82,82,82,,,82,82,,82,,82,82,,,82,82,,82,82,82,82',
'82,82,,,,,82,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,82,,82,83,82,,82,83,83,83',
'83,83,83,83,83,83,83,,,83,83,83,83,,,83,83,83,,,83,83,,83,,83,83,,,83',
'83,,83,83,83,83,83,83,,,,,83,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,83,,83,84',
'83,,83,84,84,84,84,84,84,84,84,84,84,,,84,84,84,84,,,84,84,84,,,84,84',
',84,,84,84,,,84,84,,84,84,84,84,84,84,,,,,84,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,84,,84,85,84,,84,85,85,85,85,85,85,85,85,85,85,,,85,85,85,85',
',,85,85,85,,,85,85,,85,,85,85,,,85,85,,85,85,85,85,85,85,,,,,85,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,85,,85,86,85,,85,86,86,86,86,86,86,86,86,86',
'86,,,86,86,86,86,,,86,86,86,,,86,86,,86,,86,86,,,86,86,,86,86,86,86',
'86,86,,,,,86,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86,,86,87,86,,86,87,87,87',
'87,87,87,87,87,87,87,,,87,87,87,87,,,87,87,87,,,87,87,,87,,87,87,,,87',
'87,,87,87,87,87,87,87,,,,,87,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,87,,87,89',
'87,,87,89,89,89,89,89,89,89,89,89,89,,,89,89,89,89,,,89,89,89,,,89,89',
',89,,89,89,,,89,89,,89,89,89,89,89,89,,,,,89,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,89,,89,90,89,,89,90,90,90,90,90,90,90,90,90,90,,,90,90,90,90',
',,90,90,90,,,90,90,,90,,90,90,,,90,90,,90,90,90,90,90,90,,,,,90,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,90,,90,91,90,,90,91,91,91,91,91,91,91,91,91',
'91,,,91,91,91,91,,,91,91,91,,,91,91,,91,,91,91,,,91,91,,91,91,91,91',
'91,91,,,,,91,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,91,,91,92,91,,91,92,92,92',
'92,92,92,92,92,92,92,,,92,92,92,92,,,92,92,92,,,92,92,,92,,92,92,,,92',
'92,,92,92,92,92,92,92,,,,,92,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,92,,92,94',
'92,,92,94,94,94,94,94,94,94,94,94,94,,,94,94,94,94,,,94,94,94,,,94,94',
',94,,94,94,,,94,94,,94,94,94,94,94,94,,,,,94,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,94,,94,95,94,,94,95,95,95,95,95,95,95,95,95,95,,,95,95,95,95',
',,95,95,95,,,95,95,,95,,95,95,,,95,95,,95,95,95,95,95,95,,,,,95,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,95,,95,96,95,,95,96,96,96,96,96,96,96,96,96',
'96,,,96,96,96,96,,,96,96,96,,,96,96,,96,,96,96,,,96,96,,96,96,96,96',
'96,96,,,,,96,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,96,,96,97,96,,96,97,97,97',
'97,97,97,97,97,97,97,,,97,97,97,97,,,97,97,97,,,97,97,,97,,97,97,,,97',
'97,,97,97,97,97,97,97,,,,,97,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,97,,97,98',
'97,,97,98,98,98,98,98,98,98,98,98,98,,,98,98,98,98,,,98,98,98,,,98,98',
',98,,98,98,,,98,98,,98,98,98,98,98,98,,,,,98,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,98,,98,99,98,,98,99,99,99,99,99,99,99,99,99,99,,,99,99,99,99',
',,99,99,99,,,99,99,,99,,99,99,,,99,99,,99,99,99,99,99,99,,,,,99,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,99,,99,100,99,,99,100,100,100,100,100,100',
'100,100,100,100,,,100,100,100,100,,,100,100,100,,,100,100,,100,,100',
'100,,,100,100,,100,100,100,100,100,100,,,,,100,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,100,,100,193,100,,100,193,193,193,193,193,193,193,193,193,193',
',,193,193,193,193,,,193,193,193,,,193,193,,193,,193,193,,,193,193,,193',
'193,193,193,193,193,,,,,193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193,,193,102',
'193,,193,102,102,102,102,102,102,102,102,102,102,,,102,102,102,102,',
',102,102,102,,,102,102,,102,,102,102,,,102,102,,102,102,102,102,102',
'102,,,,,102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,102,,102,103,102,,102,103',
'103,103,103,103,103,103,103,103,103,,,103,103,103,103,,,103,103,103',
',,103,103,,103,,103,103,,,103,103,,103,103,103,103,103,103,,,,,103,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,103,,103,104,103,,103,104,104,104,104,104',
'104,104,104,104,104,,,104,104,104,104,,,104,104,104,,,104,104,,104,',
'104,104,,,104,104,,104,104,104,104,104,104,,,,,104,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,104,,104,105,104,,104,105,105,105,105,105,105,105,105,105',
'105,,,105,105,105,105,,,105,105,105,,,105,105,,105,,105,105,,,105,105',
',105,105,105,105,105,105,,,,,105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,105,',
'105,106,105,,105,106,106,106,106,106,106,106,106,106,106,,,106,106,106',
'106,,,106,106,106,,,106,106,,106,,106,106,,,106,106,,106,106,106,106',
'106,106,,,,,106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,106,,106,107,106,,106',
'107,107,107,107,107,107,107,107,107,107,,,107,107,107,107,,,107,107',
'107,,,107,107,,107,,107,107,,,107,107,,107,107,107,107,107,107,,,,,107',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,107,,107,108,107,,107,108,108,108,108',
'108,108,108,108,108,108,,,108,108,108,108,,,108,108,108,,,108,108,,108',
',108,108,,,108,108,,108,108,108,108,108,108,,,,,108,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,108,,108,109,108,,108,109,109,109,109,109,109,109,109',
'109,109,,,109,109,109,109,,,109,109,109,,,109,109,,109,,109,109,,,109',
'109,,109,109,109,109,109,109,,,,,109,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109',
',109,110,109,,109,110,110,110,110,110,110,110,110,110,110,,,110,110',
'110,110,,,110,110,110,,,110,110,,110,,110,110,,,110,110,,110,110,110',
'110,110,110,,,,,110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110,,110,111,110,',
'110,111,111,111,111,111,111,111,111,111,111,,,111,111,111,111,,,111',
'111,111,,,111,111,,111,,111,111,,,111,111,,111,111,111,111,111,111,',
',,,111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111,,111,112,111,,111,112,112,112',
'112,112,112,112,112,112,112,,,112,112,112,112,,,112,112,112,,,112,112',
',112,,112,112,,,112,112,,112,112,112,112,112,112,,,,,112,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,112,,112,113,112,,112,113,113,113,113,113,113,113',
'113,113,113,,,113,113,113,113,,,113,113,113,,,113,113,,113,,113,113',
',,113,113,,113,113,113,113,113,113,,,,,113,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,113,,113,214,113,,113,214,214,214,214,214,214,214,214,214,214,',
',214,214,214,214,,,214,214,214,,,214,214,,214,,214,214,,,214,214,,214',
'214,214,214,214,214,,,,,214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214,,214,115',
'214,,214,115,115,115,115,115,115,115,115,115,115,,,115,115,115,115,',
',115,115,115,,,115,115,,115,,115,115,,,115,115,,115,115,115,115,115',
'115,,,,,115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115,,115,116,115,,115,116',
'116,116,116,116,116,116,116,116,116,,,116,116,116,116,,,116,116,116',
',,116,116,,116,,116,116,,,116,116,,116,116,116,116,116,116,,,,,116,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,,116,117,116,,116,117,117,117,117,117',
'117,117,117,117,117,,,117,117,117,117,,,117,117,117,,,117,117,,117,',
'117,117,,,117,117,,117,117,117,117,117,117,,,,,117,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,117,,117,199,117,,117,199,199,199,199,199,199,199,199,199',
'199,,,199,199,199,199,,,199,199,199,,,199,199,,199,,199,199,,,199,199',
',199,199,199,199,199,199,,,,,199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199,',
'199,200,199,,199,200,200,200,200,200,200,200,200,200,200,,,200,200,200',
'200,,,200,200,200,,,200,200,,200,,200,200,,,200,200,,200,200,200,200',
'200,200,,,,,200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200,,200,114,200,,200',
'114,114,114,114,114,114,114,114,114,114,,,114,114,114,114,,,114,114',
'114,,,114,114,,114,,114,114,,,114,114,,114,114,114,114,114,114,248,',
',248,114,,,,,,,,,,,,,,,,,,,,,248,,,,,,248,,,,114,,114,,114,,114,,248',
'248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248',
'248,248,248,248,248,248,248,248,248,248,248,248,,,205,248,248,205,,',
',,248,,,,,,,,,,,,,,,,,205,,,,,,205,,,,,,,,,,,,205,205,205,205,205,205',
'205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205',
'205,205,205,205,205,205,205,,,,205,205,,,,205,122,205,122,122,,,,,,',
',,,,,,,,,,,,,,,122,,,,,,122,,,,,,,,,,,,122,122,122,122,122,122,122,122',
'122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122',
'122,122,122,122,122,,,,122,122,122,122,260,,260,260,,,,,,,,,,,,,,,,',
',,,,,260,,,,,,260,,,,,,,,,,,,260,260,260,260,260,260,260,260,260,260',
'260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260',
'260,260,260,,,,260,260,260,260,71,,71,71,,,,,,,,,,,,,,,,,,,,,,71,,,',
',,71,,,,,,,,,,,,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71',
'71,71,71,71,71,71,71,71,71,71,71,71,,,,71,71,71,71,245,,245,245,,,,',
',,,,,,,,,,,,,,,,,245,,,,,,245,,,,,,,,,,,,245,245,245,245,245,245,245',
'245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245',
'245,245,245,245,245,245,,,,245,245,245,245,118,,118,118,,,,,,,,,,,,',
',,,,,,,,,118,,,,,,118,,,,,,,,,,,,118,118,118,118,118,118,118,118,118',
'118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118',
'118,118,118,118,,,,118,118,118,118,132,,,132,,,,,,,,,,,,,,,,,,,,,,132',
',,,,,132,,,,,,,,,,,,132,132,132,132,132,132,132,132,132,132,132,132',
'132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132',
'132,,,224,132,132,224,,,,,,,,,,,,,,,,,,,,,,224,,,,,,224,,,,,,,,,,,,224',
'224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224',
'224,224,224,224,224,224,224,224,224,224,224,224,,,156,224,224,156,,',
',,,,,,,,,,,,,,,,,,,156,,,,,,156,,,,,,,,,,,,156,156,156,156,156,156,156',
'156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156',
'156,156,156,156,156,156,,,223,156,156,223,,,,,,,,,,,,,,,,,,,,,,223,',
',,,,223,,,,,,,,,,,,223,223,223,223,223,223,223,223,223,223,223,223,223',
'223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223',
',,239,223,223,239,,,,,,,,,,,,,,,,,,,,,,239,,,,,,239,,,,,,,,,,,,239,239',
'239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239',
'239,239,239,239,239,239,239,239,239,239,239,,,217,239,239,217,,,,,,',
',,,,,,,,,,,,,,,217,,,,,,217,,,,,,,,,,,,217,217,217,217,217,217,217,217',
'217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217',
'217,217,217,217,217,,,216,217,217,216,,,,,,,,,,,,,,,,,,,,,,216,,,,,',
'216,,,,,,,,,,,,216,216,216,216,216,216,216,216,216,216,216,216,216,216',
'216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,,,37',
'216,216,37,,,,,,,,,,,,,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,,,120,37,37,120,,,,,,,,,,,,,,,,,,,,,,120,,,,,,120,,,,,,,,,,,,120',
'120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,120,120,120,,,263,120,120,263,,',
',,,,,,,,,,,,,,,,,,,263,,,,,,263,,,,,,,,,,,,263,263,263,263,263,263,263',
'263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263',
'263,263,263,263,263,263,263,,271,263,263,271,,,,,,,,,,,,,,,,,,,,,,271',
',,,,,271,,,,,,,,,,,,271,271,271,271,271,271,271,271,271,271,271,271',
'271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271',
'271,271,,164,271,271,164,,,,,,,,,,,,,,,,,,,,,,164,,,,,,164,,,,,,,,,',
',,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164',
'164,164,164,164,164,164,164,164,164,164,164,164,164,160,,,160,,,,,,',
',,,,,,,,,,,,,,,160,,,,,,160,,,,,,,,,,,,160,160,160,160,160,160,160,160',
'160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160',
'160,160,160,160,160,207,,,207,,,,,,,,,,,,,,,,,,,,,,207,,,,,,207,,,,',
',,,,,,,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207',
'207,207,207,207,207,207,207,207,207,207,207,207,207,207,209,,,209,,',
',,,,,,,,,,,,,,,,,,,209,,,,,,209,,,,,,,,,,,,209,209,209,209,209,209,209',
'209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209',
'209,209,209,209,209,209,72,,,,,,72,,,,,,,,,,,,72,72,72,72,72,72,72,72',
'72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,163',
',,,,,163,,,,,,,,,,,,163,163,163,163,163,163,163,163,163,163,163,163',
'163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163',
'163,173,,,,,,173,,,,,,,,,,,,173,173,173,173,173,173,173,173,173,173',
'173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173',
'173,173,173,208,,,,,,208,,,,,,,,,,,,208,208,208,208,208,208,208,208',
'208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208',
'208,208,208,208,208' ]
        racc_action_check = arr = Array.new(8634, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    81,   164,   nil,   nil,   nil,   247,   330,   nil,   nil,
   nil,   413,   496,   109,   662,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   181,   nil,    58,   nil,   nil,   nil,   911,   994,
   nil,   nil,   120,   nil,   nil,   nil,   nil,  7848,  1243,  1326,
   nil,   nil,  1409,   nil,   nil,   nil,  1492,    45,   nil,  1658,
   nil,   nil,   nil,   121,  1824,  1907,   nil,   nil,   nil,  1990,
    46,  2156,  2239,   nil,   nil,   144,  2405,   106,   307,   337,
   249,  7083,  8415,  2986,   146,   142,  3235,   146,   -12,   129,
   194,  3650,  3733,  3816,  3899,  3982,  4065,  4148,   nil,  4231,
  4314,  4397,  4480,   nil,  4563,  4646,  4729,  4812,  4895,  4978,
  5061,   196,  5227,  5310,  5393,  5476,  5559,  5642,  5725,  5808,
  5891,  5974,  6057,  6140,  6721,  6306,  6389,  6472,  7243,  1153,
  7923,   238,  6923,    51,    30,   321,   nil,   143,   nil,     0,
    33,     6,  7323,    -8,  2820,   nil,   nil,   106,  2571,   nil,
   254,   332,  1077,   828,  2488,   nil,  1160,   nil,  2737,   nil,
   nil,   -33,   nil,    -9,   nil,   nil,  7473,   420,   752,  1675,
  8221,  1499,  1665,  8463,  8148,  1333,  1685,  1167,   101,   -11,
   503,  1595,   251,  8511,   -25,  1084,  1582,   301,   586,   188,
  1354,   835,   918,  1271,   669,  1001,  1022,  1250,   939,  1416,
   773,  3401,  3484,  5144,   nil,    30,    70,   130,   nil,  6555,
  6638,    16,     6,   133,   nil,  6841,   -26,  8294,  8559,  8367,
    23,   nil,   nil,    97,  6223,   189,  7773,  7698,    22,   nil,
  3567,   nil,   nil,  7548,  7398,  3318,  3152,   nil,   nil,  3069,
   nil,   nil,   nil,  2903,   nil,   nil,    42,   nil,    10,  7623,
    -1,   nil,  2654,   nil,   nil,  7163,   277,   -60,  6766,  2322,
   -16,   nil,   nil,  2073,  1741,   nil,    63,  1575,   nil,   nil,
  7003,   nil,     0,  7998,   nil,   -10,   745,   579,   nil,   nil,
   137,  8073,   nil ]

racc_action_default = [
    -1,  -150,  -150,   -37,   -23,   -12,  -150,  -150,   -38,   -24,
   -13,  -150,  -150,  -150,  -150,   -39,   -14,  -114,   -40,   -33,
   -25,   -15,  -150,   -96,  -150,   -34,   -26,   -16,    -2,   -92,
   -47,   -17,    -3,   -97,   -31,   -29,   -18,    -4,  -150,  -120,
   -98,   -94,  -150,   -30,   -19,    -8,  -150,  -150,   -99,  -150,
   -32,   -20,    -9,  -108,  -150,  -150,   -35,   -21,   -10,  -150,
  -112,  -150,  -150,   -36,   -22,   -11,  -150,  -150,   -52,   -88,
   -54,  -150,  -128,  -120,   -53,  -150,   -92,  -150,    -7,  -150,
   -93,    -6,  -150,  -150,  -150,  -150,  -150,  -150,   -56,  -150,
  -150,  -150,  -150,   -55,  -150,  -150,  -150,  -150,  -150,  -150,
  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,
  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,  -150,
  -121,   -50,  -150,  -113,  -150,   -51,   -45,  -150,  -109,  -150,
  -150,   -48,   -46,  -126,  -120,  -103,  -104,  -150,  -150,  -101,
   -87,   -49,  -120,  -150,  -150,  -100,  -150,  -129,  -150,   -28,
   -27,  -150,   273,  -150,   -95,   -91,    -5,   -89,   -76,   -65,
   -85,   -77,   -66,  -148,   -86,   -78,   -67,   -79,   -68,   -57,
   -80,   -69,   -58,  -149,  -150,   -81,   -70,   -59,   -82,   -71,
   -60,   -83,   -72,   -61,   -84,   -73,   -62,   -74,   -63,   -75,
   -64,  -150,  -150,  -150,  -119,  -150,  -150,  -150,  -107,  -150,
  -150,  -150,  -150,  -150,  -102,  -150,  -150,   -42,  -115,   -41,
  -150,  -118,   -90,  -150,  -150,  -150,  -123,  -122,  -150,  -137,
  -150,  -111,  -110,   -43,   -44,  -150,  -150,  -124,  -117,  -150,
  -105,  -116,  -147,  -150,  -141,  -143,  -150,  -145,  -150,  -150,
    -8,  -130,  -150,  -138,  -135,  -150,  -127,  -150,  -150,  -150,
  -150,  -142,  -146,  -150,  -150,  -131,  -150,  -150,  -125,  -106,
  -150,  -144,    -8,  -150,  -136,  -139,  -150,  -150,  -132,  -133,
  -140,  -150,  -134 ]

racc_goto_table = [
    28,    32,    67,   126,   148,   119,   145,    79,   240,   128,
   219,    22,   127,   123,   202,   218,   124,   251,   252,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    80,   nil,    81,   243,   nil,   nil,   nil,   nil,   nil,   151,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   262,   nil,   nil,
   nil,   191,   nil,   nil,   153,   195,   nil,   nil,   nil,   nil,
   133,   nil,   nil,   nil,   nil,   145,   nil,    81,   nil,   nil,
   nil,   149,   nil,   nil,   nil,   nil,   nil,    80,    81,   nil,
    81,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   203,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   149,   192,
   nil,   nil,   149,   nil,   nil,   nil,   nil,   196,   nil,   nil,
   nil,   nil,   nil,    81,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   126,   126,   nil,   210,
   nil,   192,   221,   222,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   257,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   215,   266,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   192,   nil,   nil,   192,   nil,   nil,   nil,
    81,   nil,   nil,   nil,   nil,    81,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   246,   247,   nil,   nil,
   nil,   nil,    68,   nil,   250,   nil,    69,    70,   nil,   nil,
   nil,    71,    72,   256,    74,   149,    81,    81,   nil,   nil,
    81,   nil,   nil,   nil,   nil,   nil,    81,   nil,   265,   nil,
   149,   nil,   nil,   nil,   nil,    81,   nil,   270,   118,   120,
    81,   nil,   121,   nil,   nil,   nil,   122,   nil,   nil,   125,
   nil,   nil,   nil,   nil,   131,   132,   nil,   nil,   nil,   nil,
   nil,   140,   141,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   156,   157,   158,   159,   160,   161,   162,   nil,   163,
   164,   165,   166,   nil,   167,   168,   169,   170,   171,   172,
   173,   nil,   175,   176,   177,   178,   179,   180,   181,   182,
   183,   184,   185,   186,   187,   188,   189,   190,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   120,   nil,   nil,   nil,   205,   nil,
   nil,   nil,   120,   207,   208,   nil,   209,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   216,   217,   nil,   nil,   nil,   nil,   nil,   223,
   224,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   239,   nil,   nil,   nil,   nil,   nil,
   245,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   248,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   260,
   nil,   nil,   nil,   239,   263,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   271 ]

racc_goto_check = [
     2,     3,     3,    21,    22,    35,    29,    25,     5,    23,
    38,     1,    33,    30,    36,    37,     8,    39,    41,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,     2,    38,   nil,   nil,   nil,   nil,   nil,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,
   nil,    22,   nil,   nil,    25,    22,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,    29,   nil,     2,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,   nil,     3,     2,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    35,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,
   nil,   nil,     2,   nil,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,   nil,     3,
   nil,     2,    23,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,    22,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,     3,   nil,   nil,
   nil,   nil,     4,   nil,     3,   nil,     4,     4,   nil,   nil,
   nil,     4,     4,     3,     4,     2,     2,     2,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,     2,   nil,     3,   nil,
     2,   nil,   nil,   nil,   nil,     2,   nil,     3,     4,     4,
     2,   nil,     4,   nil,   nil,   nil,     4,   nil,   nil,     4,
   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,
   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,     4,     4,     4,     4,     4,   nil,     4,
     4,     4,     4,   nil,     4,     4,     4,     4,     4,     4,
     4,   nil,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     4,   nil,
   nil,   nil,     4,     4,     4,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    11,     0,     1,   230,  -206,   nil,   nil,   -31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   -50,   -67,   -44,   nil,   -22,   nil,   nil,   nil,   -59,
   -34,   nil,   nil,   -41,   nil,   -34,  -119,  -180,  -185,  -219,
   nil,  -218,   nil ]

racc_goto_default = [
   nil,   nil,    66,    78,    37,    45,    52,    58,    65,     5,
    10,    16,    21,    27,    31,    36,    44,    51,    57,    64,
     4,     9,   nil,   nil,    24,   nil,    33,    40,    48,   139,
    60,   135,   136,   nil,    17,   nil,   nil,   nil,   nil,   234,
   236,   237,   232 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 91, :_reduce_1,
  1, 91, :_reduce_2,
  1, 91, :_reduce_3,
  1, 93, :_reduce_4,
  3, 93, :_reduce_5,
  2, 93, :_reduce_6,
  2, 93, :_reduce_7,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 97, :_reduce_29,
  1, 97, :_reduce_30,
  1, 97, :_reduce_31,
  1, 97, :_reduce_32,
  1, 97, :_reduce_33,
  1, 97, :_reduce_34,
  1, 97, :_reduce_35,
  1, 97, :_reduce_36,
  1, 97, :_reduce_37,
  1, 97, :_reduce_38,
  1, 97, :_reduce_39,
  1, 97, :_reduce_40,
  3, 102, :_reduce_41,
  3, 102, :_reduce_42,
  3, 113, :_reduce_43,
  3, 113, :_reduce_44,
  1, 113, :_reduce_45,
  2, 106, :_reduce_46,
  1, 111, :_reduce_47,
  2, 101, :_reduce_48,
  2, 101, :_reduce_49,
  2, 101, :_reduce_50,
  2, 101, :_reduce_51,
  2, 101, :_reduce_52,
  2, 101, :_reduce_53,
  2, 101, :_reduce_54,
  2, 101, :_reduce_55,
  2, 101, :_reduce_56,
  3, 101, :_reduce_57,
  3, 101, :_reduce_58,
  3, 101, :_reduce_59,
  3, 101, :_reduce_60,
  3, 101, :_reduce_61,
  3, 101, :_reduce_62,
  3, 101, :_reduce_63,
  3, 101, :_reduce_64,
  3, 101, :_reduce_65,
  3, 101, :_reduce_66,
  3, 101, :_reduce_67,
  3, 101, :_reduce_68,
  3, 101, :_reduce_69,
  3, 101, :_reduce_70,
  3, 101, :_reduce_71,
  3, 101, :_reduce_72,
  3, 101, :_reduce_73,
  3, 101, :_reduce_74,
  3, 101, :_reduce_75,
  3, 101, :_reduce_76,
  3, 101, :_reduce_77,
  3, 101, :_reduce_78,
  3, 101, :_reduce_79,
  3, 101, :_reduce_80,
  3, 101, :_reduce_81,
  3, 101, :_reduce_82,
  3, 101, :_reduce_83,
  3, 101, :_reduce_84,
  3, 101, :_reduce_85,
  3, 101, :_reduce_86,
  2, 101, :_reduce_87,
  2, 101, :_reduce_88,
  3, 101, :_reduce_89,
  4, 100, :_reduce_90,
  3, 100, :_reduce_91,
  0, 115, :_reduce_92,
  1, 115, :_reduce_93,
  1, 114, :_reduce_94,
  3, 114, :_reduce_95,
  1, 98, :_reduce_96,
  1, 98, :_reduce_97,
  1, 98, :_reduce_98,
  1, 98, :_reduce_99,
  2, 98, :_reduce_100,
  2, 98, :_reduce_101,
  2, 119, :_reduce_102,
  1, 119, :_reduce_103,
  1, 119, :_reduce_104,
  3, 121, :_reduce_105,
  5, 122, :_reduce_106,
  3, 117, :_reduce_107,
  0, 123, :_reduce_108,
  1, 123, :_reduce_109,
  3, 123, :_reduce_110,
  3, 123, :_reduce_111,
  1, 99, :_reduce_112,
  2, 99, :_reduce_113,
  1, 99, :_reduce_114,
  3, 110, :_reduce_115,
  4, 120, :_reduce_116,
  4, 120, :_reduce_117,
  4, 124, :_reduce_118,
  3, 116, :_reduce_119,
  0, 125, :_reduce_120,
  1, 125, :_reduce_121,
  3, 125, :_reduce_122,
  3, 125, :_reduce_123,
  4, 104, :_reduce_124,
  6, 104, :_reduce_125,
  0, 126, :_reduce_126,
  3, 126, :_reduce_127,
  2, 105, :_reduce_128,
  3, 118, :_reduce_129,
  5, 107, :_reduce_130,
  6, 108, :_reduce_131,
  8, 108, :_reduce_132,
  8, 108, :_reduce_133,
  10, 108, :_reduce_134,
  5, 109, :_reduce_135,
  7, 109, :_reduce_136,
  1, 127, :_reduce_137,
  2, 127, :_reduce_138,
  4, 128, :_reduce_139,
  5, 129, :_reduce_140,
  1, 130, :_reduce_141,
  2, 130, :_reduce_142,
  1, 131, :_reduce_143,
  3, 131, :_reduce_144,
  1, 132, :_reduce_145,
  2, 132, :_reduce_146,
  5, 103, :_reduce_147,
  3, 103, :_reduce_148,
  3, 103, :_reduce_149 ]

racc_reduce_n = 150

racc_shift_n = 273

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :THEN => 4,
  :UNLESS => 5,
  :NUMBER => 6,
  :STRING => 7,
  :REGEX => 8,
  :TRUE => 9,
  :FALSE => 10,
  :YES => 11,
  :NO => 12,
  :ON => 13,
  :OFF => 14,
  :IDENTIFIER => 15,
  :PROPERTY_ACCESS => 16,
  :CODE => 17,
  :PARAM => 18,
  :NEW => 19,
  :RETURN => 20,
  :TRY => 21,
  :CATCH => 22,
  :FINALLY => 23,
  :THROW => 24,
  :BREAK => 25,
  :CONTINUE => 26,
  :FOR => 27,
  :IN => 28,
  :WHILE => 29,
  :SWITCH => 30,
  :WHEN => 31,
  :DELETE => 32,
  :INSTANCEOF => 33,
  :TYPEOF => 34,
  :SUPER => 35,
  :EXTENDS => 36,
  :NEWLINE => 37,
  :COMMENT => 38,
  :JS => 39,
  :UMINUS => 40,
  :NOT => 41,
  "!" => 42,
  "!!" => 43,
  "~" => 44,
  "++" => 45,
  "--" => 46,
  "*" => 47,
  "/" => 48,
  "%" => 49,
  "+" => 50,
  "-" => 51,
  "<<" => 52,
  ">>" => 53,
  ">>>" => 54,
  "&" => 55,
  "|" => 56,
  "^" => 57,
  "<=" => 58,
  "<" => 59,
  ">" => 60,
  ">=" => 61,
  "==" => 62,
  "!=" => 63,
  :IS => 64,
  :ISNT => 65,
  "&&" => 66,
  "||" => 67,
  :AND => 68,
  :OR => 69,
  "-=" => 70,
  "+=" => 71,
  "/=" => 72,
  "*=" => 73,
  "%=" => 74,
  "." => 75,
  ":" => 76,
  "=" => 77,
  "||=" => 78,
  "&&=" => 79,
  "\n" => 80,
  ";" => 81,
  "=>" => 82,
  "," => 83,
  "[" => 84,
  "]" => 85,
  "{" => 86,
  "}" => 87,
  "(" => 88,
  ")" => 89 }

racc_nt_base = 90

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "THEN",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "EXTENDS",
  "NEWLINE",
  "COMMENT",
  "JS",
  "UMINUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "ISNT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\"%=\"",
  "\".\"",
  "\":\"",
  "\"=\"",
  "\"||=\"",
  "\"&&=\"",
  "\"\\n\"",
  "\";\"",
  "\"=>\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "PureExpression",
  "Statement",
  "Literal",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Extends",
  "Comment",
  "Then",
  "AssignObj",
  "ParamList",
  "CodeBody",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "AssignList",
  "Super",
  "ArgList",
  "Catch",
  "Whens",
  "When",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_29(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_40(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_41(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_42(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_43(val, _values, result)
     result = AssignNode.new(val[0], val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_44(val, _values, result)
     result = AssignNode.new(val[0], val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 125)
  def _reduce_45(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 130)
  def _reduce_46(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 135)
  def _reduce_47(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 159)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 160)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 164)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 167)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 170)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 175)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 180)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 183)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 186)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 187)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_87(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_88(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 192)
  def _reduce_89(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 197)
  def _reduce_90(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 198)
  def _reduce_91(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 203)
  def _reduce_92(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 204)
  def _reduce_93(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 209)
  def _reduce_94(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 210)
  def _reduce_95(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 215)
  def _reduce_96(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 216)
  def _reduce_97(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_98(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_99(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 219)
  def _reduce_100(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 220)
  def _reduce_101(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 225)
  def _reduce_102(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 226)
  def _reduce_103(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 227)
  def _reduce_104(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 232)
  def _reduce_105(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 237)
  def _reduce_106(val, _values, result)
     result = SliceNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 242)
  def _reduce_107(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 247)
  def _reduce_108(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 248)
  def _reduce_109(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 249)
  def _reduce_110(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 250)
  def _reduce_111(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 255)
  def _reduce_112(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 256)
  def _reduce_113(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 257)
  def _reduce_114(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 262)
  def _reduce_115(val, _values, result)
     result = ExtendsNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 267)
  def _reduce_116(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 268)
  def _reduce_117(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 273)
  def _reduce_118(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 278)
  def _reduce_119(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 283)
  def _reduce_120(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 284)
  def _reduce_121(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 285)
  def _reduce_122(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 286)
  def _reduce_123(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 291)
  def _reduce_124(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 293)
  def _reduce_125(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 298)
  def _reduce_126(val, _values, result)
     result = [nil, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 299)
  def _reduce_127(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 304)
  def _reduce_128(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 309)
  def _reduce_129(val, _values, result)
     result = ParentheticalNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 315)
  def _reduce_130(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 321)
  def _reduce_131(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 324)
  def _reduce_132(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], nil, val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 327)
  def _reduce_133(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 331)
  def _reduce_134(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], val[8], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 337)
  def _reduce_135(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 339)
  def _reduce_136(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 344)
  def _reduce_137(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 345)
  def _reduce_138(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 350)
  def _reduce_139(val, _values, result)
     result = IfNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 359)
  def _reduce_140(val, _values, result)
     result = IfNode.new(val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 364)
  def _reduce_141(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 365)
  def _reduce_142(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 370)
  def _reduce_143(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 371)
  def _reduce_144(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 376)
  def _reduce_145(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 377)
  def _reduce_146(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 383)
  def _reduce_147(val, _values, result)
     result = IfNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 384)
  def _reduce_148(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 385)
  def _reduce_149(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
