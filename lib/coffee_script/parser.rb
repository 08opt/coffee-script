#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 377)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'10,234,247,75,33,39,46,53,59,4,7,16,19,25,206,152,36,44,52,56,68,68',
'11,20,26,216,143,35,43,75,57,3,68,15,21,212,29,32,38,45,15,15,85,86',
'14,154,155,40,47,138,134,212,15,201,40,47,197,40,47,88,134,25,207,75',
'71,75,205,99,235,248,236,40,47,51,224,1,10,12,172,24,33,39,46,53,59',
'4,7,16,19,25,71,217,36,44,52,56,40,47,11,20,26,211,203,35,43,201,57',
'3,199,15,21,149,29,32,38,45,150,211,,79,14,40,47,1,71,12,71,24,78,,78',
'128,131,102,105,109,111,113,118,121,123,125,128,131,102,40,47,232,,51',
',1,10,12,146,24,33,39,46,53,59,4,7,16,19,25,40,47,36,44,52,56,,238,11',
'20,26,40,47,35,43,,57,3,,15,21,,29,32,38,45,,233,40,47,14,40,47,128',
'131,102,105,109,111,113,118,121,123,125,127,130,101,104,108,110,112',
'117,,40,47,,141,40,47,51,139,1,10,12,,24,33,39,46,53,59,4,7,16,19,25',
',,36,44,52,56,,211,11,20,26,40,47,35,43,,57,3,,15,21,,29,32,38,45,128',
'131,102,,14,128,131,102,105,109,111,113,118,121,123,125,127,130,101',
'104,108,110,112,117,120,122,124,126,129,100,103,107,,51,,1,10,12,,24',
'33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,221,11,20,26,40,47,35,43',
',57,3,,15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118,121',
'123,125,127,130,101,104,108,110,112,117,120,122,124,126,129,100,103',
'107,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,239',
'11,20,26,40,47,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,128,131,102,105',
'109,111,113,118,121,123,125,127,130,101,104,108,110,112,117,120,122',
'124,126,129,100,103,107,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25',
',,36,44,52,56,,215,11,20,26,40,47,35,43,,57,3,,15,21,,29,32,38,45,,',
',,14,128,131,102,105,109,111,113,118,121,123,125,127,130,101,104,108',
'110,112,117,40,47,,134,,132,,40,47,51,,1,10,12,,24,33,39,46,53,59,4',
'7,16,19,25,,,36,44,52,56,,245,11,20,26,40,47,35,43,,57,3,,15,21,,29',
'32,38,45,,,,,14,128,131,102,105,109,111,113,118,121,123,125,127,130',
'101,104,108,110,112,117,120,122,124,126,129,100,103,107,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118,121,123',
'125,127,130,101,104,108,110,112,117,128,131,102,105,109,,,40,47,51,',
'1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35',
'43,,57,3,,15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118',
'121,123,125,127,130,101,104,108,110,112,117,128,131,102,105,109,,,40',
'47,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20',
'26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111',
'113,118,121,123,125,127,130,101,104,108,110,112,117,120,122,124,126',
'129,100,103,107,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44',
'52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,128,131,102',
'105,109,111,113,118,121,123,125,127,130,101,104,108,110,112,117,128',
'131,102,105,109,111,113,118,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19',
'25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14',
'128,131,102,105,109,111,113,118,121,123,125,127,130,101,104,108,110',
'112,117,128,131,102,105,109,111,113,118,,51,,1,10,12,,24,33,39,46,53',
'59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32',
'38,45,,,,,14,128,131,102,105,109,111,113,118,121,123,125,127,130,101',
'104,108,110,112,117,128,131,102,105,109,111,113,118,,51,,1,10,12,,24',
'33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,',
'15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118,121,123,125',
'127,130,101,104,108,110,112,117,128,131,102,105,109,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118,121,123',
'125,128,131,102,105,109,111,113,118,121,123,125,,,,,,,51,,1,10,12,,24',
'33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,',
'15,21,,29,32,38,45,,,,,14,128,131,102,105,109,111,113,118,121,123,125',
',,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44',
'52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44',
'52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44',
'52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,',
',,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19,25,,',
'36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14,,,,',
',,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19',
'25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19',
'25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59,4,7,16,19',
'25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,,,14',
',,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53,59,4,7,16',
'19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45,,,',
',14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53,59,4',
'7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38,45',
',,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53,59',
'4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32,38',
'45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46,53',
'59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32',
'38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46,53',
'59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32',
'38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,227,12,,24,33,39,46,53',
'59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29,32',
'38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39,46',
'53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29',
'32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46',
'53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29',
'32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39,46',
'53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21,,29',
'32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24,33,39',
'46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21',
',29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39',
'46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21',
',29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12,,24,33,39',
'46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,,15,21',
',29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12,,24',
'33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57,3,',
'15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10,12',
',24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43,,57',
'3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,40,47,51,,1,10',
'12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43',
',57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10',
'12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43',
',57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10',
'12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43',
',57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10',
'12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43',
',57,3,,15,21,,29,32,38,45,,,,,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,51,,1,10',
'12,,24,33,39,46,53,59,4,7,16,19,25,,,36,44,52,56,,,11,20,26,,,35,43',
',57,3,,15,21,,29,32,38,45,106,,,114,14,,,,,,,,,,,,,,,,,,,,,115,,,,,',
'40,47,51,,1,,12,,24,128,131,102,105,109,111,113,118,121,123,125,127',
'130,101,104,108,110,112,117,120,122,124,126,129,100,103,107,,106,116',
'119,114,,,196,,195,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105',
'109,111,113,118,121,123,125,127,130,101,104,108,110,112,117,120,122',
'124,126,129,100,103,107,,,116,119,106,,135,114,,229,,,,,,,,,,,,,,,,',
',,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125,127',
'130,101,104,108,110,112,117,120,122,124,126,129,100,103,107,,,116,119',
'40,47,106,,135,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102',
'105,109,111,113,118,121,123,125,127,130,101,104,108,110,112,117,120',
'122,124,126,129,100,103,107,,,116,119,40,47,106,,135,114,,,,,,,,,,,',
',,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123',
'125,127,130,101,104,108,110,112,117,120,122,124,126,129,100,103,107',
',,116,119,40,47,106,,135,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,',
'128,131,102,105,109,111,113,118,121,123,125,127,130,101,104,108,110',
'112,117,120,122,124,126,129,100,103,107,,,116,119,40,47,106,,135,114',
',,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118',
'121,123,125,127,130,101,104,108,110,112,117,120,122,124,126,129,100',
'103,107,,,116,119,40,47,106,,,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,',
',,,,,128,131,102,105,109,111,113,118,121,123,125,127,130,101,104,108',
'110,112,117,120,122,124,126,129,100,103,107,,106,116,119,114,,,,,,,',
',,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121',
'123,125,127,130,101,104,108,110,112,117,120,122,124,126,129,100,103',
'107,,106,116,119,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131',
'102,105,109,111,113,118,121,123,125,127,130,101,104,108,110,112,117',
'120,122,124,126,129,100,103,107,,106,116,119,114,,,,,,,,,,,,,,,,,,,',
',,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125,127',
'130,101,104,108,110,112,117,120,122,124,126,129,100,103,107,,106,116',
'119,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111',
'113,118,121,123,125,127,130,101,104,108,110,112,117,120,122,124,126',
'129,100,103,107,,106,116,119,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,',
',,,,128,131,102,105,109,111,113,118,121,123,125,127,130,101,104,108',
'110,112,117,120,122,124,126,129,100,103,107,,106,116,119,114,,,,,,,',
',,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121',
'123,125,127,130,101,104,108,110,112,117,120,122,124,126,129,100,103',
'107,,106,116,119,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131',
'102,105,109,111,113,118,121,123,125,127,130,101,104,108,110,112,117',
'120,122,124,126,129,100,103,107,,106,116,119,114,,,,,,,,,,,,,,,,,,,',
',,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125,127',
'130,101,104,108,110,112,117,120,122,124,126,129,100,103,107,246,106',
'116,119,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109',
'111,113,118,121,123,125,127,130,101,104,108,110,112,117,120,122,124',
'126,129,100,103,107,251,106,116,119,114,,,,,,,,,,,,,,,,,,,,,,115,,,',
',,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125,127,130,101,104',
'108,110,112,117,120,122,124,126,129,100,103,107,106,,,114,,,,,,,,,,',
',,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123',
'125,127,130,101,104,108,110,112,117,120,122,124,126,129,100,103,107',
'106,,,114,,,,,,,,,,,,,,,,,,,,,,115,,,,,,,,,,,,,,,128,131,102,105,109',
'111,113,118,121,123,125,127,130,101,104,108,110,112,117,120,122,124',
'126,129,100,103,107,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118',
'121,123,125,127,130,101,104,108,110,112,117,120,122,124,126,129,100',
'103,107,115,,,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125',
'127,130,101,104,108,110,112,117,120,122,124,126,129,100,103,107,115',
',,,,,,,,,,,,,,128,131,102,105,109,111,113,118,121,123,125,127,130,101',
'104,108,110,112,117,120,122,124,126,129,100,103,107' ]
        racc_action_table = arr = Array.new(7099, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,222,243,13,0,0,0,0,0,0,0,0,0,0,172,94,0,0,0,0,12,141,0,0,0,200,75',
'0,0,90,0,0,140,0,0,208,0,0,0,0,12,141,37,37,0,98,98,144,144,68,144,191',
'140,200,240,240,144,156,156,42,156,44,172,91,13,23,156,57,222,243,224',
'0,0,0,207,0,1,0,115,0,1,1,1,1,1,1,1,1,1,1,90,200,1,1,1,1,98,98,1,1,1',
'208,154,1,1,151,1,1,148,1,1,86,1,1,1,1,88,191,,23,1,191,191,44,91,44',
'23,44,91,,23,158,158,158,158,158,158,158,158,158,158,158,162,162,162',
'81,81,220,,1,,1,3,1,81,1,3,3,3,3,3,3,3,3,3,3,93,93,3,3,3,3,,228,3,3',
'3,228,228,3,3,,3,3,,3,3,,3,3,3,3,,220,95,95,3,220,220,165,165,165,165',
'165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,,69,69,',
'69,55,55,3,69,3,10,3,,3,10,10,10,10,10,10,10,10,10,10,,,10,10,10,10',
',249,10,10,10,249,249,10,10,,10,10,,10,10,,10,10,10,10,166,166,166,',
'10,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157',
'157,157,157,157,157,157,157,157,157,157,,10,,10,11,10,,10,11,11,11,11',
'11,11,11,11,11,11,,,11,11,11,11,,204,11,11,11,204,204,11,11,,11,11,',
'11,11,,11,11,11,11,,,,,11,64,64,64,64,64,64,64,64,64,64,64,64,64,64',
'64,64,64,64,64,64,64,64,64,64,64,64,64,,11,,11,247,11,,11,247,247,247',
'247,247,247,247,247,247,247,,,247,247,247,247,,230,247,247,247,230,230',
'247,247,,247,247,,247,247,,247,247,247,247,,,,,247,160,160,160,160,160',
'160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160',
'160,160,160,160,160,,247,,247,244,247,,247,244,244,244,244,244,244,244',
'244,244,244,,,244,244,244,244,,198,244,244,244,198,198,244,244,,244',
'244,,244,244,,244,244,244,244,,,,,244,169,169,169,169,169,169,169,169',
'169,169,169,169,169,169,169,169,169,169,169,62,62,,62,,62,,244,244,244',
',244,14,244,,244,14,14,14,14,14,14,14,14,14,14,,,14,14,14,14,,241,14',
'14,14,241,241,14,14,,14,14,,14,14,,14,14,14,14,,,,,14,164,164,164,164',
'164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164',
'164,164,164,164,164,164,,14,,14,147,14,,14,147,147,147,147,147,147,147',
'147,147,147,,,147,147,147,147,,,147,147,147,,,147,147,,147,147,,147',
'147,,147,147,147,147,,,,,147,177,177,177,177,177,177,177,177,177,177',
'177,177,177,177,177,177,177,177,177,175,175,175,175,175,,,147,147,147',
',147,24,147,,147,24,24,24,24,24,24,24,24,24,24,,,24,24,24,24,,,24,24',
'24,,,24,24,,24,24,,24,24,,24,24,24,24,,,,,24,183,183,183,183,183,183',
'183,183,183,183,183,183,183,183,183,183,183,183,183,170,170,170,170',
'170,,,24,24,24,,24,29,24,,24,29,29,29,29,29,29,29,29,29,29,,,29,29,29',
'29,,,29,29,29,,,29,29,,29,29,,29,29,,29,29,29,29,,,,,29,186,186,186',
'186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186',
'186,186,186,186,186,186,186,,29,,29,32,29,,29,32,32,32,32,32,32,32,32',
'32,32,,,32,32,32,32,,,32,32,32,,,32,32,,32,32,,32,32,,32,32,32,32,,',
',,32,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179',
'179,179,179,178,178,178,178,178,178,178,178,,32,,32,35,32,,32,35,35',
'35,35,35,35,35,35,35,35,,,35,35,35,35,,,35,35,35,,,35,35,,35,35,,35',
'35,,35,35,35,35,,,,,35,174,174,174,174,174,174,174,174,174,174,174,174',
'174,174,174,174,174,174,174,180,180,180,180,180,180,180,180,,35,,35',
'138,35,,35,138,138,138,138,138,138,138,138,138,138,,,138,138,138,138',
',,138,138,138,,,138,138,,138,138,,138,138,,138,138,138,138,,,,,138,181',
'181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181',
'181,182,182,182,182,182,182,182,182,,138,,138,38,138,,138,38,38,38,38',
'38,38,38,38,38,38,,,38,38,38,38,,,38,38,38,,,38,38,,38,38,,38,38,,38',
'38,38,38,,,,,38,167,167,167,167,167,167,167,167,167,167,167,167,167',
'167,167,167,167,167,167,168,168,168,168,168,,,,,38,,38,236,38,,38,236',
'236,236,236,236,236,236,236,236,236,,,236,236,236,236,,,236,236,236',
',,236,236,,236,236,,236,236,,236,236,236,236,,,,,236,184,184,184,184',
'184,184,184,184,184,184,184,161,161,161,161,161,161,161,161,161,161',
'161,,,,,,,236,,236,43,236,,236,43,43,43,43,43,43,43,43,43,43,,,43,43',
'43,43,,,43,43,43,,,43,43,,43,43,,43,43,,43,43,43,43,,,,,43,187,187,187',
'187,187,187,187,187,187,187,187,,,,,,,,,,,,,,,,,,43,,43,234,43,,43,234',
'234,234,234,234,234,234,234,234,234,,,234,234,234,234,,,234,234,234',
',,234,234,,234,234,,234,234,,234,234,234,234,,,,,234,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,234,,234,45,234,,234,45,45,45,45,45,45,45,45,45,45,,,45',
'45,45,45,,,45,45,45,,,45,45,,45,45,,45,45,,45,45,45,45,,,,,45,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,45,,45,49,45,,45,49,49,49,49,49,49,49,49,49,49',
',,49,49,49,49,,,49,49,49,,,49,49,,49,49,,49,49,,49,49,49,49,,,,,49,',
',,,,,,,,,,,,,,,,,,,,,,,,,49,49,49,,49,51,49,,49,51,51,51,51,51,51,51',
'51,51,51,,,51,51,51,51,,,51,51,51,,,51,51,,51,51,,51,51,,51,51,51,51',
',,,,51,,,,,,,,,,,,,,,,,,,,,,,,,,,51,51,51,,51,52,51,,51,52,52,52,52',
'52,52,52,52,52,52,,,52,52,52,52,,,52,52,52,,,52,52,,52,52,,52,52,,52',
'52,52,52,,,,,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,52,,52,120,52,,52,120,120',
'120,120,120,120,120,120,120,120,,,120,120,120,120,,,120,120,120,,,120',
'120,,120,120,,120,120,,120,120,120,120,,,,,120,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,120,,120,56,120,,120,56,56,56,56,56,56,56,56,56,56,,,56,56,56',
'56,,,56,56,56,,,56,56,,56,56,,56,56,,56,56,56,56,,,,,56,,,,,,,,,,,,',
',,,,,,,,,,,,,,56,56,56,,56,231,56,,56,231,231,231,231,231,231,231,231',
'231,231,,,231,231,231,231,,,231,231,231,,,231,231,,231,231,,231,231',
',231,231,231,231,,,,,231,,,,,,,,,,,,,,,,,,,,,,,,,,,231,231,231,,231',
'136,231,,231,136,136,136,136,136,136,136,136,136,136,,,136,136,136,136',
',,136,136,136,,,136,136,,136,136,,136,136,,136,136,136,136,,,,,136,',
',,,,,,,,,,,,,,,,,,,,,,,,,136,136,136,,136,227,136,,136,227,227,227,227',
'227,227,227,227,227,227,,,227,227,227,227,,,227,227,227,,,227,227,,227',
'227,,227,227,,227,227,227,227,,,,,227,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227',
',227,134,227,,227,134,134,134,134,134,134,134,134,134,134,,,134,134',
'134,134,,,134,134,134,,,134,134,,134,134,,134,134,,134,134,134,134,',
',,,134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,134,,134,133,134,,134,133,133,133',
'133,133,133,133,133,133,133,,,133,133,133,133,,,133,133,133,,,133,133',
',133,133,,133,133,,133,133,133,133,,,,,133,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,133,,133,131,133,,133,131,131,131,131,131,131,131,131,131,131,,,131',
'131,131,131,,,131,131,131,,,131,131,,131,131,,131,131,,131,131,131,131',
',,,,131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,131,,131,130,131,,131,130,130,130',
'130,130,130,130,130,130,130,,,130,130,130,130,,,130,130,130,,,130,130',
',130,130,,130,130,,130,130,130,130,,,,,130,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,130,,130,216,130,,130,216,216,216,216,216,216,216,216,216,216,,,216',
'216,216,216,,,216,216,216,,,216,216,,216,216,,216,216,,216,216,216,216',
',,,,216,,,,,,,,,,,,,,,,,,,,,,,,,,,216,216,216,,216,129,216,,216,129',
'129,129,129,129,129,129,129,129,129,,,129,129,129,129,,,129,129,129',
',,129,129,,129,129,,129,129,,129,129,129,129,,,,,129,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,129,,129,71,129,,129,71,71,71,71,71,71,71,71,71,71,,,71',
'71,71,71,,,71,71,71,,,71,71,,71,71,,71,71,,71,71,71,71,,,,,71,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,71,,71,212,71,,71,212,212,212,212,212,212,212',
'212,212,212,,,212,212,212,212,,,212,212,212,,,212,212,,212,212,,212',
'212,,212,212,212,212,,,,,212,,,,,,,,,,,,,,,,,,,,,,,,,,,212,212,212,',
'212,78,212,,212,78,78,78,78,78,78,78,78,78,78,,,78,78,78,78,,,78,78',
'78,,,78,78,,78,78,,78,78,,78,78,78,78,,,,,78,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,78,,78,79,78,,78,79,79,79,79,79,79,79,79,79,79,,,79,79,79,79,,',
'79,79,79,,,79,79,,79,79,,79,79,,79,79,79,79,,,,,79,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,79,,79,80,79,,79,80,80,80,80,80,80,80,80,80,80,,,80,80,80',
'80,,,80,80,80,,,80,80,,80,80,,80,80,,80,80,80,80,,,,,80,,,,,,,,,,,,',
',,,,,,,,,,,,,,80,80,80,,80,206,80,,80,206,206,206,206,206,206,206,206',
'206,206,,,206,206,206,206,,,206,206,206,,,206,206,,206,206,,206,206',
',206,206,206,206,,,,,206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,206,,206,128,206',
',206,128,128,128,128,128,128,128,128,128,128,,,128,128,128,128,,,128',
'128,128,,,128,128,,128,128,,128,128,,128,128,128,128,,,,,128,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,128,,128,85,128,,128,85,85,85,85,85,85,85,85,85',
'85,,,85,85,85,85,,,85,85,85,,,85,85,,85,85,,85,85,,85,85,85,85,,,,,85',
',,,,,,,,,,,,,,,,,,,,,,,,,,85,85,85,,85,203,85,,85,203,203,203,203,203',
'203,203,203,203,203,,,203,203,203,203,,,203,203,203,,,203,203,,203,203',
',203,203,,203,203,203,203,,,,,203,,,,,,,,,,,,,,,,,,,,,,,,,,,203,203',
'203,,203,201,203,,203,201,201,201,201,201,201,201,201,201,201,,,201',
'201,201,201,,,201,201,201,,,201,201,,201,201,,201,201,,201,201,201,201',
',,,,201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,201,,201,127,201,,201,127,127,127',
'127,127,127,127,127,127,127,,,127,127,127,127,,,127,127,127,,,127,127',
',127,127,,127,127,,127,127,127,127,,,,,127,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,127,,127,196,127,,127,196,196,196,196,196,196,196,196,196,196,,,196',
'196,196,196,,,196,196,196,,,196,196,,196,196,,196,196,,196,196,196,196',
',,,,196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,196,,196,126,196,,196,126,126,126',
'126,126,126,126,126,126,126,,,126,126,126,126,,,126,126,126,,,126,126',
',126,126,,126,126,,126,126,126,126,,,,,126,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,126,,126,125,126,,126,125,125,125,125,125,125,125,125,125,125,,,125',
'125,125,125,,,125,125,125,,,125,125,,125,125,,125,125,,125,125,125,125',
',,,,125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,125,,125,124,125,,125,124,124,124',
'124,124,124,124,124,124,124,,,124,124,124,124,,,124,124,124,,,124,124',
',124,124,,124,124,,124,124,124,124,,,,,124,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,124,,124,123,124,,124,123,123,123,123,123,123,123,123,123,123,,,123',
'123,123,123,,,123,123,123,,,123,123,,123,123,,123,123,,123,123,123,123',
',,,,123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123,,123,122,123,,123,122,122,122',
'122,122,122,122,122,122,122,,,122,122,122,122,,,122,122,122,,,122,122',
',122,122,,122,122,,122,122,122,122,,,,,122,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,122,,122,97,122,,122,97,97,97,97,97,97,97,97,97,97,,,97,97,97,97',
',,97,97,97,,,97,97,,97,97,,97,97,,97,97,97,97,,,,,97,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,97,,97,121,97,,97,121,121,121,121,121,121,121,121,121,121',
',,121,121,121,121,,,121,121,121,,,121,121,,121,121,,121,121,,121,121',
'121,121,,,,,121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,121,,121,99,121,,121,99',
'99,99,99,99,99,99,99,99,99,,,99,99,99,99,,,99,99,99,,,99,99,,99,99,',
'99,99,,99,99,99,99,,,,,99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,99,,99,100,99',
',99,100,100,100,100,100,100,100,100,100,100,,,100,100,100,100,,,100',
'100,100,,,100,100,,100,100,,100,100,,100,100,100,100,,,,,100,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,100,,100,101,100,,100,101,101,101,101,101,101,101',
'101,101,101,,,101,101,101,101,,,101,101,101,,,101,101,,101,101,,101',
'101,,101,101,101,101,,,,,101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,101,,101,102',
'101,,101,102,102,102,102,102,102,102,102,102,102,,,102,102,102,102,',
',102,102,102,,,102,102,,102,102,,102,102,,102,102,102,102,,,,,102,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,102,,102,103,102,,102,103,103,103,103,103',
'103,103,103,103,103,,,103,103,103,103,,,103,103,103,,,103,103,,103,103',
',103,103,,103,103,103,103,,,,,103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,103,,103',
'104,103,,103,104,104,104,104,104,104,104,104,104,104,,,104,104,104,104',
',,104,104,104,,,104,104,,104,104,,104,104,,104,104,104,104,,,,,104,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,104,,104,105,104,,104,105,105,105,105,105',
'105,105,105,105,105,,,105,105,105,105,,,105,105,105,,,105,105,,105,105',
',105,105,,105,105,105,105,,,,,105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,105,,105',
'106,105,,105,106,106,106,106,106,106,106,106,106,106,,,106,106,106,106',
',,106,106,106,,,106,106,,106,106,,106,106,,106,106,106,106,,,,,106,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,106,,106,107,106,,106,107,107,107,107,107',
'107,107,107,107,107,,,107,107,107,107,,,107,107,107,,,107,107,,107,107',
',107,107,,107,107,107,107,,,,,107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,107,,107',
'108,107,,107,108,108,108,108,108,108,108,108,108,108,,,108,108,108,108',
',,108,108,108,,,108,108,,108,108,,108,108,,108,108,108,108,,,,,108,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,108,,108,109,108,,108,109,109,109,109,109',
'109,109,109,109,109,,,109,109,109,109,,,109,109,109,,,109,109,,109,109',
',109,109,,109,109,109,109,,,,,109,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109,,109',
'110,109,,109,110,110,110,110,110,110,110,110,110,110,,,110,110,110,110',
',,110,110,110,,,110,110,,110,110,,110,110,,110,110,110,110,,,,,110,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,110,,110,111,110,,110,111,111,111,111,111',
'111,111,111,111,111,,,111,111,111,111,,,111,111,111,,,111,111,,111,111',
',111,111,,111,111,111,111,,,,,111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111,,111',
'112,111,,111,112,112,112,112,112,112,112,112,112,112,,,112,112,112,112',
',,112,112,112,,,112,112,,112,112,,112,112,,112,112,112,112,,,,,112,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,112,,112,113,112,,112,113,113,113,113,113',
'113,113,113,113,113,,,113,113,113,113,,,113,113,113,,,113,113,,113,113',
',113,113,,113,113,113,113,,,,,113,,,,,,,,,,,,,,,,,,,,,,,,,,,,,113,,113',
'114,113,,113,114,114,114,114,114,114,114,114,114,114,,,114,114,114,114',
',,114,114,114,,,114,114,,114,114,,114,114,,114,114,114,114,,,,,114,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,114,,114,155,114,,114,155,155,155,155,155',
'155,155,155,155,155,,,155,155,155,155,,,155,155,155,,,155,155,,155,155',
',155,155,,155,155,155,155,,,,,155,,,,,,,,,,,,,,,,,,,,,,,,,,,155,155',
'155,,155,116,155,,155,116,116,116,116,116,116,116,116,116,116,,,116',
'116,116,116,,,116,116,116,,,116,116,,116,116,,116,116,,116,116,116,116',
',,,,116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,,116,117,116,,116,117,117,117',
'117,117,117,117,117,117,117,,,117,117,117,117,,,117,117,117,,,117,117',
',117,117,,117,117,,117,117,117,117,,,,,117,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,117,,117,118,117,,117,118,118,118,118,118,118,118,118,118,118,,,118',
'118,118,118,,,118,118,118,,,118,118,,118,118,,118,118,,118,118,118,118',
',,,,118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,118,,118,119,118,,118,119,119,119',
'119,119,119,119,119,119,119,,,119,119,119,119,,,119,119,119,,,119,119',
',119,119,,119,119,,119,119,119,119,,,,,119,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,119,,119,232,119,,119,232,232,232,232,232,232,232,232,232,232,,,232',
'232,232,232,,,232,232,232,,,232,232,,232,232,,232,232,,232,232,232,232',
'142,,,142,232,,,,,,,,,,,,,,,,,,,,,142,,,,,,232,232,232,,232,,232,,232',
'142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142',
'142,142,142,142,142,142,142,142,142,142,,214,142,142,214,,,142,,142',
',,,,,,,,,,,,,,,,214,,,,,,,,,,,,,,,214,214,214,214,214,214,214,214,214',
'214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214',
'214,,,214,214,219,,219,219,,214,,,,,,,,,,,,,,,,,,,,219,,,,,,,,,,,,,',
',219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219',
'219,219,219,219,219,219,219,219,219,219,,,219,219,219,219,237,,237,237',
',,,,,,,,,,,,,,,,,,,,,237,,,,,,,,,,,,,,,237,237,237,237,237,237,237,237',
'237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237',
'237,237,,,237,237,237,237,84,,84,84,,,,,,,,,,,,,,,,,,,,,,84,,,,,,,,',
',,,,,,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84',
'84,84,84,84,84,84,,,84,84,84,84,89,,89,89,,,,,,,,,,,,,,,,,,,,,,89,,',
',,,,,,,,,,,,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89',
'89,89,89,89,89,89,89,89,,,89,89,89,89,65,,65,65,,,,,,,,,,,,,,,,,,,,',
',65,,,,,,,,,,,,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,,,65,65,65,65,189,,,189,,,,,,,,,,,,,,',
',,,,,,,189,,,,,,,,,,,,,,,189,189,189,189,189,189,189,189,189,189,189',
'189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,,96',
'189,189,96,,,,,,,,,,,,,,,,,,,,,,96,,,,,,,,,,,,,,,96,96,96,96,96,96,96',
'96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,,192,96',
'96,192,,,,,,,,,,,,,,,,,,,,,,192,,,,,,,,,,,,,,,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,,223,192,192,223,,,,,,,,,,,,,,,,,,,,,,223,,,,,,,,,,',
',,,,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223',
'223,223,223,223,223,223,223,223,223,223,223,,63,223,223,63,,,,,,,,,',
',,,,,,,,,,,,63,,,,,,,,,,,,,,,63,63,63,63,63,63,63,63,63,63,63,63,63',
'63,63,63,63,63,63,63,63,63,63,63,63,63,63,,61,63,63,61,,,,,,,,,,,,,',
',,,,,,,,61,,,,,,,,,,,,,,,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61',
'61,61,61,61,61,61,61,61,61,61,61,61,,190,61,61,190,,,,,,,,,,,,,,,,,',
',,,,190,,,,,,,,,,,,,,,190,190,190,190,190,190,190,190,190,190,190,190',
'190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,,153,190',
'190,153,,,,,,,,,,,,,,,,,,,,,,153,,,,,,,,,,,,,,,153,153,153,153,153,153',
'153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153',
'153,153,153,153,,242,153,153,242,,,,,,,,,,,,,,,,,,,,,,242,,,,,,,,,,',
',,,,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242',
'242,242,242,242,242,242,242,242,242,242,242,242,250,242,242,250,,,,',
',,,,,,,,,,,,,,,,,250,,,,,,,,,,,,,,,250,250,250,250,250,250,250,250,250',
'250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250',
'250,250,173,250,250,173,,,,,,,,,,,,,,,,,,,,,,173,,,,,,,,,,,,,,,173,173',
'173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173',
'173,173,173,173,173,173,173,173,145,,,145,,,,,,,,,,,,,,,,,,,,,,145,',
',,,,,,,,,,,,,145,145,145,145,145,145,145,145,145,145,145,145,145,145',
'145,145,145,145,145,145,145,145,145,145,145,145,145,176,,,176,,,,,,',
',,,,,,,,,,,,,,,176,,,,,,,,,,,,,,,176,176,176,176,176,176,176,176,176',
'176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176',
'176,163,,,,,,,,,,,,,,,163,163,163,163,163,163,163,163,163,163,163,163',
'163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,171,,,,',
',,,,,,,,,,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171',
'171,171,171,171,171,171,171,171,171,171,171,171,66,,,,,,,,,,,,,,,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66',
'66,66,66' ]
        racc_action_check = arr = Array.new(7099, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,    74,   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,
   226,   302,     5,   -13,   530,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   682,   nil,   nil,   nil,   nil,   758,
   nil,   nil,   834,   nil,   nil,   910,   nil,   -33,  1062,   nil,
   nil,   nil,    59,  1214,    46,  1366,   nil,   nil,   nil,  1442,
   nil,  1518,  1594,   nil,   nil,   150,  1746,   -14,   nil,   nil,
   nil,  6430,   447,  6362,   307,  6017,  7030,   nil,   -21,   146,
   nil,  2506,   nil,   nil,   nil,    11,   nil,   nil,  2658,  2734,
  2810,    72,   nil,   nil,  5871,  3038,    93,   nil,   116,  5944,
    13,    47,   nil,    93,   -54,   121,  6158,  3798,    23,  3950,
  4026,  4102,  4178,  4254,  4330,  4406,  4482,  4558,  4634,  4710,
  4786,  4862,  4938,  5014,  5090,    63,  5242,  5318,  5394,  5470,
  1670,  3874,  3722,  3646,  3570,  3494,  3418,  3266,  2962,  2430,
  2278,  2202,   nil,  2126,  2050,   nil,  1898,   nil,   986,   nil,
    17,     6,  5586,   nil,   -26,  6837,   nil,   606,    39,   nil,
   nil,    74,   nil,  6566,    87,  5166,   -16,   231,    89,   nil,
   383,  1154,   100,  6946,   535,   157,   226,  1067,  1086,   459,
   706,  6988,   -14,  6770,   915,   630,  6904,   611,   858,   839,
   934,   991,  1010,   687,  1143,   nil,   763,  1219,   nil,  6090,
  6498,    48,  6226,   nil,   nil,   nil,  3342,   nil,   408,   nil,
    22,  3190,   nil,  3114,   256,   nil,  2886,    59,    32,   nil,
   nil,   nil,  2582,   nil,  5654,   nil,  2354,   nil,   nil,  5725,
   124,   nil,    -1,  6294,    42,   nil,   nil,  1974,   104,   nil,
   332,  1822,  5546,   nil,  1290,   nil,  1138,  5798,   nil,   nil,
   -19,   484,  6634,     0,   454,   nil,   nil,   378,   nil,   180,
  6702,   nil ]

racc_action_default = [
    -1,  -108,   -89,  -137,   -36,   -19,    -8,   -37,   -20,    -9,
  -137,  -137,   -98,  -102,  -137,   -44,   -38,   -21,   -10,   -39,
   -32,   -30,   -22,   -11,  -137,   -86,   -33,   -23,   -12,  -137,
   -13,  -104,  -137,   -28,   -14,  -137,   -84,  -137,  -137,   -29,
   -24,   -15,  -137,  -137,  -137,  -137,   -31,   -25,   -16,    -2,
   -87,   -82,  -137,   -34,   -17,    -3,  -137,  -137,   -88,   -35,
   -18,    -4,  -137,  -109,   -79,  -137,  -115,   -42,  -137,  -137,
   -99,  -137,   -91,   -93,   -94,  -137,   -47,   -90,  -108,  -137,
  -137,  -137,   -48,   -45,  -137,   -82,  -137,   -46,  -137,  -137,
  -103,  -137,   -49,    -7,  -137,   -83,   -43,    -6,  -137,  -108,
  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,
  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,
  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,
  -137,  -137,  -107,  -137,  -137,   -26,  -137,   -27,  -137,   -97,
  -137,  -137,  -137,   -92,  -137,   -40,  -116,  -137,  -137,   -85,
   252,  -137,   -81,    -5,  -137,  -137,  -137,   -74,   -63,   -52,
   -75,   -64,   -53,  -135,   -76,   -65,   -54,   -66,   -55,   -67,
   -56,  -136,  -137,   -77,   -68,   -57,   -78,   -69,   -58,   -70,
   -59,   -71,   -60,   -72,   -61,   -50,   -73,   -62,   -51,  -111,
  -110,  -137,   -41,  -101,  -100,   -95,  -137,  -105,  -137,   -80,
  -137,  -137,  -124,  -137,  -137,  -106,  -137,  -137,  -137,  -132,
  -134,  -130,  -137,  -128,  -137,  -117,  -137,  -122,  -125,  -137,
  -137,  -113,    -8,  -137,  -137,  -133,  -129,  -137,  -137,   -96,
  -137,  -137,  -137,  -112,  -137,  -118,  -137,  -137,  -131,  -123,
  -126,  -137,  -137,    -8,  -137,  -114,  -120,  -137,  -119,  -127,
  -137,  -121 ]

racc_goto_table = [
    49,    63,    77,    64,   136,   202,    94,    67,    42,   222,
    65,    66,    70,    69,    76,    90,   200,    91,   226,   225,
   nil,   nil,   nil,   147,   nil,   nil,   nil,   nil,   151,    82,
   nil,   nil,    83,   nil,   nil,    84,   nil,   nil,    87,   243,
   148,   nil,   nil,    89,   nil,    92,   nil,   nil,   nil,   nil,
   nil,   nil,    96,   nil,   218,    97,   nil,   nil,   nil,   nil,
   nil,   nil,   133,   nil,   nil,   137,    62,   nil,   nil,   140,
    77,   142,   nil,   nil,   nil,   nil,   nil,   nil,    63,   145,
   nil,    97,   nil,   nil,   137,   nil,   nil,   nil,   nil,   137,
   nil,   nil,   nil,    97,   nil,    97,   nil,   153,    97,    63,
   157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
   167,   168,   169,   170,   171,    55,   173,   174,   175,   176,
   177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
   187,   188,   nil,   189,   190,    67,    67,   nil,   192,    81,
   193,   194,   nil,   144,   133,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   133,   nil,   231,   nil,
   nil,   nil,   nil,   nil,   156,   nil,    95,   nil,   nil,   nil,
   nil,    98,   nil,   nil,   nil,   nil,   244,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    97,   nil,   nil,   nil,   nil,   214,   nil,    97,   nil,
    95,   219,   nil,   nil,    97,   nil,   223,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   137,
    97,   nil,   nil,   nil,   nil,   nil,   nil,   237,    97,   nil,
    97,   nil,   nil,   nil,   242,   nil,   223,   137,   nil,   nil,
    97,    97,   nil,   nil,   nil,   nil,   nil,   250,   nil,    97,
   nil,   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   204,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   220,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,   nil,   nil,
   nil,   230,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   240,   241,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   249 ]

racc_goto_check = [
     2,     4,    28,     4,    21,    36,    24,    20,     1,     5,
     4,     4,    22,    32,     4,    29,    35,     8,    37,    39,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,    21,     4,
   nil,   nil,     4,   nil,   nil,     4,   nil,   nil,     4,     5,
    24,   nil,   nil,     4,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,    36,     2,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,     2,    34,   nil,   nil,     2,
    28,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,     2,   nil,     2,   nil,     4,     2,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     3,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,   nil,     4,     4,    20,    20,   nil,     4,     3,
    22,    22,   nil,    34,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,    21,   nil,
   nil,   nil,   nil,   nil,    34,   nil,     3,   nil,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,     4,   nil,     2,   nil,
     3,     4,   nil,   nil,     2,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
     2,   nil,   nil,   nil,   nil,   nil,   nil,     4,     2,   nil,
     2,   nil,   nil,   nil,     4,   nil,     4,     2,   nil,   nil,
     2,     2,   nil,   nil,   nil,   nil,   nil,     4,   nil,     2,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     8,     0,   115,     0,  -197,   nil,   nil,   -27,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    -5,   -61,     0,   nil,   -45,   nil,   nil,   nil,   -21,   -29,
   nil,   nil,     1,   nil,    65,  -135,  -146,  -190,   nil,  -189,
   nil ]

racc_goto_default = [
   nil,   nil,    80,    93,    61,     6,     9,    18,    23,    28,
    30,    34,    41,    48,    54,    60,     5,     8,    17,    22,
    27,   nil,   nil,    37,   nil,    50,    58,     2,    72,    13,
    73,    74,   nil,    31,   nil,   nil,   nil,   213,   208,   209,
   210 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 84, :_reduce_1,
  1, 84, :_reduce_2,
  1, 84, :_reduce_3,
  1, 86, :_reduce_4,
  3, 86, :_reduce_5,
  2, 86, :_reduce_6,
  2, 86, :_reduce_7,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 90, :_reduce_28,
  1, 90, :_reduce_29,
  1, 90, :_reduce_30,
  1, 90, :_reduce_31,
  1, 90, :_reduce_32,
  1, 90, :_reduce_33,
  1, 90, :_reduce_34,
  1, 90, :_reduce_35,
  1, 90, :_reduce_36,
  1, 90, :_reduce_37,
  1, 90, :_reduce_38,
  1, 90, :_reduce_39,
  3, 95, :_reduce_40,
  3, 105, :_reduce_41,
  1, 105, :_reduce_42,
  2, 99, :_reduce_43,
  1, 103, :_reduce_44,
  2, 94, :_reduce_45,
  2, 94, :_reduce_46,
  2, 94, :_reduce_47,
  2, 94, :_reduce_48,
  2, 94, :_reduce_49,
  3, 94, :_reduce_50,
  3, 94, :_reduce_51,
  3, 94, :_reduce_52,
  3, 94, :_reduce_53,
  3, 94, :_reduce_54,
  3, 94, :_reduce_55,
  3, 94, :_reduce_56,
  3, 94, :_reduce_57,
  3, 94, :_reduce_58,
  3, 94, :_reduce_59,
  3, 94, :_reduce_60,
  3, 94, :_reduce_61,
  3, 94, :_reduce_62,
  3, 94, :_reduce_63,
  3, 94, :_reduce_64,
  3, 94, :_reduce_65,
  3, 94, :_reduce_66,
  3, 94, :_reduce_67,
  3, 94, :_reduce_68,
  3, 94, :_reduce_69,
  3, 94, :_reduce_70,
  3, 94, :_reduce_71,
  3, 94, :_reduce_72,
  3, 94, :_reduce_73,
  3, 94, :_reduce_74,
  3, 94, :_reduce_75,
  3, 94, :_reduce_76,
  3, 94, :_reduce_77,
  3, 94, :_reduce_78,
  2, 94, :_reduce_79,
  4, 93, :_reduce_80,
  3, 93, :_reduce_81,
  0, 107, :_reduce_82,
  1, 107, :_reduce_83,
  1, 106, :_reduce_84,
  3, 106, :_reduce_85,
  1, 91, :_reduce_86,
  1, 91, :_reduce_87,
  1, 91, :_reduce_88,
  1, 91, :_reduce_89,
  2, 91, :_reduce_90,
  2, 91, :_reduce_91,
  2, 111, :_reduce_92,
  1, 111, :_reduce_93,
  1, 111, :_reduce_94,
  3, 113, :_reduce_95,
  5, 114, :_reduce_96,
  3, 109, :_reduce_97,
  0, 115, :_reduce_98,
  1, 115, :_reduce_99,
  3, 115, :_reduce_100,
  3, 115, :_reduce_101,
  1, 92, :_reduce_102,
  2, 92, :_reduce_103,
  1, 92, :_reduce_104,
  4, 112, :_reduce_105,
  4, 116, :_reduce_106,
  3, 108, :_reduce_107,
  0, 117, :_reduce_108,
  1, 117, :_reduce_109,
  3, 117, :_reduce_110,
  3, 117, :_reduce_111,
  6, 97, :_reduce_112,
  5, 97, :_reduce_113,
  8, 97, :_reduce_114,
  2, 98, :_reduce_115,
  3, 110, :_reduce_116,
  5, 100, :_reduce_117,
  6, 101, :_reduce_118,
  8, 101, :_reduce_119,
  8, 101, :_reduce_120,
  10, 101, :_reduce_121,
  5, 102, :_reduce_122,
  7, 102, :_reduce_123,
  1, 118, :_reduce_124,
  2, 118, :_reduce_125,
  4, 119, :_reduce_126,
  5, 120, :_reduce_127,
  1, 121, :_reduce_128,
  2, 121, :_reduce_129,
  1, 122, :_reduce_130,
  3, 122, :_reduce_131,
  1, 123, :_reduce_132,
  2, 123, :_reduce_133,
  5, 96, :_reduce_134,
  3, 96, :_reduce_135,
  3, 96, :_reduce_136 ]

racc_reduce_n = 137

racc_shift_n = 252

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :THEN => 4,
  :UNLESS => 5,
  :NUMBER => 6,
  :STRING => 7,
  :REGEX => 8,
  :TRUE => 9,
  :FALSE => 10,
  :YES => 11,
  :NO => 12,
  :ON => 13,
  :OFF => 14,
  :IDENTIFIER => 15,
  :PROPERTY_ACCESS => 16,
  :CODE => 17,
  :PARAM => 18,
  :NEW => 19,
  :RETURN => 20,
  :TRY => 21,
  :CATCH => 22,
  :FINALLY => 23,
  :THROW => 24,
  :BREAK => 25,
  :CONTINUE => 26,
  :FOR => 27,
  :IN => 28,
  :WHILE => 29,
  :SWITCH => 30,
  :CASE => 31,
  :SUPER => 32,
  :DELETE => 33,
  :NEWLINE => 34,
  :COMMENT => 35,
  :JS => 36,
  :UMINUS => 37,
  :NOT => 38,
  "!" => 39,
  "!!" => 40,
  "~" => 41,
  "*" => 42,
  "/" => 43,
  "%" => 44,
  "+" => 45,
  "-" => 46,
  "<<" => 47,
  ">>" => 48,
  ">>>" => 49,
  "&" => 50,
  "|" => 51,
  "^" => 52,
  "<=" => 53,
  "<" => 54,
  ">" => 55,
  ">=" => 56,
  "==" => 57,
  "!=" => 58,
  :IS => 59,
  :AINT => 60,
  "&&" => 61,
  "||" => 62,
  :AND => 63,
  :OR => 64,
  "-=" => 65,
  "+=" => 66,
  "/=" => 67,
  "*=" => 68,
  "." => 69,
  ":" => 70,
  "||:" => 71,
  "&&:" => 72,
  "\n" => 73,
  ";" => 74,
  "=>" => 75,
  "," => 76,
  "[" => 77,
  "]" => 78,
  "{" => 79,
  "}" => 80,
  "(" => 81,
  ")" => 82 }

racc_nt_base = 83

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "THEN",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "CASE",
  "SUPER",
  "DELETE",
  "NEWLINE",
  "COMMENT",
  "JS",
  "UMINUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "AINT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\".\"",
  "\":\"",
  "\"||:\"",
  "\"&&:\"",
  "\"\\n\"",
  "\";\"",
  "\"=>\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "PureExpression",
  "Statement",
  "Literal",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Comment",
  "Then",
  "AssignObj",
  "ParamList",
  "CodeBody",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "AssignList",
  "Super",
  "ArgList",
  "Cases",
  "Case",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_28(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_29(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_40(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_41(val, _values, result)
     result = AssignNode.new(val[0], val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_42(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_43(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_44(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 139)
  def _reduce_45(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 140)
  def _reduce_46(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 141)
  def _reduce_47(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 160)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 167)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 170)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 171)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 175)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 180)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 187)
  def _reduce_80(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_81(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 193)
  def _reduce_82(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 194)
  def _reduce_83(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 199)
  def _reduce_84(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 200)
  def _reduce_85(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 205)
  def _reduce_86(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 206)
  def _reduce_87(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 207)
  def _reduce_88(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 208)
  def _reduce_89(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 209)
  def _reduce_90(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 210)
  def _reduce_91(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 215)
  def _reduce_92(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 216)
  def _reduce_93(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_94(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 222)
  def _reduce_95(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 227)
  def _reduce_96(val, _values, result)
     result = SliceNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 232)
  def _reduce_97(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 237)
  def _reduce_98(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 238)
  def _reduce_99(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 239)
  def _reduce_100(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 240)
  def _reduce_101(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 245)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 246)
  def _reduce_103(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 247)
  def _reduce_104(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 252)
  def _reduce_105(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 257)
  def _reduce_106(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 262)
  def _reduce_107(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 267)
  def _reduce_108(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 268)
  def _reduce_109(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 269)
  def _reduce_110(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 270)
  def _reduce_111(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 276)
  def _reduce_112(val, _values, result)
     result = TryNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 278)
  def _reduce_113(val, _values, result)
     result = TryNode.new(val[1], nil, nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 281)
  def _reduce_114(val, _values, result)
     result = TryNode.new(val[1], val[3], val[4], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 286)
  def _reduce_115(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 291)
  def _reduce_116(val, _values, result)
     result = ParentheticalNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 297)
  def _reduce_117(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 303)
  def _reduce_118(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 306)
  def _reduce_119(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], nil, val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 309)
  def _reduce_120(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 313)
  def _reduce_121(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], val[8], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 319)
  def _reduce_122(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 321)
  def _reduce_123(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 326)
  def _reduce_124(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 327)
  def _reduce_125(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 332)
  def _reduce_126(val, _values, result)
     result = IfNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 341)
  def _reduce_127(val, _values, result)
     result = IfNode.new(val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 346)
  def _reduce_128(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 347)
  def _reduce_129(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 352)
  def _reduce_130(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 353)
  def _reduce_131(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 358)
  def _reduce_132(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 359)
  def _reduce_133(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 365)
  def _reduce_134(val, _values, result)
     result = IfNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 366)
  def _reduce_135(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 367)
  def _reduce_136(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
