#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 391)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'-128,220,248,-128,-128,130,130,130,199,205,-127,228,239,-127,-127,24',
'203,149,14,21,126,126,-128,-128,126,14,21,198,186,93,96,-128,-127,-127',
'217,14,21,168,186,211,-128,-127,26,26,202,238,26,14,21,130,-127,14,21',
'194,191,14,21,220,192,14,21,211,186,204,187,14,21,93,96,99,104,107,131',
'131,131,193,137,14,21,-128,-128,147,-128,34,-128,47,-128,58,-128,-127',
'-127,218,-127,72,-127,8,-127,70,-127,36,42,49,55,62,2,6,13,19,24,138',
'225,41,46,54,59,219,131,9,20,27,137,,39,45,,60,,4,10,,26,31,93,96,,53',
'61,1,5,12,18,73,74,-146,-146,48,93,96,99,104,107,110,113,115,117,86',
'89,92,95,98,103,106,109,112,114,116,85,93,96,99,104,107,110,113,25,',
'34,8,47,,58,36,42,49,55,62,2,6,13,19,24,14,21,41,46,54,59,-146,-146',
'9,20,27,14,21,39,45,,60,,4,10,,26,31,-146,-146,,53,61,1,5,12,18,-146',
'-146,-146,-146,48,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103',
'106,109,112,114,116,85,93,96,99,104,107,110,113,25,,34,8,47,,58,36,42',
'49,55,62,2,6,13,19,24,93,96,41,46,54,59,-146,-146,9,20,27,-146,-146',
'39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99,104,107,110',
'113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,93,96,99,104,107',
'110,113,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,',
'9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,93',
'96,99,104,107,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46',
'54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59',
',,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,',
',,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,,,,,14,21',
'25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27',
',,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,,,,,14,21',
'25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27',
',,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,93,96,99,104,107,110,113,115,117,86,89,92',
'95,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,93,96,99,104,107,110,113,115,117,86,89,92',
'95,14,21,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,',
',9,20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,,,48,93,96',
'99,104,107,110,113,115,117,86,93,96,99,104,107,110,113,115,117,86,,',
',,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9',
'20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,,,48,93,96,99',
'104,107,110,113,115,117,86,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
'81,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47',
',58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60',
',4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25',
',34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39',
'45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9',
'20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46',
'54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,34,8,47,,58,36,42,49,55,62,2,6,13',
'19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5',
'12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'235,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39',
'45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,',
'9,20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,,,48,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41',
'46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,',
',48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13',
'19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5',
'12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55',
'62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,',
'53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36',
'42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,',
'26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8',
'47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,',
'60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27',
',,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59',
',,9,20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18,,,,,48,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,',
',41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,81,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,14,21,25,,34,8,47',
',58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60',
',4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25',
',34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39',
'45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,14,21,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59',
',,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,',
',,,,,,,,,,,,,,,,,,,14,21,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
',,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2',
'6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61',
'1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49',
'55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31',
',,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58',
'36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10',
',26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,34',
'8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20,27,,,39,45',
',60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54,59,,,9,20',
'27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24,,,41,46,54',
'59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18,,,,,48,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,25,,34,8,47,,58,36,42,49,55,62,2,6,13,19,24',
',,41,46,54,59,,,9,20,27,,,39,45,,60,,4,10,,26,31,,,,53,61,1,5,12,18',
'90,,,100,48,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,25,,34,,47,,58,,,,,93,96',
'99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85',
'88,91,94,97,102,105,108,111,,90,84,87,100,,,215,,216,,,,,,,,,,,,,,,',
',101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95',
'98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,,84,87,90',
',145,100,,242,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,,,84,87,14,21,90,,145,100,,,,,,,,,,,,,,,,,,,,',
',101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95',
'98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,,84,87,14',
'21,90,,145,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88',
'91,94,97,102,105,108,111,,,84,87,14,21,90,,145,100,,,,,,,,,,,,,,,,,',
',,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92',
'95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,,84,87',
'14,21,90,,145,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96',
'99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85',
'88,91,94,97,102,105,108,111,,,84,87,14,21,90,,,100,,,,,,,,,,,,,,,,,',
',,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92',
'95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84',
'87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107',
'110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97',
'102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,',
',,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112',
'114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,',
',,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89',
'92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90',
'84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83',
',,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106',
'109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,,,,,',
',,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117',
'86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111',
',90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88',
'91,94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,',
',83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103',
'106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,',
',,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115',
'117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108',
'111,90,,,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,90,,,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,',
',,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109',
'112,114,116,85,88,91,94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,88,91,94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113',
'115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105',
'108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86',
'89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,101',
',,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98',
'103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,83,,,,,,,,,,',
',,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114',
'116,85,88,91,94,97,102,105,108,111,83,,,,,,,,,,,,,93,96,99,104,107,110',
'113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102',
'105,108,111,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92',
'95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88',
'91,94,97,102,105,108,111,93,96,99,104,107,110,113,115,117,86,89,92,95',
'98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,93,96,99,104,107,110,113,115,117,86,89,92,95,98',
'103,106,109,112,114,116,85,88,91,94,97,102,105,108,111' ]
        racc_action_table = arr = Array.new(8368, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'244,201,244,244,244,123,122,52,140,168,227,209,227,227,227,46,150,74',
'139,139,191,47,244,244,190,196,196,139,196,174,174,244,227,227,196,146',
'146,101,146,209,244,227,191,47,146,225,190,77,77,57,227,124,124,130',
'124,150,150,222,124,118,118,189,118,168,118,140,140,177,177,177,177',
'177,123,122,52,126,123,201,201,244,244,72,244,46,244,46,244,46,244,227',
'227,199,227,16,227,98,227,10,227,98,98,98,98,98,98,98,98,98,98,57,204',
'98,98,98,98,200,57,98,98,98,57,,98,98,,98,,98,98,,98,98,171,171,,98',
'98,98,98,98,98,17,17,71,71,98,179,179,179,179,179,179,179,179,179,179',
'179,179,179,179,179,179,179,179,179,179,179,184,184,184,184,184,184',
'184,98,,98,5,98,,98,5,5,5,5,5,5,5,5,5,5,249,249,5,5,5,5,67,67,5,5,5',
'29,29,5,5,,5,,5,5,,5,5,65,65,,5,5,5,5,5,5,128,128,75,75,5,157,157,157',
'157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157',
'157,155,155,155,155,155,155,155,5,,5,8,5,,5,8,8,8,8,8,8,8,8,8,8,166',
'166,8,8,8,8,134,134,8,8,8,142,142,8,8,,8,,8,8,,8,8,,,,8,8,8,8,8,8,,',
',,8,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154',
'154,154,154,154,154,182,182,182,182,182,182,182,8,,8,9,8,,8,9,9,9,9',
'9,9,9,9,9,9,,,9,9,9,9,,,9,9,9,,,9,9,,9,,9,9,,9,9,,,,9,9,9,9,9,9,,,,',
'9,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162',
'162,162,162,162,180,180,180,180,180,,,9,,9,248,9,,9,248,248,248,248',
'248,248,248,248,248,248,,,248,248,248,248,,,248,248,248,,,248,248,,248',
',248,248,,248,248,,,,248,248,248,248,248,248,,,,,248,183,183,183,183',
'183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183',
',,,,,,,248,,248,12,248,,248,12,12,12,12,12,12,12,12,12,12,,,12,12,12',
'12,,,12,12,12,,,12,12,,12,,12,12,,12,12,,,,12,12,12,12,12,12,,,,,12',
'164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164',
'164,164,164,164,,,,,,,,12,,12,247,12,,12,247,247,247,247,247,247,247',
'247,247,247,,,247,247,247,247,,,247,247,247,,,247,247,,247,,247,247',
',247,247,,,,247,247,247,247,247,247,,,,,247,181,181,181,181,181,181',
'181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,,,,,,247',
'247,247,,247,0,247,,247,0,0,0,0,0,0,0,0,0,0,,,0,0,0,0,,,0,0,0,,,0,0',
',0,,0,0,,0,0,,,,0,0,0,0,0,0,,,,,0,160,160,160,160,160,160,160,160,160',
'160,160,160,160,160,160,160,160,160,160,160,160,,,,,,0,0,0,,0,18,0,',
'0,18,18,18,18,18,18,18,18,18,18,,,18,18,18,18,,,18,18,18,,,18,18,,18',
',18,18,,18,18,,,,18,18,18,18,18,18,,,,,18,173,173,173,173,173,173,173',
'173,173,173,173,173,173,176,176,176,176,176,176,176,176,176,176,176',
'176,176,,,18,,18,23,18,,18,23,23,23,23,23,23,23,23,23,23,,,23,23,23',
'23,,,23,23,23,,,23,23,,23,,23,23,,23,23,,,,23,23,23,23,23,23,,,,,23',
'165,165,165,165,165,165,165,165,165,165,165,165,165,170,170,170,170',
'170,170,170,170,170,170,170,170,170,23,23,23,,23,25,23,,23,25,25,25',
'25,25,25,25,25,25,25,,,25,25,25,25,,,25,25,25,,,25,25,,25,,25,25,,25',
'25,25,,,25,25,25,25,25,25,,,,,25,161,161,161,161,161,161,161,161,161',
'161,158,158,158,158,158,158,158,158,158,158,,,,,,,,,25,,25,241,25,,25',
'241,241,241,241,241,241,241,241,241,241,,,241,241,241,241,,,241,241',
'241,,,241,241,,241,,241,241,,241,241,241,,,241,241,241,241,241,241,',
',,,241,163,163,163,163,163,163,163,163,163,163,,,,,,,,,,,,,,,,,,,241',
',241,239,241,,241,239,239,239,239,239,239,239,239,239,239,,,239,239',
'239,239,,,239,239,239,,,239,239,,239,,239,239,,239,239,,,,239,239,239',
'239,239,239,,,,,239,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239,,239,34,239,,239',
'34,34,34,34,34,34,34,34,34,34,,,34,34,34,34,,,34,34,34,,,34,34,,34,',
'34,34,,34,34,,,,34,34,34,34,34,34,,,,,34,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',34,,34,39,34,,34,39,39,39,39,39,39,39,39,39,39,,,39,39,39,39,,,39,39',
'39,,,39,39,,39,,39,39,,39,39,,,,39,39,39,39,39,39,,,,,39,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,39,,39,45,39,,39,45,45,45,45,45,45,45,45,45,45,,,45',
'45,45,45,,,45,45,45,,,45,45,,45,,45,45,,45,45,,,,45,45,45,45,45,45,',
',,,45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,45,,45,238,45,,45,238,238,238,238',
'238,238,238,238,238,238,,,238,238,238,238,,,238,238,238,,,238,238,,238',
',238,238,,238,238,,,,238,238,238,238,238,238,,,,,238,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,238,,238,235,238,,238,235,235,235,235,235,235,235,235,235',
'235,,,235,235,235,235,,,235,235,235,,,235,235,,235,,235,235,,235,235',
',,,235,235,235,235,235,235,,,,,235,,,,,,,,,,,,,,,,,,,,,,,,,,,,,235,',
'235,48,235,,235,48,48,48,48,48,48,48,48,48,48,,,48,48,48,48,,,48,48',
'48,,,48,48,,48,,48,48,,48,48,,,,48,48,48,48,48,48,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,48,,48,228,48,,48,228,228,228,228,228,228,228,228,228',
'228,,,228,228,228,228,,,228,228,228,,,228,228,,228,,228,228,,228,228',
'228,,,228,228,228,228,228,228,,,,,228,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228',
',228,53,228,,228,53,53,53,53,53,53,53,53,53,53,,,53,53,53,53,,,53,53',
'53,,,53,53,,53,,53,53,,53,53,,,,53,53,53,53,53,53,,,,,53,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,53,,53,54,53,,53,54,54,54,54,54,54,54,54,54,54,,,54',
'54,54,54,,,54,54,54,,,54,54,,54,,54,54,,54,54,,,,54,54,54,54,54,54,',
',,,54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,54,,54,1,54,,54,1,1,1,1,1,1,1,1,1',
'1,,,1,1,1,1,,,1,1,1,,,1,1,,1,,1,1,,1,1,,,,1,1,1,1,1,1,,,,,1,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,1,,1,58,1,,1,58,58,58,58,58,58,58,58,58,58,,,58',
'58,58,58,,,58,58,58,,,58,58,,58,,58,58,,58,58,,,,58,58,58,58,58,58,',
',,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,58,58,58,,58,59,58,,58,59,59,59,59,59',
'59,59,59,59,59,,,59,59,59,59,,,59,59,59,,,59,59,,59,,59,59,,59,59,,',
',59,59,59,59,59,59,,,,,59,,,,,,,,,,,,,,,,,,,,,,,,,,,59,59,59,,59,60',
'59,,59,60,60,60,60,60,60,60,60,60,60,,,60,60,60,60,,,60,60,60,,,60,60',
',60,,60,60,,60,60,,,,60,60,60,60,60,60,,,,,60,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,60,,60,61,60,,60,61,61,61,61,61,61,61,61,61,61,,,61,61,61,61,',
',61,61,61,,,61,61,,61,,61,61,,61,61,,,,61,61,61,61,61,61,,,,,61,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,61,,61,220,61,,61,220,220,220,220,220,220,220',
'220,220,220,,,220,220,220,220,,,220,220,220,,,220,220,,220,,220,220',
',220,220,220,,,220,220,220,220,220,220,,,,,220,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,220,,220,219,220,,220,219,219,219,219,219,219,219,219,219,219',
',,219,219,219,219,,,219,219,219,,,219,219,,219,,219,219,,219,219,219',
',,219,219,219,219,219,219,,,,,219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219,,219',
'218,219,,219,218,218,218,218,218,218,218,218,218,218,,,218,218,218,218',
',,218,218,218,,,218,218,,218,,218,218,,218,218,218,,,218,218,218,218',
'218,218,,,,,218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,218,,218,215,218,,218,215',
'215,215,215,215,215,215,215,215,215,,,215,215,215,215,,,215,215,215',
',,215,215,,215,,215,215,,215,215,,,,215,215,215,215,215,215,,,,,215',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,215,,215,211,215,,215,211,211,211,211,211',
'211,211,211,211,211,,,211,211,211,211,,,211,211,211,,,211,211,,211,',
'211,211,,211,211,,,,211,211,211,211,211,211,,,,,211,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,211,,211,70,211,,211,70,70,70,70,70,70,70,70,70,70,,,70',
'70,70,70,,,70,70,70,,,70,70,,70,,70,70,,70,70,,,,70,70,70,70,70,70,',
',,,70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,70,,70,205,70,,70,205,205,205,205',
'205,205,205,205,205,205,,,205,205,205,205,,,205,205,205,,,205,205,,205',
',205,205,,205,205,,,,205,205,205,205,205,205,,,,,205,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,205,,205,193,205,,205,193,193,193,193,193,193,193,193,193',
'193,,,193,193,193,193,,,193,193,193,,,193,193,,193,,193,193,,193,193',
',,,193,193,193,193,193,193,,,,,193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193,',
'193,73,193,,193,73,73,73,73,73,73,73,73,73,73,,,73,73,73,73,,,73,73',
'73,,,73,73,,73,,73,73,,73,73,73,,,73,73,73,73,73,73,,,,,73,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,73,,73,188,73,,73,188,188,188,188,188,188,188,188',
'188,188,,,188,188,188,188,,,188,188,188,,,188,188,,188,,188,188,,188',
'188,188,,,188,188,188,188,188,188,,,,,188,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,188,,188,186,188,,188,186,186,186,186,186,186,186,186,186,186,,,186',
'186,186,186,,,186,186,186,,,186,186,,186,,186,186,,186,186,,,,186,186',
'186,186,186,186,,,,,186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186,,186,76,186',
',186,76,76,76,76,76,76,76,76,76,76,,,76,76,76,76,,,76,76,76,,,76,76',
',76,,76,76,,76,76,,,,76,76,76,76,76,76,,,,,76,,,,,,,,,,,,,,,,,,,,,,',
',,,,76,76,76,,76,185,76,,76,185,185,185,185,185,185,185,185,185,185',
',,185,185,185,185,,,185,185,185,,,185,185,,185,,185,185,,185,185,,,',
'185,185,185,185,185,185,,,,,185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,185,,185',
'143,185,,185,143,143,143,143,143,143,143,143,143,143,,,143,143,143,143',
',,143,143,143,,,143,143,,143,,143,143,,143,143,,,,143,143,143,143,143',
'143,,,,,143,,,,,,,,,,,,,,,,,,,,,,,,,,,143,143,143,,143,81,143,,143,81',
'81,81,81,81,81,81,81,81,81,,,81,81,81,81,,,81,81,81,,,81,81,,81,,81',
'81,,81,81,,,,81,81,81,81,81,81,,,,,81,,,,,,,,,,,,,,,,,,,,,,,,,,,81,81',
'81,,81,131,81,,81,131,131,131,131,131,131,131,131,131,131,,,131,131',
'131,131,,,131,131,131,,,131,131,,131,,131,131,,131,131,,,,131,131,131',
'131,131,131,,,,,131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,131,,131,83,131,,131',
'83,83,83,83,83,83,83,83,83,83,,,83,83,83,83,,,83,83,83,,,83,83,,83,',
'83,83,,83,83,,,,83,83,83,83,83,83,,,,,83,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',83,,83,84,83,,83,84,84,84,84,84,84,84,84,84,84,,,84,84,84,84,,,84,84',
'84,,,84,84,,84,,84,84,,84,84,,,,84,84,84,84,84,84,,,,,84,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,84,,84,85,84,,84,85,85,85,85,85,85,85,85,85,85,,,85',
'85,85,85,,,85,85,85,,,85,85,,85,,85,85,,85,85,,,,85,85,85,85,85,85,',
',,,85,,,,,,,,,,,,,,,,,,,,,,,,,,,,,85,,85,86,85,,85,86,86,86,86,86,86',
'86,86,86,86,,,86,86,86,86,,,86,86,86,,,86,86,,86,,86,86,,86,86,,,,86',
'86,86,86,86,86,,,,,86,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86,,86,87,86,,86,87',
'87,87,87,87,87,87,87,87,87,,,87,87,87,87,,,87,87,87,,,87,87,,87,,87',
'87,,87,87,,,,87,87,87,87,87,87,,,,,87,,,,,,,,,,,,,,,,,,,,,,,,,,,,,87',
',87,88,87,,87,88,88,88,88,88,88,88,88,88,88,,,88,88,88,88,,,88,88,88',
',,88,88,,88,,88,88,,88,88,,,,88,88,88,88,88,88,,,,,88,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,88,,88,89,88,,88,89,89,89,89,89,89,89,89,89,89,,,89,89',
'89,89,,,89,89,89,,,89,89,,89,,89,89,,89,89,,,,89,89,89,89,89,89,,,,',
'89,,,,,,,,,,,,,,,,,,,,,,,,,,,,,89,,89,90,89,,89,90,90,90,90,90,90,90',
'90,90,90,,,90,90,90,90,,,90,90,90,,,90,90,,90,,90,90,,90,90,,,,90,90',
'90,90,90,90,,,,,90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,90,,90,91,90,,90,91,91',
'91,91,91,91,91,91,91,91,,,91,91,91,91,,,91,91,91,,,91,91,,91,,91,91',
',91,91,,,,91,91,91,91,91,91,,,,,91,,,,,,,,,,,,,,,,,,,,,,,,,,,,,91,,91',
'92,91,,91,92,92,92,92,92,92,92,92,92,92,,,92,92,92,92,,,92,92,92,,,92',
'92,,92,,92,92,,92,92,,,,92,92,92,92,92,92,,,,,92,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,92,,92,94,92,,92,94,94,94,94,94,94,94,94,94,94,,,94,94,94,94',
',,94,94,94,,,94,94,,94,,94,94,,94,94,,,,94,94,94,94,94,94,,,,,94,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,94,,94,95,94,,94,95,95,95,95,95,95,95,95,95',
'95,,,95,95,95,95,,,95,95,95,,,95,95,,95,,95,95,,95,95,,,,95,95,95,95',
'95,95,,,,,95,,,,,,,,,,,,,,,,,,,,,,,,,,,,,95,,95,97,95,,95,97,97,97,97',
'97,97,97,97,97,97,,,97,97,97,97,,,97,97,97,,,97,97,,97,,97,97,,97,97',
',,,97,97,97,97,97,97,,,,,97,,,,,,,,,,,,,,,,,,,,,,,,,,,,,97,,97,4,97',
',97,4,4,4,4,4,4,4,4,4,4,,,4,4,4,4,,,4,4,4,,,4,4,,4,,4,4,,4,4,,,,4,4',
'4,4,4,4,,,,,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,,4,99,4,,4,99,99,99,99,99',
'99,99,99,99,99,,,99,99,99,99,,,99,99,99,,,99,99,,99,,99,99,,99,99,,',
',99,99,99,99,99,99,,,,,99,,,,,,,,,,,,,,,,,,,,,,,,,,,,,99,,99,100,99',
',99,100,100,100,100,100,100,100,100,100,100,,,100,100,100,100,,,100',
'100,100,,,100,100,,100,,100,100,,100,100,,,,100,100,100,100,100,100',
',,,,100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,100,138,100,,100,138,138,138',
'138,138,138,138,138,138,138,,,138,138,138,138,,,138,138,138,,,138,138',
',138,,138,138,,138,138,,,,138,138,138,138,138,138,,,,,138,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,138,,138,102,138,,138,102,102,102,102,102,102,102',
'102,102,102,,,102,102,102,102,,,102,102,102,,,102,102,,102,,102,102',
',102,102,,,,102,102,102,102,102,102,,,,,102,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,102,,102,103,102,,102,103,103,103,103,103,103,103,103,103,103,,',
'103,103,103,103,,,103,103,103,,,103,103,,103,,103,103,,103,103,,,,103',
'103,103,103,103,103,,,,,103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,103,,103,104',
'103,,103,104,104,104,104,104,104,104,104,104,104,,,104,104,104,104,',
',104,104,104,,,104,104,,104,,104,104,,104,104,,,,104,104,104,104,104',
'104,,,,,104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,104,,104,105,104,,104,105,105',
'105,105,105,105,105,105,105,105,,,105,105,105,105,,,105,105,105,,,105',
'105,,105,,105,105,,105,105,,,,105,105,105,105,105,105,,,,,105,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,105,,105,106,105,,105,106,106,106,106,106,106',
'106,106,106,106,,,106,106,106,106,,,106,106,106,,,106,106,,106,,106',
'106,,106,106,,,,106,106,106,106,106,106,,,,,106,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,106,,106,107,106,,106,107,107,107,107,107,107,107,107,107,107',
',,107,107,107,107,,,107,107,107,,,107,107,,107,,107,107,,107,107,,,',
'107,107,107,107,107,107,,,,,107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,107,,107',
'108,107,,107,108,108,108,108,108,108,108,108,108,108,,,108,108,108,108',
',,108,108,108,,,108,108,,108,,108,108,,108,108,,,,108,108,108,108,108',
'108,,,,,108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,108,,108,109,108,,108,109,109',
'109,109,109,109,109,109,109,109,,,109,109,109,109,,,109,109,109,,,109',
'109,,109,,109,109,,109,109,,,,109,109,109,109,109,109,,,,,109,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,109,,109,110,109,,109,110,110,110,110,110,110',
'110,110,110,110,,,110,110,110,110,,,110,110,110,,,110,110,,110,,110',
'110,,110,110,,,,110,110,110,110,110,110,,,,,110,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,110,,110,111,110,,110,111,111,111,111,111,111,111,111,111,111',
',,111,111,111,111,,,111,111,111,,,111,111,,111,,111,111,,111,111,,,',
'111,111,111,111,111,111,,,,,111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111,,111',
'112,111,,111,112,112,112,112,112,112,112,112,112,112,,,112,112,112,112',
',,112,112,112,,,112,112,,112,,112,112,,112,112,,,,112,112,112,112,112',
'112,,,,,112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112,,112,113,112,,112,113,113',
'113,113,113,113,113,113,113,113,,,113,113,113,113,,,113,113,113,,,113',
'113,,113,,113,113,,113,113,,,,113,113,113,113,113,113,,,,,113,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,113,,113,114,113,,113,114,114,114,114,114,114',
'114,114,114,114,,,114,114,114,114,,,114,114,114,,,114,114,,114,,114',
'114,,114,114,,,,114,114,114,114,114,114,,,,,114,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,114,,114,115,114,,114,115,115,115,115,115,115,115,115,115,115',
',,115,115,115,115,,,115,115,115,,,115,115,,115,,115,115,,115,115,,,',
'115,115,115,115,115,115,,,,,115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115,,115',
'116,115,,115,116,116,116,116,116,116,116,116,116,116,,,116,116,116,116',
',,116,116,116,,,116,116,,116,,116,116,,116,116,,,,116,116,116,116,116',
'116,,,,,116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,,116,117,116,,116,117,117',
'117,117,117,117,117,117,117,117,,,117,117,117,117,,,117,117,117,,,117',
'117,,117,,117,117,,117,117,,,,117,117,117,117,117,117,,,,,117,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,117,,117,137,117,,117,137,137,137,137,137,137',
'137,137,137,137,,,137,137,137,137,,,137,137,137,,,137,137,,137,,137',
'137,,137,137,,,,137,137,137,137,137,137,,,,,137,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,137,,137,82,137,,137,82,82,82,82,82,82,82,82,82,82,,,82,82,82',
'82,,,82,82,82,,,82,82,,82,,82,82,,82,82,,,,82,82,82,82,82,82,195,,,195',
'82,,,,,,,,,,,,,,,,,,,,,195,,,,,,195,,82,,82,,82,,82,,,,,195,195,195',
'195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195',
'195,195,195,195,195,195,195,195,195,,231,195,195,231,,,195,,195,,,,',
',,,,,,,,,,,,231,,,,,,231,,,,,,,,,,,,,231,231,231,231,231,231,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
'231,231,231,231,,,231,231,230,,230,230,,231,,,,,,,,,,,,,,,,,,,,230,',
',,,,230,,,,,,,,,,,,,230,230,230,230,230,230,230,230,230,230,230,230',
'230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230',
',,230,230,230,230,120,,120,120,,,,,,,,,,,,,,,,,,,,,,120,,,,,,120,,,',
',,,,,,,,,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,120,120,120,120,120,,,120,120,120',
'120,121,,121,121,,,,,,,,,,,,,,,,,,,,,,121,,,,,,121,,,,,,,,,,,,,121,121',
'121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121',
'121,121,121,121,121,121,121,121,121,121,,,121,121,121,121,243,,243,243',
',,,,,,,,,,,,,,,,,,,,,243,,,,,,243,,,,,,,,,,,,,243,243,243,243,243,243',
'243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243',
'243,243,243,243,243,243,,,243,243,243,243,68,,68,68,,,,,,,,,,,,,,,,',
',,,,,68,,,,,,68,,,,,,,,,,,,,68,68,68,68,68,68,68,68,68,68,68,68,68,68',
'68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,,,68,68,68,68,207,,,207',
',,,,,,,,,,,,,,,,,,,,,207,,,,,,207,,,,,,,,,,,,,207,207,207,207,207,207',
'207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207',
'207,207,207,207,207,207,,206,207,207,206,,,,,,,,,,,,,,,,,,,,,,206,,',
',,,206,,,,,,,,,,,,,206,206,206,206,206,206,206,206,206,206,206,206,206',
'206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,,135',
'206,206,135,,,,,,,,,,,,,,,,,,,,,,135,,,,,,135,,,,,,,,,,,,,135,135,135',
'135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135',
'135,135,135,135,135,135,135,135,135,,33,135,135,33,,,,,,,,,,,,,,,,,',
',,,,33,,,,,,33,,,,,,,,,,,,,33,33,33,33,33,33,33,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,151,33,33,151,,,,,,,,',
',,,,,,,,,,,,,151,,,,,,151,,,,,,,,,,,,,151,151,151,151,151,151,151,151',
'151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151',
'151,151,151,151,,214,151,151,214,,,,,,,,,,,,,,,,,,,,,,214,,,,,,214,',
',,,,,,,,,,,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214',
'214,214,214,214,214,214,214,214,214,214,214,214,214,214,,80,214,214',
'80,,,,,,,,,,,,,,,,,,,,,,80,,,,,,80,,,,,,,,,,,,,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,,119',
'80,80,119,,,,,,,,,,,,,,,,,,,,,,119,,,,,,119,,,,,,,,,,,,,119,119,119',
'119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,119,119,119,119,119,119,119,,226,119,119,226,,,,,,,,,,,,,,,',
',,,,,,226,,,,,,226,,,,,,,,,,,,,226,226,226,226,226,226,226,226,226,226',
'226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226',
'226,226,,156,226,226,156,,,,,,,,,,,,,,,,,,,,,,156,,,,,,156,,,,,,,,,',
',,,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156',
'156,156,156,156,156,156,156,156,156,156,156,156,197,,,197,,,,,,,,,,',
',,,,,,,,,,,197,,,,,,197,,,,,,,,,,,,,197,197,197,197,197,197,197,197',
'197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197',
'197,197,197,197,153,,,153,,,,,,,,,,,,,,,,,,,,,,153,,,,,,153,,,,,,,,',
',,,,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153',
'153,153,153,153,153,153,153,153,153,153,153,153,153,159,,,,,,159,,,',
',,,,,,,,,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159',
'159,159,159,159,159,159,159,159,159,159,159,159,159,159,69,,,,,,69,',
',,,,,,,,,,,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
'69,69,69,69,69,69,69,69,69,69,167,,,,,,167,,,,,,,,,,,,,167,167,167,167',
'167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167',
'167,167,167,167,167,167,167,167,245,,,,,,245,,,,,,,,,,,,,245,245,245',
'245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245',
'245,245,245,245,245,245,245,245,245,250,,,,,,250,,,,,,,,,,,,,250,250',
'250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250',
'250,250,250,250,250,250,250,250,250,250,141,,,,,,,,,,,,,141,141,141',
'141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141',
'141,141,141,141,141,141,141,141,141,66,,,,,,,,,,,,,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66',
'152,,,,,,,,,,,,,152,152,152,152,152,152,152,152,152,152,152,152,152',
'152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,178',
'178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178',
'178,178,178,178,178,178,178,178,178,178,178,175,175,175,175,175,175',
'175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175',
'175,175,175,175,175,175,172,172,172,172,172,172,172,172,172,172,172',
'172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172',
'172,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169',
'169,169,169,169,169,169,169,169,169,169,169,169,169' ]
        racc_action_check = arr = Array.new(8368, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   667,  1897,   nil,   nil,  4685,   175,   nil,   nil,   257,   339,
    10,   nil,   503,   nil,   nil,   nil,    93,    60,   749,   nil,
   nil,   nil,   nil,   831,   nil,   913,   nil,   nil,   nil,   123,
   nil,   nil,   nil,  7221,  1159,   nil,   nil,   nil,   nil,  1241,
   nil,   nil,   nil,   nil,   nil,  1323,     0,     6,  1569,   nil,
   nil,   nil,    -9,  1733,  1815,   nil,   nil,    33,  1979,  2061,
  2143,  2225,   nil,   nil,   nil,   168,  8135,   151,  6920,  7907,
  2717,    97,    81,  2963,    -1,   179,  3209,   -32,   nil,   nil,
  7443,  3455,  6407,  3619,  3701,  3783,  3865,  3947,  4029,  4111,
  4193,  4275,  4357,   nil,  4439,  4521,   nil,  4603,    93,  4767,
  4849,    22,  5013,  5095,  5177,  5259,  5341,  5423,  5505,  5587,
  5669,  5751,  5833,  5915,  5997,  6079,  6161,  6243,   -20,  7517,
  6683,  6762,   -10,   -11,   -28,   nil,    -1,   nil,   177,   nil,
    38,  3537,   nil,   nil,   233,  7147,   nil,  6325,  4931,   -61,
   -14,  8093,   238,  3373,   nil,   nil,   -44,   nil,   nil,   nil,
   -24,  7295,  8177,  7811,   264,   203,  7665,   182,   930,  7859,
   674,   920,   346,  1002,   510,   838,   227,  7955,   -19,  8293,
   851,    86,  8264,   756,   -17,  8235,   769,    21,  8206,   100,
   367,   592,   285,   428,   121,  3291,  3127,   nil,  3045,    30,
     9,     5,   nil,  2881,   nil,  6453,   -54,  7738,   nil,    76,
    92,    -2,   nil,   nil,    95,  2799,  7073,  6999,   nil,     8,
   nil,  2635,   nil,   nil,  7369,  2553,   nil,   nil,  2471,  2389,
  2307,   nil,    54,   nil,   nil,    17,  7591,    10,  1651,   nil,
  6604,  6527,   nil,   nil,   nil,  1487,   nil,   nil,  1405,  1077,
   nil,   995,   nil,  6841,     0,  8003,   nil,   585,   421,   112,
  8051 ]

racc_action_default = [
    -1,  -146,   -38,   -13,  -146,  -146,   -39,   -14,  -146,  -146,
  -146,  -112,  -146,   -40,   -26,   -15,  -146,  -146,  -146,   -41,
   -34,   -27,   -16,    -2,   -94,   -90,   -46,   -35,   -17,    -3,
   -95,   -32,   -18,    -4,  -116,   -96,   -30,   -19,    -8,  -146,
   -97,   -92,   -31,   -20,    -9,  -146,  -146,  -106,  -146,   -33,
   -21,   -10,  -110,  -146,  -146,   -36,   -22,   -11,  -146,  -146,
  -146,  -146,   -37,   -23,   -12,   -48,   -86,   -51,  -146,  -124,
  -116,   -53,  -146,   -90,  -146,   -52,  -146,    -7,   -91,   -89,
   -24,  -146,    -6,  -146,  -146,  -146,  -146,  -146,  -146,  -146,
  -146,  -146,  -146,   -55,  -146,  -146,   -54,  -146,  -146,  -146,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -117,
  -146,  -146,  -111,  -146,  -146,  -107,  -146,   -44,   -49,  -102,
  -146,  -146,   -99,  -101,   -50,   -45,   -98,  -116,  -146,  -146,
  -122,   -85,   -47,  -146,   -29,   -28,  -146,   251,   -88,   -93,
  -146,    -5,   -87,   -83,   -74,   -63,   -84,   -75,   -64,  -144,
   -76,   -65,   -77,   -66,   -78,   -67,   -56,  -145,  -146,   -79,
   -68,   -57,   -80,   -69,   -58,   -81,   -70,   -59,   -82,   -71,
   -60,   -72,   -61,   -73,   -62,  -146,  -146,  -115,  -146,  -146,
  -146,  -146,  -105,  -146,  -100,  -146,  -146,   -42,  -125,  -146,
  -120,  -139,  -114,   -25,  -146,  -146,  -119,  -118,  -126,  -131,
  -133,  -146,  -109,  -108,   -43,  -146,  -103,  -113,  -146,  -146,
  -146,  -137,  -139,  -141,  -143,  -146,  -146,    -8,  -146,  -134,
  -146,  -146,  -123,  -121,  -140,  -146,  -138,  -142,  -146,  -146,
  -132,  -146,  -104,  -146,    -8,  -129,  -135,  -146,  -146,  -136,
  -130 ]

racc_goto_table = [
    23,    65,    79,   143,    66,    67,   136,   227,    68,    69,
   127,   208,    71,   125,    16,   210,   118,   124,    75,   122,
    29,   200,   209,   123,   236,    80,   237,   nil,   nil,    82,
   nil,   nil,   nil,   nil,   119,   229,   nil,   nil,   nil,   120,
   244,   232,   233,   234,   nil,   121,   nil,   nil,   128,   nil,
   148,   240,   146,   134,   135,   188,   189,   nil,   nil,   nil,
   141,   142,   nil,   nil,   246,   nil,   nil,   nil,   144,   nil,
   119,   nil,   136,    80,   nil,   nil,   nil,    82,   139,   140,
   nil,   nil,   151,   152,   153,   154,   155,   156,   157,   158,
   159,   160,   161,   nil,   162,   163,   nil,   164,   165,   166,
   167,   150,   169,   170,   171,   172,   173,   174,   175,   176,
   177,   178,   179,   180,   181,   182,   183,   184,   185,   196,
   144,   144,   nil,   nil,   190,   nil,   nil,   nil,   nil,   nil,
   nil,   195,   nil,   nil,   nil,   nil,   nil,   119,   197,    82,
    82,   nil,   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,
    82,   nil,   nil,   127,   127,   nil,   212,   213,   nil,   nil,
   nil,   nil,   nil,   201,   nil,   241,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   247,   nil,
   nil,   nil,   nil,   nil,   nil,   206,   207,   nil,    80,   nil,
   nil,   nil,   nil,   214,   nil,   nil,   185,   nil,   nil,   nil,
   nil,    82,   nil,   nil,   nil,   226,   nil,   nil,   nil,   nil,
   nil,   230,   nil,   nil,   nil,   231,   nil,   nil,    80,    80,
    80,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    80,   nil,
   144,   nil,   nil,   nil,   nil,   243,   nil,   nil,   226,   245,
   nil,    80,   nil,   144,   nil,   nil,   nil,   nil,   250,    82,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   249 ]

racc_goto_check = [
     2,     4,    25,    22,     4,     4,    29,     5,     4,     4,
    20,    21,     4,    23,     1,    38,    35,    33,     4,    30,
     3,    36,    37,     8,    39,     4,    41,   nil,   nil,     2,
   nil,   nil,   nil,   nil,     4,    38,   nil,   nil,   nil,     4,
     5,    21,    21,    21,   nil,     4,   nil,   nil,     4,   nil,
    25,    21,    35,     4,     4,    22,    22,   nil,   nil,   nil,
     4,     4,   nil,   nil,    21,   nil,   nil,   nil,     2,   nil,
     4,   nil,    29,     4,   nil,   nil,   nil,     2,     3,     3,
   nil,   nil,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,   nil,     4,     4,   nil,     4,     4,     4,
     4,     3,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     2,    35,
     2,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,     4,     2,
     2,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
     2,   nil,   nil,    20,    20,   nil,    23,    23,   nil,   nil,
   nil,   nil,   nil,     3,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,     4,   nil,
   nil,   nil,   nil,     4,   nil,   nil,     2,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,     4,   nil,   nil,     4,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
     2,   nil,   nil,   nil,   nil,     4,   nil,   nil,     4,     4,
   nil,     4,   nil,     2,   nil,   nil,   nil,   nil,     4,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,    14,     0,    20,     0,  -198,   nil,   nil,   -23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -37,  -177,   -65,   -34,   nil,   -23,   nil,   nil,   nil,   -51,
   -27,   nil,   nil,   -30,   nil,   -18,  -119,  -167,  -174,  -198,
   nil,  -196,   nil ]

racc_goto_default = [
   nil,   nil,    76,    77,    33,    38,    44,    51,    57,    64,
     3,     7,    15,    22,    28,    32,    37,    43,    50,    56,
    63,    78,   nil,   nil,    17,   nil,    30,    35,    40,   132,
    52,   133,   129,   nil,    11,   nil,   nil,   nil,   nil,   221,
   222,   223,   224 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 90, :_reduce_1,
  1, 90, :_reduce_2,
  1, 90, :_reduce_3,
  1, 92, :_reduce_4,
  3, 92, :_reduce_5,
  2, 92, :_reduce_6,
  2, 92, :_reduce_7,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 110, :_reduce_24,
  3, 110, :_reduce_25,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 96, :_reduce_30,
  1, 96, :_reduce_31,
  1, 96, :_reduce_32,
  1, 96, :_reduce_33,
  1, 96, :_reduce_34,
  1, 96, :_reduce_35,
  1, 96, :_reduce_36,
  1, 96, :_reduce_37,
  1, 96, :_reduce_38,
  1, 96, :_reduce_39,
  1, 96, :_reduce_40,
  1, 96, :_reduce_41,
  3, 101, :_reduce_42,
  3, 112, :_reduce_43,
  1, 112, :_reduce_44,
  2, 105, :_reduce_45,
  1, 109, :_reduce_46,
  2, 100, :_reduce_47,
  2, 100, :_reduce_48,
  2, 100, :_reduce_49,
  2, 100, :_reduce_50,
  2, 100, :_reduce_51,
  2, 100, :_reduce_52,
  2, 100, :_reduce_53,
  2, 100, :_reduce_54,
  2, 100, :_reduce_55,
  3, 100, :_reduce_56,
  3, 100, :_reduce_57,
  3, 100, :_reduce_58,
  3, 100, :_reduce_59,
  3, 100, :_reduce_60,
  3, 100, :_reduce_61,
  3, 100, :_reduce_62,
  3, 100, :_reduce_63,
  3, 100, :_reduce_64,
  3, 100, :_reduce_65,
  3, 100, :_reduce_66,
  3, 100, :_reduce_67,
  3, 100, :_reduce_68,
  3, 100, :_reduce_69,
  3, 100, :_reduce_70,
  3, 100, :_reduce_71,
  3, 100, :_reduce_72,
  3, 100, :_reduce_73,
  3, 100, :_reduce_74,
  3, 100, :_reduce_75,
  3, 100, :_reduce_76,
  3, 100, :_reduce_77,
  3, 100, :_reduce_78,
  3, 100, :_reduce_79,
  3, 100, :_reduce_80,
  3, 100, :_reduce_81,
  3, 100, :_reduce_82,
  3, 100, :_reduce_83,
  3, 100, :_reduce_84,
  2, 100, :_reduce_85,
  2, 100, :_reduce_86,
  3, 100, :_reduce_87,
  3, 99, :_reduce_88,
  2, 99, :_reduce_89,
  0, 114, :_reduce_90,
  1, 114, :_reduce_91,
  1, 113, :_reduce_92,
  3, 113, :_reduce_93,
  1, 97, :_reduce_94,
  1, 97, :_reduce_95,
  1, 97, :_reduce_96,
  1, 97, :_reduce_97,
  2, 97, :_reduce_98,
  2, 97, :_reduce_99,
  2, 118, :_reduce_100,
  1, 118, :_reduce_101,
  1, 118, :_reduce_102,
  3, 120, :_reduce_103,
  5, 121, :_reduce_104,
  3, 116, :_reduce_105,
  0, 122, :_reduce_106,
  1, 122, :_reduce_107,
  3, 122, :_reduce_108,
  3, 122, :_reduce_109,
  1, 98, :_reduce_110,
  2, 98, :_reduce_111,
  1, 98, :_reduce_112,
  4, 119, :_reduce_113,
  4, 123, :_reduce_114,
  3, 115, :_reduce_115,
  0, 124, :_reduce_116,
  1, 124, :_reduce_117,
  3, 124, :_reduce_118,
  3, 124, :_reduce_119,
  3, 103, :_reduce_120,
  5, 103, :_reduce_121,
  0, 125, :_reduce_122,
  3, 125, :_reduce_123,
  2, 104, :_reduce_124,
  3, 117, :_reduce_125,
  4, 106, :_reduce_126,
  5, 107, :_reduce_127,
  7, 107, :_reduce_128,
  7, 107, :_reduce_129,
  9, 107, :_reduce_130,
  4, 108, :_reduce_131,
  6, 108, :_reduce_132,
  1, 126, :_reduce_133,
  2, 126, :_reduce_134,
  4, 127, :_reduce_135,
  5, 128, :_reduce_136,
  1, 129, :_reduce_137,
  2, 129, :_reduce_138,
  0, 130, :_reduce_139,
  2, 130, :_reduce_140,
  1, 131, :_reduce_141,
  2, 131, :_reduce_142,
  5, 102, :_reduce_143,
  3, 102, :_reduce_144,
  3, 102, :_reduce_145 ]

racc_reduce_n = 146

racc_shift_n = 251

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :THEN => 4,
  :UNLESS => 5,
  :NUMBER => 6,
  :STRING => 7,
  :REGEX => 8,
  :TRUE => 9,
  :FALSE => 10,
  :YES => 11,
  :NO => 12,
  :ON => 13,
  :OFF => 14,
  :IDENTIFIER => 15,
  :PROPERTY_ACCESS => 16,
  :CODE => 17,
  :PARAM => 18,
  :NEW => 19,
  :RETURN => 20,
  :TRY => 21,
  :CATCH => 22,
  :FINALLY => 23,
  :THROW => 24,
  :BREAK => 25,
  :CONTINUE => 26,
  :FOR => 27,
  :IN => 28,
  :WHILE => 29,
  :SWITCH => 30,
  :WHEN => 31,
  :DELETE => 32,
  :INSTANCEOF => 33,
  :TYPEOF => 34,
  :SUPER => 35,
  :NEWLINE => 36,
  :COMMENT => 37,
  :JS => 38,
  :INDENT => 39,
  :OUTDENT => 40,
  :UMINUS => 41,
  :NOT => 42,
  "!" => 43,
  "!!" => 44,
  "~" => 45,
  "++" => 46,
  "--" => 47,
  "*" => 48,
  "/" => 49,
  "%" => 50,
  "+" => 51,
  "-" => 52,
  "<<" => 53,
  ">>" => 54,
  ">>>" => 55,
  "&" => 56,
  "|" => 57,
  "^" => 58,
  "<=" => 59,
  "<" => 60,
  ">" => 61,
  ">=" => 62,
  "==" => 63,
  "!=" => 64,
  :IS => 65,
  :AINT => 66,
  "&&" => 67,
  "||" => 68,
  :AND => 69,
  :OR => 70,
  "-=" => 71,
  "+=" => 72,
  "/=" => 73,
  "*=" => 74,
  "." => 75,
  ":" => 76,
  "||:" => 77,
  "&&:" => 78,
  "\n" => 79,
  ";" => 80,
  "=>" => 81,
  "," => 82,
  "[" => 83,
  "]" => 84,
  "{" => 85,
  "}" => 86,
  "(" => 87,
  ")" => 88 }

racc_nt_base = 89

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "THEN",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "NEWLINE",
  "COMMENT",
  "JS",
  "INDENT",
  "OUTDENT",
  "UMINUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "AINT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\".\"",
  "\":\"",
  "\"||:\"",
  "\"&&:\"",
  "\"\\n\"",
  "\";\"",
  "\"=>\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "PureExpression",
  "Statement",
  "Literal",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Comment",
  "Block",
  "Then",
  "AssignObj",
  "ParamList",
  "CodeBody",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "AssignList",
  "Super",
  "ArgList",
  "Catch",
  "Whens",
  "When",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 56)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_24(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_25(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_30(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_31(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 113)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_40(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_41(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_42(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_43(val, _values, result)
     result = AssignNode.new(val[0], val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 134)
  def _reduce_45(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 139)
  def _reduce_46(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_47(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_48(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 160)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 164)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 167)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 171)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 181)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 183)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 186)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 187)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 189)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 193)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 194)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 195)
  def _reduce_87(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 200)
  def _reduce_88(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 201)
  def _reduce_89(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 206)
  def _reduce_90(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 207)
  def _reduce_91(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 212)
  def _reduce_92(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 213)
  def _reduce_93(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_94(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 219)
  def _reduce_95(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 220)
  def _reduce_96(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 221)
  def _reduce_97(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 222)
  def _reduce_98(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 223)
  def _reduce_99(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 228)
  def _reduce_100(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 229)
  def _reduce_101(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 230)
  def _reduce_102(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 235)
  def _reduce_103(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 240)
  def _reduce_104(val, _values, result)
     result = SliceNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 245)
  def _reduce_105(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 250)
  def _reduce_106(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 251)
  def _reduce_107(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 252)
  def _reduce_108(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 253)
  def _reduce_109(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 258)
  def _reduce_110(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 259)
  def _reduce_111(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 260)
  def _reduce_112(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 265)
  def _reduce_113(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 270)
  def _reduce_114(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 275)
  def _reduce_115(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 280)
  def _reduce_116(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 281)
  def _reduce_117(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 282)
  def _reduce_118(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 283)
  def _reduce_119(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 288)
  def _reduce_120(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 290)
  def _reduce_121(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 295)
  def _reduce_122(val, _values, result)
     result = [nil, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 296)
  def _reduce_123(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 301)
  def _reduce_124(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 306)
  def _reduce_125(val, _values, result)
     result = ParentheticalNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 311)
  def _reduce_126(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 317)
  def _reduce_127(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 320)
  def _reduce_128(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], nil, val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 323)
  def _reduce_129(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 327)
  def _reduce_130(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], val[8], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 333)
  def _reduce_131(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 335)
  def _reduce_132(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 340)
  def _reduce_133(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 341)
  def _reduce_134(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 346)
  def _reduce_135(val, _values, result)
     result = IfNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 355)
  def _reduce_136(val, _values, result)
     result = IfNode.new(val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 360)
  def _reduce_137(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 361)
  def _reduce_138(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 366)
  def _reduce_139(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 367)
  def _reduce_140(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 372)
  def _reduce_141(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 373)
  def _reduce_142(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 379)
  def _reduce_143(val, _values, result)
     result = IfNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 380)
  def _reduce_144(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 381)
  def _reduce_145(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
