#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

module CoffeeScript

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 396)
  # Lex and parse a CoffeeScript.
  def parse(code)
    # Uncomment the following line to enable grammar debugging, in combination
    # with the -g flag in the Rake build task.
    # @yydebug = true
    @tokens = Lexer.new.tokenize(code)
    do_parse
  end

  # Retrieve the next token from the list.
  def next_token
    @tokens.shift
  end

  # Raise a custom error class that knows about line numbers.
  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

clist = [
'-130,222,249,-130,-130,133,133,133,199,206,-129,229,240,-129,-129,23',
'204,239,13,20,126,126,-130,-130,126,13,20,198,186,13,20,-130,-129,-129',
'202,13,20,222,186,212,-130,-129,26,26,218,212,26,-148,-148,133,-129',
'13,20,194,191,13,20,147,192,13,20,226,186,205,187,13,20,93,96,99,104',
'107,134,134,134,150,136,13,20,-130,-130,168,-130,33,-130,46,-130,57',
'-130,-129,-129,219,-129,72,-129,8,-129,70,-129,35,41,49,54,62,2,6,12',
'18,23,137,220,40,45,53,58,193,134,9,19,27,136,,38,44,,60,,4,10,,26,30',
'13,20,,52,61,1,5,11,17,93,96,80,81,48,93,96,99,104,107,110,113,115,117',
'86,89,92,95,98,103,106,109,112,114,116,85,93,96,99,104,107,110,113,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,13,20,40,45,53,58,93,96,9,19',
'27,-148,-148,38,44,,60,,4,10,,26,30,93,96,,52,61,1,5,11,17,-148,-148',
'-148,-148,48,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106',
'109,112,114,116,85,93,96,99,104,107,110,113,24,,33,8,46,,57,35,41,49',
'54,62,2,6,12,18,23,-148,-148,40,45,53,58,-148,-148,9,19,27,-148,-148',
'38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99,104,107,110',
'113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,93,96,99,104,107',
'110,113,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,',
'9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,93',
'96,99,104,107,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58',
',,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,',
',,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19',
'27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,,,,,13,20',
'24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27',
',,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99,104,107',
'110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99,104,107,110,113',
'115,117,86,89,92,95,93,96,99,104,107,110,113,115,117,86,89,92,95,13',
'20,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19',
'27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,93,96,99,104',
'107,110,113,115,117,86,89,92,95,93,96,99,104,107,110,113,115,117,86',
'89,92,95,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58',
',,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99',
'104,107,110,113,115,117,86,93,96,99,104,107,110,113,115,117,86,,,,,',
',13,20,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,93,96,99,104',
'107,110,113,115,117,86,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54',
'62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,',
'52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35',
'41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,',
'26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8',
'46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,',
'60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27',
',,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58',
',,9,19,27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,',
',40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,',
',,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6',
'12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1',
'5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49',
'54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30',
',,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57',
'35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10',
',26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33',
'8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44',
',60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19',
'27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,',
',,,,,,,,,,,,13,20,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,13,20,24,,33,8,46,,57,35,41,49,54,62,2,6,12',
'18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5',
'11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54',
'62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,',
'52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35',
'41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,',
'26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8',
'46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,',
'60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27',
',,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58',
',,9,19,27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,',
',40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,',
',,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6',
'12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1',
'5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49',
'54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30',
',,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57',
'35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10',
',26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33',
'236,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,',
'9,19,27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40',
'45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48',
',,,,,,,,,,,,,,,,,,,,,,,,,,13,20,24,,33,8,46,,57,35,41,49,54,62,2,6,12',
'18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1',
'5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49',
'54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30',
',,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,13,20,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,13',
'20,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19',
'27,,,38,44,,60,,4,10,,26,30,79,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62',
'2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52',
'61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41',
'49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26',
'30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62',
'2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52',
'61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41',
'49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26',
'30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62',
'2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52',
'61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41',
'49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26',
'30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62',
'2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52',
'61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41',
'49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26',
'30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62',
'2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52',
'61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41',
'49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26',
'30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46',
',57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38,44,,60',
',4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24',
',33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9,19,27,,,38',
'44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45,53,58,,,9',
'19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18,23,,,40,45',
'53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11,17,,,,,48,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,24,,33,8,46,,57,35,41,49,54,62,2,6,12,18',
'23,,,40,45,53,58,,,9,19,27,,,38,44,,60,,4,10,,26,30,,,,52,61,1,5,11',
'17,90,,,100,48,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,24,,33,,46,,57,,,,,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,88,91,94,97,102,105,108,111,,90,84,87,100,,,,,243,,,,,,,,,,,,,,,',
',101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95',
'98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,,,84,87,,',
',216,90,217,145,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,88,91,94,97,102,105,108,111,,,84,87,13,20,90,,145,100,,,,,,,,,,,',
',,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86',
'89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,',
',84,87,13,20,90,,145,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,',
',,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114',
'116,85,88,91,94,97,102,105,108,111,,,84,87,13,20,90,,145,100,,,,,,,',
',,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117',
'86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111',
',,84,87,13,20,90,,145,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,',
',,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114',
'116,85,88,91,94,97,102,105,108,111,,,84,87,13,20,90,,,100,,,,,,,,,,',
',,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117',
'86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111',
',90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88',
'91,94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,',
',83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103',
'106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,',
',,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115',
'117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108',
'111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96',
'99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85',
'88,91,94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,',
',,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103',
'106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,',
',,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115',
'117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108',
'111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96',
'99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85',
'88,91,94,97,102,105,108,111,,90,84,87,100,,,,,,,,,,,,,,,,,,,,,,101,',
',,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103',
'106,109,112,114,116,85,88,91,94,97,102,105,108,111,,90,84,87,100,,,',
',,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115',
'117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108',
'111,90,,,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,90,,,100,,,,,,,,,,,,,,,,,,,,,,101,,,,,,83,,,,',
',,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109',
'112,114,116,85,88,91,94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93',
'96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116',
'85,88,91,94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113',
'115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105',
'108,111,101,,,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86',
'89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,101',
',,,,,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92,95,98',
'103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,83,,,,,,,,,,',
',,93,96,99,104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114',
'116,85,88,91,94,97,102,105,108,111,83,,,,,,,,,,,,,93,96,99,104,107,110',
'113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91,94,97,102',
'105,108,111,83,,,,,,,,,,,,,93,96,99,104,107,110,113,115,117,86,89,92',
'95,98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,93,96,99',
'104,107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88',
'91,94,97,102,105,108,111,93,96,99,104,107,110,113,115,117,86,89,92,95',
'98,103,106,109,112,114,116,85,88,91,94,97,102,105,108,111,93,96,99,104',
'107,110,113,115,117,86,89,92,95,98,103,106,109,112,114,116,85,88,91',
'94,97,102,105,108,111,93,96,99,104,107,110,113,115,117,86,89,92,95,98',
'103,106,109,112,114,116,85,88,91,94,97,102,105,108,111' ]
        racc_action_table = arr = Array.new(8372, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'245,201,245,245,245,122,59,123,139,168,228,210,228,228,228,45,148,226',
'138,138,190,191,245,245,46,146,146,138,146,75,75,245,228,228,146,196',
'196,224,196,210,245,228,190,191,196,189,46,142,142,56,228,124,124,133',
'124,148,148,72,124,118,118,205,118,168,118,139,139,180,180,180,180,180',
'122,59,123,81,122,201,201,245,245,101,245,45,245,45,245,45,245,228,228',
'199,228,15,228,98,228,10,228,98,98,98,98,98,98,98,98,98,98,56,200,98',
'98,98,98,126,56,98,98,98,56,,98,98,,98,,98,98,,98,98,250,250,,98,98',
'98,98,98,98,166,166,25,25,98,164,164,164,164,164,164,164,164,164,164',
'164,164,164,164,164,164,164,164,164,164,164,184,184,184,184,184,184',
'184,98,,98,5,98,,98,5,5,5,5,5,5,5,5,5,5,29,29,5,5,5,5,171,171,5,5,5',
'73,73,5,5,,5,,5,5,,5,5,174,174,,5,5,5,5,5,5,65,65,67,67,5,154,154,154',
'154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154',
'154,182,182,182,182,182,182,182,5,,5,8,5,,5,8,8,8,8,8,8,8,8,8,8,71,71',
'8,8,8,8,128,128,8,8,8,129,129,8,8,,8,,8,8,,8,8,,,,8,8,8,8,8,8,,,,,8',
'157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157',
'157,157,157,157,155,155,155,155,155,155,155,8,,8,9,8,,8,9,9,9,9,9,9',
'9,9,9,9,,,9,9,9,9,,,9,9,9,,,9,9,,9,,9,9,,9,9,,,,9,9,9,9,9,9,,,,,9,160',
'160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160',
'160,160,160,177,177,177,177,177,,,9,,9,249,9,,9,249,249,249,249,249',
'249,249,249,249,249,,,249,249,249,249,,,249,249,249,,,249,249,,249,',
'249,249,,249,249,,,,249,249,249,249,249,249,,,,,249,179,179,179,179',
'179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179',
',,,,,,,249,,249,11,249,,249,11,11,11,11,11,11,11,11,11,11,,,11,11,11',
'11,,,11,11,11,,,11,11,,11,,11,11,,11,11,,,,11,11,11,11,11,11,,,,,11',
'162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162',
'162,162,162,162,,,,,,,,11,,11,248,11,,11,248,248,248,248,248,248,248',
'248,248,248,,,248,248,248,248,,,248,248,248,,,248,248,,248,,248,248',
',248,248,,,,248,248,248,248,248,248,,,,,248,181,181,181,181,181,181',
'181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,,,,,,248',
'248,248,,248,17,248,,248,17,17,17,17,17,17,17,17,17,17,,,17,17,17,17',
',,17,17,17,,,17,17,,17,,17,17,,17,17,,,,17,17,17,17,17,17,,,,,17,183',
'183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183',
'183,183,183,,,,,,,,17,,17,22,17,,17,22,22,22,22,22,22,22,22,22,22,,',
'22,22,22,22,,,22,22,22,,,22,22,,22,,22,22,,22,22,,,,22,22,22,22,22,22',
',,,,22,173,173,173,173,173,173,173,173,173,173,173,173,173,165,165,165',
'165,165,165,165,165,165,165,165,165,165,22,22,22,,22,24,22,,22,24,24',
'24,24,24,24,24,24,24,24,,,24,24,24,24,,,24,24,24,,,24,24,,24,,24,24',
',24,24,24,,,24,24,24,24,24,24,,,,,24,170,170,170,170,170,170,170,170',
'170,170,170,170,170,176,176,176,176,176,176,176,176,176,176,176,176',
'176,,,24,,24,0,24,,24,0,0,0,0,0,0,0,0,0,0,,,0,0,0,0,,,0,0,0,,,0,0,,0',
',0,0,,0,0,,,,0,0,0,0,0,0,,,,,0,163,163,163,163,163,163,163,163,163,163',
'161,161,161,161,161,161,161,161,161,161,,,,,,,0,0,0,,0,185,0,,0,185',
'185,185,185,185,185,185,185,185,185,,,185,185,185,185,,,185,185,185',
',,185,185,,185,,185,185,,185,185,,,,185,185,185,185,185,185,,,,,185',
'158,158,158,158,158,158,158,158,158,158,,,,,,,,,,,,,,,,,,,185,,185,186',
'185,,185,186,186,186,186,186,186,186,186,186,186,,,186,186,186,186,',
',186,186,186,,,186,186,,186,,186,186,,186,186,,,,186,186,186,186,186',
'186,,,,,186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186,,186,33,186,,186,33,33,33',
'33,33,33,33,33,33,33,,,33,33,33,33,,,33,33,33,,,33,33,,33,,33,33,,33',
'33,,,,33,33,33,33,33,33,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,,33,38',
'33,,33,38,38,38,38,38,38,38,38,38,38,,,38,38,38,38,,,38,38,38,,,38,38',
',38,,38,38,,38,38,,,,38,38,38,38,38,38,,,,,38,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,38,,38,44,38,,38,44,44,44,44,44,44,44,44,44,44,,,44,44,44,44,',
',44,44,44,,,44,44,,44,,44,44,,44,44,,,,44,44,44,44,44,44,,,,,44,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,44,,44,242,44,,44,242,242,242,242,242,242,242',
'242,242,242,,,242,242,242,242,,,242,242,242,,,242,242,,242,,242,242',
',242,242,242,,,242,242,242,242,242,242,,,,,242,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,242,,242,240,242,,242,240,240,240,240,240,240,240,240,240,240',
',,240,240,240,240,,,240,240,240,,,240,240,,240,,240,240,,240,240,,,',
'240,240,240,240,240,240,,,,,240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,240,,240',
'48,240,,240,48,48,48,48,48,48,48,48,48,48,,,48,48,48,48,,,48,48,48,',
',48,48,,48,,48,48,,48,48,,,,48,48,48,48,48,48,,,,,48,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,48,,48,52,48,,48,52,52,52,52,52,52,52,52,52,52,,,52,52',
'52,52,,,52,52,52,,,52,52,,52,,52,52,,52,52,,,,52,52,52,52,52,52,,,,',
'52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,52,,52,53,52,,52,53,53,53,53,53,53,53',
'53,53,53,,,53,53,53,53,,,53,53,53,,,53,53,,53,,53,53,,53,53,,,,53,53',
'53,53,53,53,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,,53,239,53,,53,239',
'239,239,239,239,239,239,239,239,239,,,239,239,239,239,,,239,239,239',
',,239,239,,239,,239,239,,239,239,,,,239,239,239,239,239,239,,,,,239',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,239,,239,57,239,,239,57,57,57,57,57,57,57',
'57,57,57,,,57,57,57,57,,,57,57,57,,,57,57,,57,,57,57,,57,57,,,,57,57',
'57,57,57,57,,,,,57,,,,,,,,,,,,,,,,,,,,,,,,,,,57,57,57,,57,58,57,,57',
'58,58,58,58,58,58,58,58,58,58,,,58,58,58,58,,,58,58,58,,,58,58,,58,',
'58,58,,58,58,,,,58,58,58,58,58,58,,,,,58,,,,,,,,,,,,,,,,,,,,,,,,,,,58',
'58,58,,58,236,58,,58,236,236,236,236,236,236,236,236,236,236,,,236,236',
'236,236,,,236,236,236,,,236,236,,236,,236,236,,236,236,,,,236,236,236',
'236,236,236,,,,,236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236,,236,60,236,,236',
'60,60,60,60,60,60,60,60,60,60,,,60,60,60,60,,,60,60,60,,,60,60,,60,',
'60,60,,60,60,,,,60,60,60,60,60,60,,,,,60,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',60,,60,61,60,,60,61,61,61,61,61,61,61,61,61,61,,,61,61,61,61,,,61,61',
'61,,,61,61,,61,,61,61,,61,61,,,,61,61,61,61,61,61,,,,,61,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,61,,61,137,61,,61,137,137,137,137,137,137,137,137,137',
'137,,,137,137,137,137,,,137,137,137,,,137,137,,137,,137,137,,137,137',
',,,137,137,137,137,137,137,,,,,137,,,,,,,,,,,,,,,,,,,,,,,,,,,,,137,',
'137,136,137,,137,136,136,136,136,136,136,136,136,136,136,,,136,136,136',
'136,,,136,136,136,,,136,136,,136,,136,136,,136,136,,,,136,136,136,136',
'136,136,,,,,136,,,,,,,,,,,,,,,,,,,,,,,,,,,,,136,,136,229,136,,136,229',
'229,229,229,229,229,229,229,229,229,,,229,229,229,229,,,229,229,229',
',,229,229,,229,,229,229,,229,229,229,,,229,229,229,229,229,229,,,,,229',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,229,,229,134,229,,229,134,134,134,134,134',
'134,134,134,134,134,,,134,134,134,134,,,134,134,134,,,134,134,,134,',
'134,134,,134,134,,,,134,134,134,134,134,134,,,,,134,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,134,,134,1,134,,134,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,,,1,1',
'1,,,1,1,,1,,1,1,,1,1,,,,1,1,1,1,1,1,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,1,,1,70,1,,1,70,70,70,70,70,70,70,70,70,70,,,70,70,70,70,,,70,70,70',
',,70,70,,70,,70,70,,70,70,,,,70,70,70,70,70,70,,,,,70,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,70,,70,188,70,,70,188,188,188,188,188,188,188,188,188',
'188,,,188,188,188,188,,,188,188,188,,,188,188,,188,,188,188,,188,188',
'188,,,188,188,188,188,188,188,,,,,188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,188',
',188,222,188,,188,222,222,222,222,222,222,222,222,222,222,,,222,222',
'222,222,,,222,222,222,,,222,222,,222,,222,222,,222,222,222,,,222,222',
'222,222,222,222,,,,,222,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222,,222,220,222',
',222,220,220,220,220,220,220,220,220,220,220,,,220,220,220,220,,,220',
'220,220,,,220,220,,220,,220,220,,220,220,220,,,220,220,220,220,220,220',
',,,,220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220,,220,74,220,,220,74,74,74,74',
'74,74,74,74,74,74,,,74,74,74,74,,,74,74,74,,,74,74,,74,,74,74,,74,74',
',,,74,74,74,74,74,74,,,,,74,,,,,,,,,,,,,,,,,,,,,,,,,,,74,74,74,,74,219',
'74,,74,219,219,219,219,219,219,219,219,219,219,,,219,219,219,219,,,219',
'219,219,,,219,219,,219,,219,219,,219,219,219,,,219,219,219,219,219,219',
',,,,219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219,,219,143,219,,219,143,143,143',
'143,143,143,143,143,143,143,,,143,143,143,143,,,143,143,143,,,143,143',
',143,,143,143,,143,143,,,,143,143,143,143,143,143,,,,,143,,,,,,,,,,',
',,,,,,,,,,,,,,,,143,143,143,,143,79,143,,143,79,79,79,79,79,79,79,79',
'79,79,,,79,79,79,79,,,79,79,79,,,79,79,,79,,79,79,,79,79,,,,79,79,79',
'79,79,79,,,,,79,,,,,,,,,,,,,,,,,,,,,,,,,,,79,79,79,,79,80,79,,79,80',
'80,80,80,80,80,80,80,80,80,,,80,80,80,80,,,80,80,80,,,80,80,,80,,80',
'80,,80,80,80,,,80,80,80,80,80,80,,,,,80,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'80,,80,216,80,,80,216,216,216,216,216,216,216,216,216,216,,,216,216',
'216,216,,,216,216,216,,,216,216,,216,,216,216,,216,216,,,,216,216,216',
'216,216,216,,,,,216,,,,,,,,,,,,,,,,,,,,,,,,,,,,,216,,216,82,216,,216',
'82,82,82,82,82,82,82,82,82,82,,,82,82,82,82,,,82,82,82,,,82,82,,82,',
'82,82,,82,82,,,,82,82,82,82,82,82,,,,,82,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',82,,82,83,82,,82,83,83,83,83,83,83,83,83,83,83,,,83,83,83,83,,,83,83',
'83,,,83,83,,83,,83,83,,83,83,,,,83,83,83,83,83,83,,,,,83,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,83,,83,84,83,,83,84,84,84,84,84,84,84,84,84,84,,,84',
'84,84,84,,,84,84,84,,,84,84,,84,,84,84,,84,84,,,,84,84,84,84,84,84,',
',,,84,,,,,,,,,,,,,,,,,,,,,,,,,,,,,84,,84,85,84,,84,85,85,85,85,85,85',
'85,85,85,85,,,85,85,85,85,,,85,85,85,,,85,85,,85,,85,85,,85,85,,,,85',
'85,85,85,85,85,,,,,85,,,,,,,,,,,,,,,,,,,,,,,,,,,,,85,,85,86,85,,85,86',
'86,86,86,86,86,86,86,86,86,,,86,86,86,86,,,86,86,86,,,86,86,,86,,86',
'86,,86,86,,,,86,86,86,86,86,86,,,,,86,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86',
',86,87,86,,86,87,87,87,87,87,87,87,87,87,87,,,87,87,87,87,,,87,87,87',
',,87,87,,87,,87,87,,87,87,,,,87,87,87,87,87,87,,,,,87,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,87,,87,88,87,,87,88,88,88,88,88,88,88,88,88,88,,,88,88',
'88,88,,,88,88,88,,,88,88,,88,,88,88,,88,88,,,,88,88,88,88,88,88,,,,',
'88,,,,,,,,,,,,,,,,,,,,,,,,,,,,,88,,88,89,88,,88,89,89,89,89,89,89,89',
'89,89,89,,,89,89,89,89,,,89,89,89,,,89,89,,89,,89,89,,89,89,,,,89,89',
'89,89,89,89,,,,,89,,,,,,,,,,,,,,,,,,,,,,,,,,,,,89,,89,90,89,,89,90,90',
'90,90,90,90,90,90,90,90,,,90,90,90,90,,,90,90,90,,,90,90,,90,,90,90',
',90,90,,,,90,90,90,90,90,90,,,,,90,,,,,,,,,,,,,,,,,,,,,,,,,,,,,90,,90',
'91,90,,90,91,91,91,91,91,91,91,91,91,91,,,91,91,91,91,,,91,91,91,,,91',
'91,,91,,91,91,,91,91,,,,91,91,91,91,91,91,,,,,91,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,91,,91,92,91,,91,92,92,92,92,92,92,92,92,92,92,,,92,92,92,92',
',,92,92,92,,,92,92,,92,,92,92,,92,92,,,,92,92,92,92,92,92,,,,,92,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,92,,92,94,92,,92,94,94,94,94,94,94,94,94,94',
'94,,,94,94,94,94,,,94,94,94,,,94,94,,94,,94,94,,94,94,,,,94,94,94,94',
'94,94,,,,,94,,,,,,,,,,,,,,,,,,,,,,,,,,,,,94,,94,95,94,,94,95,95,95,95',
'95,95,95,95,95,95,,,95,95,95,95,,,95,95,95,,,95,95,,95,,95,95,,95,95',
',,,95,95,95,95,95,95,,,,,95,,,,,,,,,,,,,,,,,,,,,,,,,,,,,95,,95,97,95',
',95,97,97,97,97,97,97,97,97,97,97,,,97,97,97,97,,,97,97,97,,,97,97,',
'97,,97,97,,97,97,,,,97,97,97,97,97,97,,,,,97,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,97,,97,4,97,,97,4,4,4,4,4,4,4,4,4,4,,,4,4,4,4,,,4,4,4,,,4,4,,4',
',4,4,,4,4,,,,4,4,4,4,4,4,,,,,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,,4,99,4',
',4,99,99,99,99,99,99,99,99,99,99,,,99,99,99,99,,,99,99,99,,,99,99,,99',
',99,99,,99,99,,,,99,99,99,99,99,99,,,,,99,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,99,,99,100,99,,99,100,100,100,100,100,100,100,100,100,100,,,100,100',
'100,100,,,100,100,100,,,100,100,,100,,100,100,,100,100,,,,100,100,100',
'100,100,100,,,,,100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,100,193,100,,100',
'193,193,193,193,193,193,193,193,193,193,,,193,193,193,193,,,193,193',
'193,,,193,193,,193,,193,193,,193,193,,,,193,193,193,193,193,193,,,,',
'193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193,,193,102,193,,193,102,102,102,102',
'102,102,102,102,102,102,,,102,102,102,102,,,102,102,102,,,102,102,,102',
',102,102,,102,102,,,,102,102,102,102,102,102,,,,,102,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,102,,102,103,102,,102,103,103,103,103,103,103,103,103,103',
'103,,,103,103,103,103,,,103,103,103,,,103,103,,103,,103,103,,103,103',
',,,103,103,103,103,103,103,,,,,103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,103,',
'103,104,103,,103,104,104,104,104,104,104,104,104,104,104,,,104,104,104',
'104,,,104,104,104,,,104,104,,104,,104,104,,104,104,,,,104,104,104,104',
'104,104,,,,,104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,104,,104,105,104,,104,105',
'105,105,105,105,105,105,105,105,105,,,105,105,105,105,,,105,105,105',
',,105,105,,105,,105,105,,105,105,,,,105,105,105,105,105,105,,,,,105',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,105,,105,106,105,,105,106,106,106,106,106',
'106,106,106,106,106,,,106,106,106,106,,,106,106,106,,,106,106,,106,',
'106,106,,106,106,,,,106,106,106,106,106,106,,,,,106,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,106,,106,107,106,,106,107,107,107,107,107,107,107,107,107',
'107,,,107,107,107,107,,,107,107,107,,,107,107,,107,,107,107,,107,107',
',,,107,107,107,107,107,107,,,,,107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,107,',
'107,108,107,,107,108,108,108,108,108,108,108,108,108,108,,,108,108,108',
'108,,,108,108,108,,,108,108,,108,,108,108,,108,108,,,,108,108,108,108',
'108,108,,,,,108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,108,,108,109,108,,108,109',
'109,109,109,109,109,109,109,109,109,,,109,109,109,109,,,109,109,109',
',,109,109,,109,,109,109,,109,109,,,,109,109,109,109,109,109,,,,,109',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,109,,109,110,109,,109,110,110,110,110,110',
'110,110,110,110,110,,,110,110,110,110,,,110,110,110,,,110,110,,110,',
'110,110,,110,110,,,,110,110,110,110,110,110,,,,,110,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,110,,110,111,110,,110,111,111,111,111,111,111,111,111,111',
'111,,,111,111,111,111,,,111,111,111,,,111,111,,111,,111,111,,111,111',
',,,111,111,111,111,111,111,,,,,111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111,',
'111,206,111,,111,206,206,206,206,206,206,206,206,206,206,,,206,206,206',
'206,,,206,206,206,,,206,206,,206,,206,206,,206,206,,,,206,206,206,206',
'206,206,,,,,206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,206,,206,113,206,,206,113',
'113,113,113,113,113,113,113,113,113,,,113,113,113,113,,,113,113,113',
',,113,113,,113,,113,113,,113,113,,,,113,113,113,113,113,113,,,,,113',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,113,,113,114,113,,113,114,114,114,114,114',
'114,114,114,114,114,,,114,114,114,114,,,114,114,114,,,114,114,,114,',
'114,114,,114,114,,,,114,114,114,114,114,114,,,,,114,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,114,,114,115,114,,114,115,115,115,115,115,115,115,115,115',
'115,,,115,115,115,115,,,115,115,115,,,115,115,,115,,115,115,,115,115',
',,,115,115,115,115,115,115,,,,,115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,115,',
'115,116,115,,115,116,116,116,116,116,116,116,116,116,116,,,116,116,116',
'116,,,116,116,116,,,116,116,,116,,116,116,,116,116,,,,116,116,116,116',
'116,116,,,,,116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116,,116,117,116,,116,117',
'117,117,117,117,117,117,117,117,117,,,117,117,117,117,,,117,117,117',
',,117,117,,117,,117,117,,117,117,,,,117,117,117,117,117,117,,,,,117',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,117,,117,212,117,,117,212,212,212,212,212',
'212,212,212,212,212,,,212,212,212,212,,,212,212,212,,,212,212,,212,',
'212,212,,212,212,,,,212,212,212,212,212,212,,,,,212,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,212,,212,112,212,,212,112,112,112,112,112,112,112,112,112',
'112,,,112,112,112,112,,,112,112,112,,,112,112,,112,,112,112,,112,112',
',,,112,112,112,112,112,112,232,,,232,112,,,,,,,,,,,,,,,,,,,,,232,,,',
',,232,,112,,112,,112,,112,,,,,232,232,232,232,232,232,232,232,232,232',
'232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232',
'232,232,,195,232,232,195,,,,,232,,,,,,,,,,,,,,,,,195,,,,,,195,,,,,,',
',,,,,,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195',
'195,195,195,195,195,195,195,195,195,195,195,195,195,,,195,195,,,,195',
'231,195,231,231,,,,,,,,,,,,,,,,,,,,,,231,,,,,,231,,,,,,,,,,,,,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
'231,231,231,231,231,231,231,231,231,231,,,231,231,231,231,120,,120,120',
',,,,,,,,,,,,,,,,,,,,,120,,,,,,120,,,,,,,,,,,,,120,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120',
'120,120,120,120,120,120,,,120,120,120,120,244,,244,244,,,,,,,,,,,,,',
',,,,,,,,244,,,,,,244,,,,,,,,,,,,,244,244,244,244,244,244,244,244,244',
'244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244',
'244,244,244,,,244,244,244,244,121,,121,121,,,,,,,,,,,,,,,,,,,,,,121',
',,,,,121,,,,,,,,,,,,,121,121,121,121,121,121,121,121,121,121,121,121',
'121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121',
',,121,121,121,121,68,,68,68,,,,,,,,,,,,,,,,,,,,,,68,,,,,,68,,,,,,,,',
',,,,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68',
'68,68,68,68,68,68,68,,,68,68,68,68,78,,,78,,,,,,,,,,,,,,,,,,,,,,78,',
',,,,78,,,,,,,,,,,,,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78',
'78,78,78,78,78,78,78,78,78,78,78,78,,227,78,78,227,,,,,,,,,,,,,,,,,',
',,,,227,,,,,,227,,,,,,,,,,,,,227,227,227,227,227,227,227,227,227,227',
'227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227',
'227,227,,215,227,227,215,,,,,,,,,,,,,,,,,,,,,,215,,,,,,215,,,,,,,,,',
',,,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215',
'215,215,215,215,215,215,215,215,215,215,215,215,,119,215,215,119,,,',
',,,,,,,,,,,,,,,,,,119,,,,,,119,,,,,,,,,,,,,119,119,119,119,119,119,119',
'119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119',
'119,119,119,119,119,,207,119,119,207,,,,,,,,,,,,,,,,,,,,,,207,,,,,,207',
',,,,,,,,,,,,207,207,207,207,207,207,207,207,207,207,207,207,207,207',
'207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,,32,207',
'207,32,,,,,,,,,,,,,,,,,,,,,,32,,,,,,32,,,,,,,,,,,,,32,32,32,32,32,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
',208,32,32,208,,,,,,,,,,,,,,,,,,,,,,208,,,,,,208,,,,,,,,,,,,,208,208',
'208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208',
'208,208,208,208,208,208,208,208,208,208,,151,208,208,151,,,,,,,,,,,',
',,,,,,,,,,151,,,,,,151,,,,,,,,,,,,,151,151,151,151,151,151,151,151,151',
'151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151',
'151,151,151,,130,151,151,130,,,,,,,,,,,,,,,,,,,,,,130,,,,,,130,,,,,',
',,,,,,,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130',
'130,130,130,130,130,130,130,130,130,130,130,130,130,,156,130,130,156',
',,,,,,,,,,,,,,,,,,,,,156,,,,,,156,,,,,,,,,,,,,156,156,156,156,156,156',
'156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156',
'156,156,156,156,156,156,153,,,153,,,,,,,,,,,,,,,,,,,,,,153,,,,,,153',
',,,,,,,,,,,,153,153,153,153,153,153,153,153,153,153,153,153,153,153',
'153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,197,,,197',
',,,,,,,,,,,,,,,,,,,,,197,,,,,,197,,,,,,,,,,,,,197,197,197,197,197,197',
'197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197',
'197,197,197,197,197,197,167,,,,,,167,,,,,,,,,,,,,167,167,167,167,167',
'167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167',
'167,167,167,167,167,167,167,69,,,,,,69,,,,,,,,,,,,,69,69,69,69,69,69',
'69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
'246,,,,,,246,,,,,,,,,,,,,246,246,246,246,246,246,246,246,246,246,246',
'246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246',
'246,251,,,,,,251,,,,,,,,,,,,,251,251,251,251,251,251,251,251,251,251',
'251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251',
'251,251,159,,,,,,159,,,,,,,,,,,,,159,159,159,159,159,159,159,159,159',
'159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159',
'159,159,159,141,,,,,,,,,,,,,141,141,141,141,141,141,141,141,141,141',
'141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141',
'141,141,66,,,,,,,,,,,,,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,66,152,,,,,,,,,,,,,152,152,152',
'152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152',
'152,152,152,152,152,152,152,152,152,172,172,172,172,172,172,172,172',
'172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172',
'172,172,172,172,169,169,169,169,169,169,169,169,169,169,169,169,169',
'169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,178',
'178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178',
'178,178,178,178,178,178,178,178,178,178,178,175,175,175,175,175,175',
'175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175',
'175,175,175,175,175,175' ]
        racc_action_check = arr = Array.new(8372, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   913,  2635,   nil,   nil,  4685,   175,   nil,   nil,   257,   339,
    10,   503,   nil,   nil,   nil,    93,   nil,   667,   nil,   nil,
   nil,   nil,   749,   nil,   831,    62,   nil,   nil,   nil,   112,
   nil,   nil,  7373,  1159,   nil,   nil,   nil,   nil,  1241,   nil,
   nil,   nil,   nil,   nil,  1323,     0,     9,   nil,  1569,   nil,
   nil,   nil,  1651,  1733,   nil,   nil,    33,  1897,  1979,   -10,
  2143,  2225,   nil,   nil,   nil,   177,  8139,   179,  6924,  7911,
  2717,   227,    57,   156,  3045,   -50,   nil,   nil,  7003,  3291,
  3373,    57,  3537,  3619,  3701,  3783,  3865,  3947,  4029,  4111,
  4193,  4275,  4357,   nil,  4439,  4521,   nil,  4603,    93,  4767,
  4849,    66,  5013,  5095,  5177,  5259,  5341,  5423,  5505,  5587,
  5669,  5751,  6407,  5915,  5997,  6079,  6161,  6243,   -20,  7225,
  6687,  6845,   -11,    -9,   -28,   nil,    39,   nil,   233,   238,
  7595,   nil,   nil,    38,  2553,   nil,  2389,  2307,   -61,   -14,
   nil,  8097,     1,  3209,   nil,   nil,   -54,   nil,   -24,   nil,
   nil,  7521,  8181,  7742,   182,   285,  7669,   264,  1002,  8055,
   346,   930,   510,   920,   100,   769,    95,  7863,   -19,  8239,
   838,   151,  8210,   756,   168,  8297,   851,   367,  8268,   428,
    21,   592,   203,   674,   121,   995,  1077,   nil,  2799,    14,
     5,     6,   nil,  4931,   nil,  6527,   -44,  7815,   nil,    76,
    87,    -2,   nil,   nil,   nil,    46,  5833,  7299,  7447,   nil,
     8,   nil,  6325,   nil,   nil,  7151,  3455,   nil,   nil,  3127,
  2963,   nil,  2881,   nil,    34,   nil,   -11,  7077,    10,  2471,
   nil,  6608,  6453,   nil,   nil,   nil,  2061,   nil,   nil,  1815,
  1487,   nil,  1405,   nil,  6766,     0,  7959,   nil,   585,   421,
    53,  8007 ]

racc_action_default = [
    -1,  -148,   -40,   -13,  -148,  -148,   -41,   -14,  -148,  -148,
  -148,  -148,   -42,   -28,   -15,  -148,  -114,  -148,   -43,   -36,
   -29,   -16,    -2,   -96,   -92,  -148,   -48,   -37,   -17,    -3,
   -34,   -18,    -4,  -118,   -97,   -32,   -19,    -8,  -148,   -98,
   -94,   -33,   -20,    -9,  -148,  -148,  -108,   -99,  -148,   -35,
   -21,   -10,  -148,  -148,   -38,   -22,   -11,  -148,  -148,  -112,
  -148,  -148,   -39,   -23,   -12,   -50,   -88,   -53,  -148,  -126,
  -118,   -55,  -148,   -54,  -148,    -7,   -93,   -91,   -24,  -148,
   -92,  -148,    -6,  -148,  -148,  -148,  -148,  -148,  -148,  -148,
  -148,  -148,  -148,   -57,  -148,  -148,   -56,  -148,  -148,  -148,
  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,
  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -148,  -119,
  -148,  -148,  -148,  -113,  -148,  -109,  -148,   -46,   -51,   -52,
   -47,  -103,  -104,  -148,  -148,  -100,  -118,  -148,  -148,  -124,
  -101,   -87,   -49,  -148,   -31,   -30,  -148,   252,   -26,   -90,
   -95,    -5,   -89,   -85,   -76,   -65,   -86,   -77,   -66,  -146,
   -78,   -67,   -79,   -68,   -80,   -69,   -58,  -147,  -148,   -81,
   -70,   -59,   -82,   -71,   -60,   -83,   -72,   -61,   -84,   -73,
   -62,   -74,   -63,   -75,   -64,  -148,  -148,  -117,  -148,  -148,
  -148,  -148,  -107,  -148,  -102,  -148,  -148,   -44,  -127,  -148,
  -122,  -141,  -116,   -25,   -27,  -148,  -148,  -121,  -120,  -128,
  -133,  -135,  -148,  -111,  -110,   -45,  -148,  -105,  -115,  -148,
  -148,  -145,  -148,  -139,  -141,  -143,  -148,  -148,    -8,  -148,
  -136,  -148,  -148,  -125,  -123,  -142,  -148,  -140,  -144,  -148,
  -148,  -134,  -148,  -106,  -148,    -8,  -131,  -137,  -148,  -148,
  -138,  -132 ]

racc_goto_table = [
    22,    29,   118,   143,    77,   125,   140,   127,    15,   209,
   211,   228,   123,   124,   203,   200,   210,   122,   237,   238,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,
   nil,   230,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   146,
   233,   234,   nil,   235,   245,   nil,   nil,   nil,   nil,   nil,
   241,   nil,   nil,   nil,   nil,   188,   189,   nil,   138,   139,
   149,   nil,   nil,   247,   nil,   nil,   nil,   nil,   144,   nil,
   140,   nil,   nil,   nil,   nil,    82,   nil,   nil,   nil,   nil,
   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   196,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   185,   nil,
   144,   144,   nil,   nil,   190,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,    82,
   nil,   nil,   nil,   nil,   201,   nil,   185,   nil,    82,   213,
   214,   127,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   242,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    65,   nil,   nil,    66,    67,   248,
   nil,    68,    69,   nil,    71,   nil,   nil,   nil,   nil,   nil,
    73,   nil,   nil,   nil,   nil,   nil,   185,    78,   nil,   nil,
   nil,    82,   nil,   nil,   nil,   nil,   119,   nil,   nil,   nil,
   nil,   120,   nil,   nil,   nil,   nil,   nil,   121,   nil,   nil,
   nil,   128,   nil,   nil,   nil,   129,   130,   nil,   nil,   nil,
   nil,   144,   nil,   141,   142,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   119,   144,   nil,   nil,   nil,   nil,   250,
    82,   nil,   nil,    78,   nil,   151,   152,   153,   154,   155,
   156,   157,   158,   159,   160,   161,   nil,   162,   163,   nil,
   164,   165,   166,   167,   nil,   169,   170,   171,   172,   173,
   174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
   184,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,   nil,   119,
   197,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   207,   208,
   nil,    78,   nil,   nil,   nil,   nil,   215,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   227,
   nil,   nil,   nil,   nil,   nil,   231,   nil,   nil,   nil,   232,
   nil,   nil,    78,    78,   nil,    78,   nil,   nil,   nil,   nil,
   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,   244,
   nil,   nil,   227,   246,   nil,    78,   nil,   nil,   nil,   nil,
   nil,   nil,   251 ]

racc_goto_check = [
     2,     3,    36,    23,    26,    24,    30,    20,     1,    21,
    39,     5,    31,    34,    22,    37,    38,     8,    40,    42,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
    21,    21,   nil,    21,     5,   nil,   nil,   nil,   nil,   nil,
    21,   nil,   nil,   nil,   nil,    23,    23,   nil,     3,     3,
    26,   nil,   nil,    21,   nil,   nil,   nil,   nil,     2,   nil,
    30,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    36,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
     2,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,
   nil,   nil,   nil,   nil,     3,   nil,     2,   nil,     2,    24,
    24,    20,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,     4,     4,    23,
   nil,     4,     4,   nil,     4,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,     2,     4,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,     4,   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,
   nil,     2,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,     2,   nil,   nil,   nil,   nil,     3,
     2,   nil,   nil,     4,   nil,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,   nil,     4,     4,   nil,
     4,     4,     4,     4,   nil,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,     4,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
   nil,     4,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     4,
   nil,   nil,     4,     4,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,     4,     4,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     8,     0,     1,   173,  -195,   nil,   nil,   -28,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -39,  -179,  -134,   -65,   -41,   nil,   -20,   nil,   nil,   nil,
   -53,   -33,   nil,   nil,   -33,   nil,   -31,  -124,  -173,  -179,
  -206,   nil,  -205,   nil ]

racc_goto_default = [
   nil,   nil,    74,    75,    32,    37,    43,    51,    56,    64,
     3,     7,    14,    21,    28,    31,    36,    42,    50,    55,
    63,    76,   nil,   nil,   nil,    25,   nil,    34,    39,    47,
   135,    59,   131,   132,   nil,    16,   nil,   nil,   nil,   nil,
   223,   224,   225,   221 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 90, :_reduce_1,
  1, 90, :_reduce_2,
  1, 90, :_reduce_3,
  1, 92, :_reduce_4,
  3, 92, :_reduce_5,
  2, 92, :_reduce_6,
  2, 92, :_reduce_7,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 110, :_reduce_24,
  3, 110, :_reduce_25,
  0, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 96, :_reduce_32,
  1, 96, :_reduce_33,
  1, 96, :_reduce_34,
  1, 96, :_reduce_35,
  1, 96, :_reduce_36,
  1, 96, :_reduce_37,
  1, 96, :_reduce_38,
  1, 96, :_reduce_39,
  1, 96, :_reduce_40,
  1, 96, :_reduce_41,
  1, 96, :_reduce_42,
  1, 96, :_reduce_43,
  3, 101, :_reduce_44,
  3, 113, :_reduce_45,
  1, 113, :_reduce_46,
  2, 105, :_reduce_47,
  1, 109, :_reduce_48,
  2, 100, :_reduce_49,
  2, 100, :_reduce_50,
  2, 100, :_reduce_51,
  2, 100, :_reduce_52,
  2, 100, :_reduce_53,
  2, 100, :_reduce_54,
  2, 100, :_reduce_55,
  2, 100, :_reduce_56,
  2, 100, :_reduce_57,
  3, 100, :_reduce_58,
  3, 100, :_reduce_59,
  3, 100, :_reduce_60,
  3, 100, :_reduce_61,
  3, 100, :_reduce_62,
  3, 100, :_reduce_63,
  3, 100, :_reduce_64,
  3, 100, :_reduce_65,
  3, 100, :_reduce_66,
  3, 100, :_reduce_67,
  3, 100, :_reduce_68,
  3, 100, :_reduce_69,
  3, 100, :_reduce_70,
  3, 100, :_reduce_71,
  3, 100, :_reduce_72,
  3, 100, :_reduce_73,
  3, 100, :_reduce_74,
  3, 100, :_reduce_75,
  3, 100, :_reduce_76,
  3, 100, :_reduce_77,
  3, 100, :_reduce_78,
  3, 100, :_reduce_79,
  3, 100, :_reduce_80,
  3, 100, :_reduce_81,
  3, 100, :_reduce_82,
  3, 100, :_reduce_83,
  3, 100, :_reduce_84,
  3, 100, :_reduce_85,
  3, 100, :_reduce_86,
  2, 100, :_reduce_87,
  2, 100, :_reduce_88,
  3, 100, :_reduce_89,
  3, 99, :_reduce_90,
  2, 99, :_reduce_91,
  0, 115, :_reduce_92,
  1, 115, :_reduce_93,
  1, 114, :_reduce_94,
  3, 114, :_reduce_95,
  1, 97, :_reduce_96,
  1, 97, :_reduce_97,
  1, 97, :_reduce_98,
  1, 97, :_reduce_99,
  2, 97, :_reduce_100,
  2, 97, :_reduce_101,
  2, 119, :_reduce_102,
  1, 119, :_reduce_103,
  1, 119, :_reduce_104,
  3, 121, :_reduce_105,
  5, 122, :_reduce_106,
  3, 117, :_reduce_107,
  0, 123, :_reduce_108,
  1, 123, :_reduce_109,
  3, 123, :_reduce_110,
  3, 123, :_reduce_111,
  1, 98, :_reduce_112,
  2, 98, :_reduce_113,
  1, 98, :_reduce_114,
  4, 120, :_reduce_115,
  4, 124, :_reduce_116,
  3, 116, :_reduce_117,
  0, 125, :_reduce_118,
  1, 125, :_reduce_119,
  3, 125, :_reduce_120,
  3, 125, :_reduce_121,
  3, 103, :_reduce_122,
  5, 103, :_reduce_123,
  0, 126, :_reduce_124,
  3, 126, :_reduce_125,
  2, 104, :_reduce_126,
  3, 118, :_reduce_127,
  4, 106, :_reduce_128,
  5, 107, :_reduce_129,
  7, 107, :_reduce_130,
  7, 107, :_reduce_131,
  9, 107, :_reduce_132,
  4, 108, :_reduce_133,
  6, 108, :_reduce_134,
  1, 127, :_reduce_135,
  2, 127, :_reduce_136,
  4, 128, :_reduce_137,
  5, 129, :_reduce_138,
  1, 130, :_reduce_139,
  2, 130, :_reduce_140,
  0, 131, :_reduce_141,
  2, 131, :_reduce_142,
  1, 132, :_reduce_143,
  2, 132, :_reduce_144,
  5, 102, :_reduce_145,
  3, 102, :_reduce_146,
  3, 102, :_reduce_147 ]

racc_reduce_n = 148

racc_shift_n = 252

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :THEN => 4,
  :UNLESS => 5,
  :NUMBER => 6,
  :STRING => 7,
  :REGEX => 8,
  :TRUE => 9,
  :FALSE => 10,
  :YES => 11,
  :NO => 12,
  :ON => 13,
  :OFF => 14,
  :IDENTIFIER => 15,
  :PROPERTY_ACCESS => 16,
  :CODE => 17,
  :PARAM => 18,
  :NEW => 19,
  :RETURN => 20,
  :TRY => 21,
  :CATCH => 22,
  :FINALLY => 23,
  :THROW => 24,
  :BREAK => 25,
  :CONTINUE => 26,
  :FOR => 27,
  :IN => 28,
  :WHILE => 29,
  :SWITCH => 30,
  :WHEN => 31,
  :DELETE => 32,
  :INSTANCEOF => 33,
  :TYPEOF => 34,
  :SUPER => 35,
  :NEWLINE => 36,
  :COMMENT => 37,
  :JS => 38,
  :INDENT => 39,
  :OUTDENT => 40,
  :UMINUS => 41,
  :NOT => 42,
  "!" => 43,
  "!!" => 44,
  "~" => 45,
  "++" => 46,
  "--" => 47,
  "*" => 48,
  "/" => 49,
  "%" => 50,
  "+" => 51,
  "-" => 52,
  "<<" => 53,
  ">>" => 54,
  ">>>" => 55,
  "&" => 56,
  "|" => 57,
  "^" => 58,
  "<=" => 59,
  "<" => 60,
  ">" => 61,
  ">=" => 62,
  "==" => 63,
  "!=" => 64,
  :IS => 65,
  :AINT => 66,
  "&&" => 67,
  "||" => 68,
  :AND => 69,
  :OR => 70,
  "-=" => 71,
  "+=" => 72,
  "/=" => 73,
  "*=" => 74,
  "." => 75,
  ":" => 76,
  "||:" => 77,
  "&&:" => 78,
  "\n" => 79,
  ";" => 80,
  "=>" => 81,
  "," => 82,
  "[" => 83,
  "]" => 84,
  "{" => 85,
  "}" => 86,
  "(" => 87,
  ")" => 88 }

racc_nt_base = 89

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "THEN",
  "UNLESS",
  "NUMBER",
  "STRING",
  "REGEX",
  "TRUE",
  "FALSE",
  "YES",
  "NO",
  "ON",
  "OFF",
  "IDENTIFIER",
  "PROPERTY_ACCESS",
  "CODE",
  "PARAM",
  "NEW",
  "RETURN",
  "TRY",
  "CATCH",
  "FINALLY",
  "THROW",
  "BREAK",
  "CONTINUE",
  "FOR",
  "IN",
  "WHILE",
  "SWITCH",
  "WHEN",
  "DELETE",
  "INSTANCEOF",
  "TYPEOF",
  "SUPER",
  "NEWLINE",
  "COMMENT",
  "JS",
  "INDENT",
  "OUTDENT",
  "UMINUS",
  "NOT",
  "\"!\"",
  "\"!!\"",
  "\"~\"",
  "\"++\"",
  "\"--\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<<\"",
  "\">>\"",
  "\">>>\"",
  "\"&\"",
  "\"|\"",
  "\"^\"",
  "\"<=\"",
  "\"<\"",
  "\">\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "IS",
  "AINT",
  "\"&&\"",
  "\"||\"",
  "AND",
  "OR",
  "\"-=\"",
  "\"+=\"",
  "\"/=\"",
  "\"*=\"",
  "\".\"",
  "\":\"",
  "\"||:\"",
  "\"&&:\"",
  "\"\\n\"",
  "\";\"",
  "\"=>\"",
  "\",\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Root",
  "Terminator",
  "Expressions",
  "Expression",
  "PureExpression",
  "Statement",
  "Literal",
  "Value",
  "Call",
  "Code",
  "Operation",
  "Assign",
  "If",
  "Try",
  "Throw",
  "Return",
  "While",
  "For",
  "Switch",
  "Comment",
  "Block",
  "Outdent",
  "Then",
  "AssignObj",
  "ParamList",
  "CodeBody",
  "Array",
  "Object",
  "Parenthetical",
  "Accessor",
  "Invocation",
  "Index",
  "Slice",
  "AssignList",
  "Super",
  "ArgList",
  "Catch",
  "Whens",
  "When",
  "ElsIf",
  "ElsIfs",
  "ElseBody",
  "IfEnd" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_1(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_2(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_4(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 56)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_24(val, _values, result)
     result = Expressions.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_25(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_32(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 113)
  def _reduce_33(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_34(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_35(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_36(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_37(val, _values, result)
     result = LiteralNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_38(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_39(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_40(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_41(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_42(val, _values, result)
     result = LiteralNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_43(val, _values, result)
     result = LiteralNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_44(val, _values, result)
     result = AssignNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_45(val, _values, result)
     result = AssignNode.new(val[0], val[2], :object) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 134)
  def _reduce_46(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 139)
  def _reduce_47(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_48(val, _values, result)
     result = CommentNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_49(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_50(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_51(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_52(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_53(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_54(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_55(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 158)
  def _reduce_56(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 159)
  def _reduce_57(val, _values, result)
     result = OpNode.new(val[1], val[0], nil, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_58(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_59(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_60(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_61(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_62(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_63(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_64(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 170)
  def _reduce_65(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 172)
  def _reduce_66(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_67(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_68(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 176)
  def _reduce_69(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 177)
  def _reduce_70(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 178)
  def _reduce_71(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_72(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 181)
  def _reduce_73(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 182)
  def _reduce_74(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 183)
  def _reduce_75(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 184)
  def _reduce_76(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 186)
  def _reduce_77(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 187)
  def _reduce_78(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 188)
  def _reduce_79(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 189)
  def _reduce_80(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_81(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 192)
  def _reduce_82(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 193)
  def _reduce_83(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 194)
  def _reduce_84(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 195)
  def _reduce_85(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 196)
  def _reduce_86(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 198)
  def _reduce_87(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 199)
  def _reduce_88(val, _values, result)
     result = OpNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 200)
  def _reduce_89(val, _values, result)
     result = OpNode.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 205)
  def _reduce_90(val, _values, result)
     result = CodeNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 206)
  def _reduce_91(val, _values, result)
     result = CodeNode.new([], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 211)
  def _reduce_92(val, _values, result)
     result = Expressions.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 212)
  def _reduce_93(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 217)
  def _reduce_94(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 218)
  def _reduce_95(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 223)
  def _reduce_96(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 224)
  def _reduce_97(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 225)
  def _reduce_98(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 226)
  def _reduce_99(val, _values, result)
     result = ValueNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 227)
  def _reduce_100(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 228)
  def _reduce_101(val, _values, result)
     result = ValueNode.new(val[0], [val[1]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 233)
  def _reduce_102(val, _values, result)
     result = AccessorNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 234)
  def _reduce_103(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 235)
  def _reduce_104(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 240)
  def _reduce_105(val, _values, result)
     result = IndexNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 245)
  def _reduce_106(val, _values, result)
     result = SliceNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 250)
  def _reduce_107(val, _values, result)
     result = ObjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 255)
  def _reduce_108(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 256)
  def _reduce_109(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 257)
  def _reduce_110(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 258)
  def _reduce_111(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 263)
  def _reduce_112(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 264)
  def _reduce_113(val, _values, result)
     result = val[1].new_instance 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 265)
  def _reduce_114(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 270)
  def _reduce_115(val, _values, result)
     result = CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 275)
  def _reduce_116(val, _values, result)
     result = CallNode.new(:super, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 280)
  def _reduce_117(val, _values, result)
     result = ArrayNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 285)
  def _reduce_118(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 286)
  def _reduce_119(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 287)
  def _reduce_120(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 288)
  def _reduce_121(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 293)
  def _reduce_122(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 295)
  def _reduce_123(val, _values, result)
     result = TryNode.new(val[1], val[2][0], val[2][1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 300)
  def _reduce_124(val, _values, result)
     result = [nil, nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 301)
  def _reduce_125(val, _values, result)
     result = [val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 306)
  def _reduce_126(val, _values, result)
     result = ThrowNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 311)
  def _reduce_127(val, _values, result)
     result = ParentheticalNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 316)
  def _reduce_128(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 322)
  def _reduce_129(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 325)
  def _reduce_130(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], nil, val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 328)
  def _reduce_131(val, _values, result)
     result = ForNode.new(val[0], val[4], val[2], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 332)
  def _reduce_132(val, _values, result)
     result = ForNode.new(val[0], val[6], val[2], val[8], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 338)
  def _reduce_133(val, _values, result)
     result = val[3].rewrite_condition(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 340)
  def _reduce_134(val, _values, result)
     result = val[3].rewrite_condition(val[1]).add_else(val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 345)
  def _reduce_135(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 346)
  def _reduce_136(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 351)
  def _reduce_137(val, _values, result)
     result = IfNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 360)
  def _reduce_138(val, _values, result)
     result = IfNode.new(val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 365)
  def _reduce_139(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 366)
  def _reduce_140(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 371)
  def _reduce_141(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 372)
  def _reduce_142(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 377)
  def _reduce_143(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 378)
  def _reduce_144(val, _values, result)
     result = val[0].add_else(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 384)
  def _reduce_145(val, _values, result)
     result = IfNode.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 385)
  def _reduce_146(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 386)
  def _reduce_147(val, _values, result)
     result = IfNode.new(val[2], Expressions.new([val[0]]), nil, {:statement => true, :invert => true}) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
