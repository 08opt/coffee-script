# TODO: switch/case statements
# Better block delimiters
# Flow: For loops, while loops, etc.
# Exceptions: throw catch.
# When an if statement is the last thing in a function, need to be able to
# send the return down to the last expression in the if and else bodies.

# Functions:
square: x => x * x.

sum: x, y => x + y.

odd: x => x % 2 is 0.

even: x => x % 2 aint 0.

run_loop: =>
  fire_events( e => e.stopPropagation(). )
  listen()
  wait().

# Objects:
object_literal: {one: 1, two: 2, three: 3}

multiline_object: {
  pi: 3.14159
  list: [1, 2, 3, 4]
  three: new Idea()
  inner_obj: {
    freedom: => _.freedom().
  }
}

# Arrays:
stooges : [{moe: 45}, {curly: 43}, {larry: 46}]

exponents : [x => x., x => x * x., x => x * x * x.]

# Conditionals and ternaries.
if submarine.shields_up
  full_speed_ahead()
  weapons.fire_torpedos()
else
  run_away().

eldest: if 25 > 21 then liz else marge.

# Returning early:
race: =>
  run()
  walk()
  crawl()
  if tired then return sleep().
  race().

# Conditional operators:
good ||= evil
wine &&= cheese

# Nested property access and calls.
((moon.turn(360))).shapes[3].move({x: 45, y: 30}).position

# Try/Catch/Finally.
try
  all_hell_breaks_loose()
  dogs_and_cats_living_together()
catch error
  print( error ).

try all_hell_breaks_loose() catch error then print(error).